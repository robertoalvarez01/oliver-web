{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\oliver-2\\\\sitio-desa\\\\src\\\\components\\\\Login\\\\Register.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport Error from \"../Error\";\nimport LoginStyle from './Login.module.css';\nimport { connect } from 'react-redux';\nimport * as usuarioActions from '../../../store/actions/usuarioActions';\nimport Loader from '../Loader';\n\nvar Register = function Register(props) {\n  _s();\n\n  var _useState = useState({\n    nombre: '',\n    telefono: '',\n    address: '',\n    lat: '',\n    lon: '',\n    email: '',\n    password: ''\n  }),\n      formRegisterValues = _useState[0],\n      setFormRegisterValues = _useState[1];\n\n  var _useState2 = useState(false),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleChangeLogin = function handleChangeLogin(event) {\n    setFormRegisterValues(_objectSpread(_objectSpread({}, formRegisterValues), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleSubmitLogin = function handleSubmitLogin(event) {\n    event.preventDefault();\n\n    if (formRegisterValues.nombre.trim() === '' || formRegisterValues.telefono.trim() === '' || formRegisterValues.address.trim() === '' || formRegisterValues.lat === '' || formRegisterValues.lon === '' || formRegisterValues.email.trim() === '' || formRegisterValues.password.trim() === '') {\n      setError('Es necesario completar todos los campos');\n      return false;\n    }\n\n    setError(false);\n    return props.register(formRegisterValues);\n  };\n\n  var handleSelect = function handleSelect(address) {\n    geocodeByAddress(address).then(function (results) {\n      return getLatLng(results[0]);\n    }).then(function (latLng) {\n      setFormRegisterValues(_objectSpread(_objectSpread({}, formRegisterValues), {}, {\n        address: address,\n        lat: latLng.lat,\n        lon: latLng.lng\n      }));\n    })[\"catch\"](function (error) {\n      return console.error('Error', error);\n    });\n  };\n\n  var handleChange = function handleChange(address) {\n    setFormRegisterValues(_objectSpread(_objectSpread({}, formRegisterValues), {}, {\n      address: address\n    }));\n  };\n\n  var habilitarLogin = function habilitarLogin() {\n    props.showLogin();\n  };\n\n  console.log(props);\n  return __jsx(\"div\", {\n    className: LoginStyle.login__container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"h6\", {\n    className: LoginStyle.title__login + ' ' + \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Registrate\"), props.error ? __jsx(Error, {\n    message: props.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 28\n    }\n  }) : null, props.logueado ? __jsx(\"div\", {\n    className: \"alert alert-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 31\n    }\n  }, \"Bienvenido/a\") : __jsx(React.Fragment, null, __jsx(\"form\", {\n    className: LoginStyle.form + ' ' + \"form-group\",\n    name: \"form-login\",\n    id: \"form-login\",\n    onSubmit: handleSubmitLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    type: \"text\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"nombre\",\n    name: \"nombre\",\n    value: formRegisterValues.nombre,\n    onChange: handleChangeLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"telefono\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Telefono\"), __jsx(\"input\", {\n    type: \"number\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"telefono\",\n    name: \"telefono\",\n    value: formRegisterValues.telefono,\n    onChange: handleChangeLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"ubicacion\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Ubicaci\\xF3n\"), __jsx(PlacesAutocomplete, {\n    value: formRegisterValues.address,\n    onChange: handleChange,\n    onSelect: handleSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, function (_ref) {\n    var getInputProps = _ref.getInputProps,\n        suggestions = _ref.suggestions,\n        getSuggestionItemProps = _ref.getSuggestionItemProps,\n        loading = _ref.loading;\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, __jsx(\"input\", _extends({\n      className: LoginStyle.input + ' ' + \"form-control\",\n      id: \"ubicacion\"\n    }, getInputProps({\n      placeholder: 'Buscá tu dirección ...'\n    }), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    })), __jsx(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, loading && __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 49\n      }\n    }, \"Loading...\"), suggestions.map(function (suggestion, key) {\n      var className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      var style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer',\n        margin: '10px',\n        padding: '5px'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer',\n        margin: '10px',\n        padding: '5px'\n      };\n      return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n        className: className,\n        style: style,\n        key: key\n      }), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 45\n        }\n      }), __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 49\n        }\n      }, suggestion.description));\n    })));\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"emal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"email\",\n    name: \"email\",\n    value: formRegisterValues.email,\n    onChange: handleChangeLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"Contrase\\xF1a\"), __jsx(\"input\", {\n    type: \"password\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"password\",\n    name: \"password\",\n    value: formRegisterValues.password,\n    onChange: handleChangeLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }), props.loading ? __jsx(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 38\n    }\n  }, __jsx(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 67\n    }\n  })) : __jsx(\"input\", {\n    type: \"submit\",\n    className: \"boton bg-yellow mb-1\",\n    value: \"Registrarme\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 83\n    }\n  })), __jsx(\"section\", {\n    className: LoginStyle.registerInLogin + ' ' + \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"\\xBFYa tenes cuenta?\", __jsx(\"span\", {\n    className: LoginStyle.registerLink,\n    onClick: habilitarLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 67\n    }\n  }, \" Ingres\\xE1\")))));\n};\n\n_s(Register, \"hqzaLu0M4obJ+oDpMRZvvKShSUI=\");\n\n_c = Register;\n\nvar mapStateToProps = function mapStateToProps(reducers) {\n  return reducers.usuarioReducer;\n};\n\nexport default connect(mapStateToProps, usuarioActions)(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/franc/Documents/oliver-2/sitio-desa/src/components/Login/Register.js"],"names":["React","useState","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","Error","LoginStyle","connect","usuarioActions","Loader","Register","props","nombre","telefono","address","lat","lon","email","password","formRegisterValues","setFormRegisterValues","error","setError","handleChangeLogin","event","target","name","value","handleSubmitLogin","preventDefault","trim","register","handleSelect","then","results","latLng","lng","console","handleChange","habilitarLogin","showLogin","log","login__container","title__login","logueado","form","label","input","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","key","className","active","style","backgroundColor","cursor","margin","padding","description","registerInLogin","registerLink","mapStateToProps","reducers","usuarioReducer"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport PlacesAutocomplete,{geocodeByAddress,geocodeByPlaceId,getLatLng} from 'react-places-autocomplete';\r\nimport Error from \"../Error\";\r\nimport LoginStyle from './Login.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as usuarioActions from '../../../store/actions/usuarioActions';\r\nimport Loader from '../Loader';\r\n\r\nconst Register = (props) => {\r\n\r\n    const [formRegisterValues, setFormRegisterValues] = useState({\r\n        nombre:'',\r\n        telefono:'',\r\n        address:'',\r\n        lat:'',\r\n        lon:'',\r\n        email:'',\r\n        password:''\r\n    });\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleChangeLogin = event=>{\r\n        setFormRegisterValues({\r\n            ...formRegisterValues,\r\n            [event.target.name]:event.target.value\r\n        })\r\n    };\r\n\r\n    const handleSubmitLogin = event=>{\r\n        event.preventDefault();\r\n        if(formRegisterValues.nombre.trim()==='' || formRegisterValues.telefono.trim() === '' || \r\n        formRegisterValues.address.trim()==='' || formRegisterValues.lat === '' || formRegisterValues.lon === '' || formRegisterValues.email.trim()==='' || formRegisterValues.password.trim()===''){\r\n            setError('Es necesario completar todos los campos');\r\n            return false;\r\n        }\r\n        setError(false);\r\n        return props.register(formRegisterValues);\r\n    }\r\n\r\n    const handleSelect = address => {\r\n        geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng =>{\r\n            setFormRegisterValues({\r\n                ...formRegisterValues,\r\n                address,\r\n                lat:latLng.lat,\r\n                lon:latLng.lng\r\n            });\r\n        })\r\n        .catch(error => console.error('Error', error));\r\n    };\r\n    const handleChange = address => {\r\n        setFormRegisterValues({\r\n            ...formRegisterValues,\r\n            address\r\n        });\r\n    };\r\n\r\n    const habilitarLogin = ()=>{\r\n        props.showLogin();\r\n    }\r\n    console.log(props);\r\n\r\n    return (\r\n        <div className={LoginStyle.login__container}>\r\n            <h6 className={LoginStyle.title__login + ' ' + `text-center`}>Registrate</h6>\r\n            {(props.error)?<Error message={props.error}/>:null}\r\n            {(props.logueado)?<div className=\"alert alert-success\">Bienvenido/a</div>:\r\n            <>\r\n                <form className={LoginStyle.form + ' ' + `form-group`} name=\"form-login\" id=\"form-login\" onSubmit={handleSubmitLogin}>\r\n                    <label className={LoginStyle.label} htmlFor=\"nombre\">Nombre</label>\r\n                    <input type=\"text\"  className={LoginStyle.input + ' ' + `form-control`} id=\"nombre\" name=\"nombre\" value={formRegisterValues.nombre} onChange={handleChangeLogin}/>\r\n                    \r\n                    <label className={LoginStyle.label} htmlFor=\"telefono\">Telefono</label>\r\n                    <input type=\"number\"  className={LoginStyle.input + ' ' + `form-control`} id=\"telefono\" name=\"telefono\" value={formRegisterValues.telefono} onChange={handleChangeLogin}/>\r\n                    \r\n                    <label className={LoginStyle.label} htmlFor=\"ubicacion\">Ubicación</label>\r\n                    <PlacesAutocomplete value={formRegisterValues.address} onChange={handleChange} onSelect={handleSelect}>\r\n                        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                            <div>\r\n                                <input\r\n                                    className={LoginStyle.input + ' ' + `form-control`} id=\"ubicacion\"\r\n                                    {...getInputProps({\r\n                                        placeholder: 'Buscá tu dirección ...',\r\n                                    })}\r\n                                />\r\n                                <div className=\"autocomplete-dropdown-container\">\r\n                                    {loading && <div>Loading...</div>}\r\n                                    {suggestions.map((suggestion,key) => {\r\n                                        const className = suggestion.active\r\n                                        ? 'suggestion-item--active'\r\n                                        : 'suggestion-item';\r\n                                        // inline style for demonstration purpose\r\n                                        const style = suggestion.active\r\n                                        ? { backgroundColor: '#fafafa', cursor: 'pointer',margin:'10px',padding:'5px' }\r\n                                        : { backgroundColor: '#ffffff', cursor: 'pointer',margin:'10px',padding:'5px' };\r\n                                        return (\r\n                                            <div\r\n                                                {...getSuggestionItemProps(suggestion, {\r\n                                                className,\r\n                                                style,\r\n                                                key\r\n                                                })}\r\n                                            >\r\n                                                <span>{suggestion.description}</span>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </PlacesAutocomplete>\r\n                    {/* <input type=\"text\"  className={LoginStyle.input + ' ' + `form-control`} id=\"ubicacion\" name=\"ubicacion\" value={formRegisterValues.ubicacion} onChange={handleChangeLogin}/>\r\n                    */}\r\n                    <label className={LoginStyle.label} htmlFor=\"emal\">Email</label>\r\n                    <input type=\"email\"  className={LoginStyle.input + ' ' + `form-control`} id=\"email\" name=\"email\" value={formRegisterValues.email} onChange={handleChangeLogin}/>\r\n                    \r\n                    <label className={LoginStyle.label} htmlFor=\"password\">Contraseña</label>\r\n                    <input type=\"password\"  className={LoginStyle.input + ' ' + `form-control`} id=\"password\" name=\"password\" value={formRegisterValues.password} onChange={handleChangeLogin}/>\r\n                    \r\n                    <br/>\r\n                    {(props.loading)?<div className=\"text-center\"><Loader/></div>:<input type=\"submit\" className=\"boton bg-yellow mb-1\" value=\"Registrarme\"/>}\r\n                </form>\r\n                <section className={LoginStyle.registerInLogin + ' ' + `text-center`}>\r\n                    <span className=\"text-muted\">¿Ya tenes cuenta?<span className={LoginStyle.registerLink} onClick={habilitarLogin}> Ingresá</span></span>\r\n                </section>\r\n            </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = reducers=>{\r\n    return reducers.usuarioReducer;\r\n}\r\n\r\nexport default connect(mapStateToProps,usuarioActions)(Register);"]},"metadata":{},"sourceType":"module"}