{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport FiltroStyle from './Filtro.module.css';\nimport { faTimes, faBroom, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from 'react-redux';\nimport * as productosActions from '../../../store/actions/productosActions';\nimport * as marcasActions from '../../../store/actions/marcasActions';\nimport * as categoriasActions from '../../../store/actions/categoriasAction';\nimport * as subcategoriasActions from '../../../store/actions/subcategoriasAction';\nimport Loader from '../Loader';\nconst {\n  traerTodas: marcasTraerTodas\n} = marcasActions;\nconst {\n  aplicarFiltro,\n  quitarFiltro,\n  restablecerFiltros\n} = productosActions;\nconst {\n  traerTodas: categoriasTraerTodas\n} = categoriasActions;\nconst {\n  traerTodas: subcategoriaTraerTodas\n} = subcategoriasActions;\n\nconst Filtro = props => {\n  //loop de efecto para ejecutar solo una vez cuando el componente se monte en el caso de que se este filtrando directo desde la url\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    try {\n      if (props.marcasReducer.marcas.length === 0) {\n        await props.marcasTraerTodas();\n      }\n\n      if (props.categoriasReducer.categorias.length === 0) {\n        await props.categoriasTraerTodas();\n      }\n\n      if (props.subcategoriaReducer.subcategorias.length === 0) {\n        await props.subcategoriaTraerTodas();\n      }\n\n      if (props.location !== '/productos') {\n        activarFiltroPorUrl();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const activarFiltroPorUrl = () => {\n    if (props.query.search) {\n      return activarFiltro(Object.keys(props.query)[0], props.query.search);\n    } else {\n      return activarFiltro(props.query.type, props.query.index[1]);\n    }\n  };\n\n  const activarFiltro = (tipoFiltro, key, fromModal = false) => {\n    props.aplicarFiltro(tipoFiltro, key);\n  };\n\n  const limpiarFiltro = tipo => {\n    props.quitarFiltro(tipo);\n  };\n\n  const closeFiltrosMobile = () => {\n    document.getElementsByClassName(FiltroStyle.filtros__contanier)[0].classList.remove(FiltroStyle.show_filtros);\n  };\n\n  const showFiltros = () => {\n    let element = document.getElementsByClassName(FiltroStyle.filtros__contanier)[0];\n    element.classList.toggle(FiltroStyle.show);\n    document.getElementById('iconFiltroContainer').classList.toggle(FiltroStyle.rotar);\n  };\n\n  const handleRestablecer = () => {\n    props.restablecerFiltros();\n  };\n\n  const {\n    filtrando,\n    filtros\n  } = props.productosReducer;\n  return __jsx(\"div\", {\n    className: FiltroStyle.filtros__contanier\n  }, __jsx(\"button\", {\n    className: FiltroStyle.btn_close_filtro,\n    onClick: showFiltros\n  }, __jsx(FontAwesomeIcon, {\n    id: \"iconFiltroContainer\",\n    icon: faChevronRight\n  })), __jsx(\"div\", null, props.categoriasReducer.categorias.length == 0 || props.subcategoriaReducer.subcategorias.length == 0 || props.marcasReducer.marcas.length == 0 ? __jsx(Loader, null) : __jsx(React.Fragment, null, filtrando ? __jsx(\"button\", {\n    className: \"boton bg-yellow mb-3\",\n    onClick: handleRestablecer\n  }, __jsx(FontAwesomeIcon, {\n    icon: faBroom\n  }), \" Limpiar Filtros\") : null, __jsx(FontAwesomeIcon, {\n    icon: faTimes,\n    className: FiltroStyle.cerrar_filtro_mobile,\n    onClick: closeFiltrosMobile\n  }), __jsx(\"h4\", {\n    className: FiltroStyle.titulo_filtros\n  }, \"Mascota\"), __jsx(\"ul\", {\n    className: FiltroStyle.lista\n  }, props.categoriasReducer.categorias.map(cat => __jsx(\"li\", {\n    key: cat.idCategoria\n  }, __jsx(\"div\", {\n    className: FiltroStyle.item_filtro + ` ${filtros.categoria == cat.idCategoria ? FiltroStyle.active : ''}`,\n    onClick: () => activarFiltro('categoria', `${cat.idCategoria}`)\n  }, __jsx(\"span\", {\n    className: \"text-muted\"\n  }, cat.categoria)), __jsx(FontAwesomeIcon, {\n    icon: faTimes,\n    className: FiltroStyle.icon_close_filtro + ` ${filtros.categoria == cat.idCategoria ? '' : 'd-none'}`,\n    onClick: () => limpiarFiltro('categoria')\n  })))), __jsx(\"h4\", {\n    className: FiltroStyle.titulo_filtros\n  }, \"Alimentos\"), __jsx(\"ul\", {\n    className: FiltroStyle.lista\n  }, props.subcategoriaReducer.subcategorias.map(sc => __jsx(\"li\", {\n    key: sc.idSubCategoria\n  }, __jsx(\"div\", {\n    className: FiltroStyle.item_filtro + ` ${filtros.subcategoria == sc.idSubCategoria ? FiltroStyle.active : ''}`,\n    onClick: () => activarFiltro('subcategoria', `${sc.idSubCategoria}`)\n  }, __jsx(\"span\", {\n    className: \"text-muted\"\n  }, sc.subcategoria)), __jsx(FontAwesomeIcon, {\n    icon: faTimes,\n    className: FiltroStyle.icon_close_filtro + ` ${filtros.subcategoria == sc.idSubCategoria ? '' : 'd-none'}`,\n    onClick: () => limpiarFiltro('subcategoria')\n  })))), __jsx(\"h4\", {\n    className: FiltroStyle.titulo_filtros\n  }, \"Marca\"), __jsx(\"ul\", {\n    id: \"listaMarca\",\n    className: FiltroStyle.sinBorderBottom + ' ' + FiltroStyle.lista + ` ${FiltroStyle.listaMarca}`\n  }, props.marcasReducer.marcas.map((marca, key) => __jsx(\"li\", {\n    key: marca.idMarca\n  }, __jsx(\"div\", {\n    className: FiltroStyle.item_filtro + ` ${filtros.marca == marca.idMarca ? FiltroStyle.active : ''}`,\n    onClick: () => activarFiltro('marca', `${marca.idMarca}`)\n  }, __jsx(\"span\", {\n    className: \"text-muted\"\n  }, marca.marca)), __jsx(FontAwesomeIcon, {\n    icon: faTimes,\n    className: FiltroStyle.icon_close_filtro + ` ${filtros.marca == marca.idMarca ? '' : 'd-none'}`,\n    onClick: () => limpiarFiltro('marca')\n  })))))));\n};\n\nconst mapStateToProps = ({\n  marcasReducer,\n  productosReducer,\n  categoriasReducer,\n  subcategoriaReducer\n}) => {\n  return {\n    marcasReducer,\n    productosReducer,\n    categoriasReducer,\n    subcategoriaReducer\n  };\n};\n\nconst mapDispatchToProps = {\n  marcasTraerTodas,\n  categoriasTraerTodas,\n  subcategoriaTraerTodas,\n  aplicarFiltro,\n  quitarFiltro,\n  restablecerFiltros\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filtro);","map":null,"metadata":{},"sourceType":"module"}