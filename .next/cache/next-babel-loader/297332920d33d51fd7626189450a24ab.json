{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API } from '../../config/index';\nimport { VERIFICAR_SESION, LOGIN, LOGOUT, LOADING, ERROR } from '../types/usuarioTypes';\nexport var login = function login(data) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var headers;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context.prev = 1;\n\n              if (!(data.email.trim() === '' || data.password.trim() === '')) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Es necesario completar todos los campos'\n              }));\n\n            case 4:\n              headers = new Headers();\n              headers.append(\"Content-Type\", \"application/json\");\n              return _context.abrupt(\"return\", fetch(\"\".concat(API, \"/login\"), {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: headers\n              }).then(function (res) {\n                return res.json();\n              }).then(function (response) {\n                if (response.ok) {\n                  var objUsuario = {\n                    nombre: response.usuario.nombre,\n                    email: response.usuario.email,\n                    foto: response.usuario.foto,\n                    token: response.token\n                  };\n                  localStorage.setItem('oliverpetshop_usuario', JSON.stringify(objUsuario));\n                  dispatch({\n                    type: LOGIN,\n                    payload: localStorage.getItem('oliverpetshop_usuario')\n                  });\n                } else {\n                  return dispatch({\n                    type: ERROR,\n                    payload: response.info\n                  });\n                }\n              }));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              return _context.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: _context.t0\n              }));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var logout = function logout() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context2.prev = 1;\n              localStorage.removeItem('oliverpetshop_usuario');\n              return _context2.abrupt(\"return\", dispatch({\n                type: LOGOUT\n              }));\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context2.t0\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 6]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var verificarSesion = function verificarSesion() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var dataUsuario;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dataUsuario = JSON.parse(localStorage.getItem('oliverpetshop_usuario'));\n\n              if (!dataUsuario) {\n                _context3.next = 4;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", dispatch({\n                type: VERIFICAR_SESION,\n                payload: {\n                  data: dataUsuario,\n                  logueado: true\n                }\n              }));\n\n            case 4:\n              return _context3.abrupt(\"return\", dispatch({\n                type: VERIFICAR_SESION,\n                payload: {\n                  data: null,\n                  logueado: false\n                }\n              }));\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: ERROR,\n                payload: _context3.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var register = function register(data) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING\n    });\n\n    try {\n      var headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      return fetch(\"\".concat(API, \"register\"), {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: headers\n      }).then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        if (response.ok) {\n          var objUsuario = {\n            nombre: response.usuario.nombre,\n            email: response.usuario.email,\n            foto: response.usuario.foto,\n            token: response.token\n          };\n          localStorage.setItem('oliverpetshop_usuario', JSON.stringify(objUsuario));\n          dispatch({\n            type: LOGIN,\n            payload: localStorage.getItem('oliverpetshop_usuario')\n          });\n        } else {\n          dispatch({\n            type: ERROR,\n            payload: response.info\n          });\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    }\n  };\n};\nexport var singInWithGoogle = function singInWithGoogle(tokenId) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var headers;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context4.prev = 1;\n              headers = new Headers();\n              headers.append(\"Content-Type\", \"application/json\");\n              return _context4.abrupt(\"return\", fetch(\"\".concat(API, \"google/tokensignin\"), {\n                method: 'POST',\n                headers: headers,\n                body: JSON.stringify({\n                  token: tokenId\n                })\n              }).then(function (res) {\n                return res.json();\n              }).then(function (response) {\n                if (!response.ok) {\n                  return dispatch({\n                    type: ERROR,\n                    payload: response.info\n                  });\n                }\n\n                ;\n                var objUsuario = {\n                  nombre: response.usuario.nombre,\n                  email: response.usuario.email,\n                  foto: response.usuario.foto,\n                  token: response.token,\n                  address: response.usuario.address,\n                  lat: response.usuario.lat,\n                  lon: response.usaurio.lon\n                };\n                localStorage.setItem('oliverpetshop_usuario', JSON.stringify(objUsuario));\n                dispatch({\n                  type: LOGIN,\n                  payload: localStorage.getItem('oliverpetshop_usuario')\n                });\n              }));\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context4.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 7]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/franc/Documents/oliver-2/sitio-desa/store/actions/usuarioActions.js"],"names":["API","VERIFICAR_SESION","LOGIN","LOGOUT","LOADING","ERROR","login","data","dispatch","type","email","trim","password","payload","headers","Headers","append","fetch","method","body","JSON","stringify","then","res","json","response","ok","objUsuario","nombre","usuario","foto","token","localStorage","setItem","getItem","info","console","log","logout","removeItem","verificarSesion","dataUsuario","parse","logueado","register","error","singInWithGoogle","tokenId","address","lat","lon","usaurio"],"mappings":"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","sourcesContent":["import {API} from '../../config/index';\r\nimport {VERIFICAR_SESION,LOGIN,LOGOUT,LOADING,ERROR} from '../types/usuarioTypes';\r\n\r\nexport const login = (data)=>async(dispatch)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        if(data.email.trim() === '' || data.password.trim() === ''){\r\n            return dispatch({\r\n                type:ERROR,\r\n                payload:'Es necesario completar todos los campos'\r\n            })\r\n        }\r\n        let headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        return fetch(`${API}/login`,{\r\n            method:'POST',\r\n            body:JSON.stringify(data),\r\n            headers\r\n        }).then(res=>res.json()).then(response=>{\r\n            if(response.ok){\r\n                let objUsuario = {\r\n                    nombre:response.usuario.nombre,\r\n                    email:response.usuario.email,\r\n                    foto:response.usuario.foto,\r\n                    token:response.token\r\n                }\r\n                localStorage.setItem('oliverpetshop_usuario',JSON.stringify(objUsuario));\r\n                dispatch({\r\n                    type:LOGIN,\r\n                    payload:localStorage.getItem('oliverpetshop_usuario')\r\n                })\r\n            }else{\r\n                return dispatch({\r\n                    type:ERROR,\r\n                    payload:response.info\r\n                })\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n        return dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = ()=>async(dispatch)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        localStorage.removeItem('oliverpetshop_usuario');\r\n        return dispatch({\r\n            type:LOGOUT\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })\r\n    }\r\n}\r\n\r\nexport const verificarSesion=()=>async(dispatch)=>{\r\n    try {\r\n        let dataUsuario = JSON.parse(localStorage.getItem('oliverpetshop_usuario'));\r\n        if(dataUsuario){\r\n            return dispatch({\r\n                type:VERIFICAR_SESION,\r\n                payload:{data:dataUsuario,logueado:true}\r\n            })\r\n        }\r\n        return dispatch({\r\n            type:VERIFICAR_SESION,\r\n            payload:{data:null,logueado:false}\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })\r\n    }\r\n}\r\n\r\nexport const register=(data)=>(dispatch)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        let headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        return fetch(`${API}register`,{\r\n            method:'POST',\r\n            body:JSON.stringify(data),\r\n            headers\r\n        }).then(res=>res.json()).then(response=>{\r\n            if(response.ok){\r\n                let objUsuario = {\r\n                    nombre:response.usuario.nombre,\r\n                    email:response.usuario.email,\r\n                    foto:response.usuario.foto,\r\n                    token:response.token\r\n                }\r\n                localStorage.setItem('oliverpetshop_usuario',JSON.stringify(objUsuario));\r\n                dispatch({\r\n                    type:LOGIN,\r\n                    payload:localStorage.getItem('oliverpetshop_usuario')\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type:ERROR,\r\n                    payload:response.info\r\n                })\r\n            }\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })\r\n    }\r\n}\r\n\r\nexport const singInWithGoogle = tokenId => async(dispatch)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        let headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        return fetch(`${API}google/tokensignin`,{\r\n            method:'POST',\r\n            headers,\r\n            body:JSON.stringify({token:tokenId})\r\n        }).then(res=>res.json()).then(response=>{\r\n            if(!response.ok){\r\n                return dispatch({\r\n                    type:ERROR,\r\n                    payload:response.info\r\n                })\r\n            };\r\n            let objUsuario = {\r\n                nombre:response.usuario.nombre,\r\n                email:response.usuario.email,\r\n                foto:response.usuario.foto,\r\n                token:response.token,\r\n                address:response.usuario.address,\r\n                lat:response.usuario.lat,\r\n                lon:response.usaurio.lon\r\n            }\r\n            localStorage.setItem('oliverpetshop_usuario',JSON.stringify(objUsuario));\r\n            dispatch({\r\n                type:LOGIN,\r\n                payload:localStorage.getItem('oliverpetshop_usuario')\r\n            });\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}