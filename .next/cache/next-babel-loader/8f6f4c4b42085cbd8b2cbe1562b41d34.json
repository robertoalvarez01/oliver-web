{"ast":null,"code":"import { API } from '../../config/index';\nimport { TRAER, LOADING, ERROR } from '../types/politicaTypes';\nexport const traerInfo = () => async dispatch => {\n  dispatch({\n    type: LOADING\n  });\n\n  try {\n    return fetch(`${API}/legales`).then(res => res.json()).then(data => {\n      const info = {\n        politica: data.data[0].politica_privacidad,\n        terminos: data.data[0].terminos_condiciones\n      };\n      dispatch({\n        type: TRAER,\n        payload: info\n      });\n    }).catch(err => {\n      dispatch({\n        type: ERROR,\n        payload: err\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/home/franco/desarrollo/proyecto_oliver/oliver-web-next/store/actions/politicaActions.js"],"names":["API","TRAER","LOADING","ERROR","traerInfo","dispatch","type","fetch","then","res","json","data","info","politica","politica_privacidad","terminos","terminos_condiciones","payload","catch","err","error"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,oBAAlB;AACA,SAAQC,KAAR,EAAcC,OAAd,EAAsBC,KAAtB,QAAkC,wBAAlC;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAI,MAAOC,QAAP,IAAkB;AAC3CA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACJ;AADA,GAAD,CAAR;;AAGA,MAAI;AACA,WAAOK,KAAK,CAAE,GAAEP,GAAI,UAAR,CAAL,CAAwBQ,IAAxB,CAA6BC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAAlC,EAA8CF,IAA9C,CAAmDG,IAAI,IAAE;AAC5D,YAAMC,IAAI,GAAG;AACTC,QAAAA,QAAQ,EAACF,IAAI,CAACA,IAAL,CAAU,CAAV,EAAaG,mBADb;AAETC,QAAAA,QAAQ,EAACJ,IAAI,CAACA,IAAL,CAAU,CAAV,EAAaK;AAFb,OAAb;AAIAX,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAACL,KADA;AAELgB,QAAAA,OAAO,EAACL;AAFH,OAAD,CAAR;AAIH,KATM,EASJM,KATI,CASEC,GAAG,IAAE;AACVd,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAACH,KADA;AAELc,QAAAA,OAAO,EAACE;AAFH,OAAD,CAAR;AAIH,KAdM,CAAP;AAeH,GAhBD,CAgBE,OAAOC,KAAP,EAAc;AACZf,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACH,KADA;AAELc,MAAAA,OAAO,EAACG;AAFH,KAAD,CAAR;AAIH;AACJ,CA1BM","sourcesContent":["import {API} from '../../config/index';\nimport {TRAER,LOADING,ERROR} from '../types/politicaTypes';\n\nexport const traerInfo = ()=>async (dispatch)=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        return fetch(`${API}/legales`).then(res=>res.json()).then(data=>{\n            const info = {\n                politica:data.data[0].politica_privacidad,\n                terminos:data.data[0].terminos_condiciones\n            }\n            dispatch({\n                type:TRAER,\n                payload:info\n            });\n        }).catch(err=>{\n            dispatch({\n                type:ERROR,\n                payload:err\n            })\n        })\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}