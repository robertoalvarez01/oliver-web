{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport CardUbicacion from '../../src/components/CardUbicacion/index';\nimport OpcionesEnvio from '../../src/components/OpcionesEnvio';\nimport ZonaEnvio from '../../src/components/ZonaEnvio';\nimport Head from '../../src/components/Head';\nimport DetalleProductos from '../../src/components/DetalleProductos';\nimport Error from '../../src/components/Error';\nimport { connect } from 'react-redux';\nimport * as carritoActions from '../../store/actions/carritoActions';\nimport * as usuarioActions from '../../store/actions/usuarioActions';\nimport { API } from '../../config/index';\nimport Loader from '../../src/components/Loader/index';\nimport MediosDePago from '../../src/components/MediosDePago';\n\nvar Swal = require('sweetalert2');\n\nvar carritoTraerProductos = carritoActions.traerProductos,\n    cambiarMedioDePago = carritoActions.cambiarMedioDePago,\n    setCostoEnvio = carritoActions.setCostoEnvio;\nvar verificarSesion = usuarioActions.verificarSesion;\n\nvar Checkout = function Checkout(props) {\n  var _useState = useState({\n    normal: true,\n    express: false,\n    local: false\n  }),\n      tipoEnvio = _useState[0],\n      setTipoEnvio = _useState[1];\n\n  var _useState2 = useState(''),\n      zonaEnvio = _useState2[0],\n      setZonaEnvio = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    document.getElementsByTagName('body')[0].style.overflowY = 'scroll';\n    props.carritoTraerProductos();\n  }, []);\n\n  var cambiarTipoDeEnvio = function cambiarTipoDeEnvio(tipoDeEnvio) {\n    if (tipoDeEnvio === 'normal') {\n      document.getElementById('form-zona-envio').removeAttribute('disabled');\n      document.getElementById('form-medios-pago').setAttribute('disabled', 'true');\n      props.cambiarMedioDePago('1');\n      return setTipoEnvio({\n        normal: true,\n        express: false,\n        local: false\n      });\n    }\n\n    if (tipoDeEnvio === 'express') {\n      document.getElementById('form-zona-envio').removeAttribute('disabled');\n      document.getElementById('form-medios-pago').setAttribute('disabled', 'true');\n      props.cambiarMedioDePago('1');\n      return setTipoEnvio({\n        normal: false,\n        express: true,\n        local: false\n      });\n    }\n\n    setZonaEnvio('');\n    document.getElementById('form-zona-envio').setAttribute('disabled', 'true');\n    document.getElementById('form-zona-envio').value = \"\";\n    document.getElementById('form-medios-pago').removeAttribute('disabled'); //seteo el costo del envio porque es retiro en el local\n\n    props.setCostoEnvio(0);\n    return setTipoEnvio({\n      normal: false,\n      express: false,\n      local: true\n    });\n  };\n\n  var insertarZonaDeEnvio = function insertarZonaDeEnvio(zona) {\n    setZonaEnvio(zona);\n  };\n\n  var handleClick = function handleClick() {\n    if (!tipoEnvio.local) {\n      if (!props.usuarioReducer.usuario.address || props.usuarioReducer.usuario.address === '') return setError('Es obligatorio completar tu ubicación.');\n      if (zonaEnvio === '') return setError('En caso de no retirarlo por nuestro local, es obligatorio completar la zona de envío.');\n    }\n\n    setLoading(true);\n    setError(false);\n    var tipoDeEnvioActivo;\n\n    if (tipoEnvio.local) {\n      tipoDeEnvioActivo = 'Local';\n    }\n\n    ;\n\n    if (tipoEnvio.normal) {\n      tipoDeEnvioActivo = 'Domicilio';\n    }\n\n    if (tipoEnvio.express) {\n      tipoDeEnvioActivo = 'Express';\n    }\n\n    var dataEnvio = {\n      tipo: tipoDeEnvioActivo,\n      zona: zonaEnvio\n    };\n\n    if (props.carritoReducer.idMedioPago == '1') {\n      //guardo data de envio para luego de hacer el checkout de mercado pago, envio los datos al servidor para registrar la venta con el envio correspondiente.\n      localStorage.setItem('dataEnvio', JSON.stringify(dataEnvio));\n      var token = props.usuarioReducer.usuario.token;\n      var productosCarrito = props.carritoReducer.productos; //SOLUCION TEMPORAL PARA QUE SE SUME AL PAGO LO DEL ENVIO\n\n      var productos = [{\n        title: 'Nueva compra en Oliver PetShop',\n        description: 'Compra de uno o mas productos',\n        quantity: 1,\n        unit_price: props.carritoReducer.total\n      }]; // TODO: VER LA FORMA DE MANDAR LOS PRODUCTOS JUNTO CON EL MONTO DEL ENVIO\n      // productosCarrito.forEach(prd => {\n      //     productos.push({\n      //         title:prd.subProducto,\n      //         description:prd.tamaño,\n      //         quantity:prd.cantidad,\n      //         unit_price:prd.precioUnidad\n      //     })\n      // });\n\n      var headers = new Headers();\n      headers.append('token', token);\n      headers.append(\"Content-Type\", \"application/json\");\n      fetch(\"\".concat(API, \"/mercadopago\"), {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(productos)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (datamp) {\n        // console.log(datamp);\n        var response = datamp.info.response;\n        setLoading(false);\n        window.location.assign(response.init_point);\n      })[\"catch\"](function (err) {\n        console.log(err);\n        setLoading(false);\n        setError(err.message);\n      });\n    } else {\n      var idUsuario = props.usuarioReducer.usuario.idUsuario;\n      var _props$carritoReducer = props.carritoReducer,\n          subtotal = _props$carritoReducer.subtotal,\n          porcentaje_descuento = _props$carritoReducer.porcentaje_descuento,\n          descuento = _props$carritoReducer.descuento,\n          total = _props$carritoReducer.total,\n          _productos = _props$carritoReducer.productos,\n          idMedioPago = _props$carritoReducer.idMedioPago;\n      var zona = dataEnvio.zona,\n          tipo = dataEnvio.tipo;\n      var f = new Date();\n      var mes = f.getMonth() < 10 ? \"0\".concat(f.getMonth() + 1) : \"\".concat(f.getMonth());\n      var dia = f.getDate() < 10 ? \"0\".concat(f.getDate()) : \"\".concat(f.getDate());\n      var fecha = \"\".concat(f.getFullYear(), \"-\").concat(mes, \"-\").concat(dia);\n      var dataToRequest = {\n        envio: {\n          idZona: zona,\n          tipo: tipo\n        },\n        venta: {\n          subtotal: subtotal,\n          porcentaje_descuento: porcentaje_descuento,\n          descuento: descuento,\n          total: total,\n          idUsuario: idUsuario,\n          productos: _productos,\n          fecha: fecha,\n          operacion_id: null,\n          idMedioPago: idMedioPago\n        }\n      };\n      return registrarVenta(dataToRequest);\n    }\n\n    ;\n  };\n\n  var registrarVenta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var headers, url, reqVenta;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              headers = new Headers();\n              headers.append('token', props.usuarioReducer.usuario.token);\n              headers.append(\"Content-Type\", \"application/json\");\n              url = !data.venta.operacion_id ? \"\".concat(API, \"/registrarVenta?mercadoPago=false\") : \"\".concat(API, \"/registrarVenta?mercadoPago=true\");\n              _context.next = 7;\n              return fetch(url, {\n                headers: headers,\n                method: 'POST',\n                body: JSON.stringify(data)\n              });\n\n            case 7:\n              reqVenta = _context.sent;\n\n              if (reqVenta.status == 200) {\n                localStorage.removeItem('dataEnvio');\n                localStorage.removeItem('carrito');\n                Swal.fire('Listo', 'Su compra se ha registrado con éxito, solo resta que se dirija a nuestro local para hacerse con su producto.', 'success').then(function () {\n                  return window.location.assign('/');\n                });\n              } else {\n                setLoading(false);\n                Swal.fire('Error', 'Ha ocurrido un error al momento de registrar la venta, intentalo más tarde', 'error');\n              }\n\n              _context.next = 16;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              setLoading(false);\n              Swal.fire('Error', 'Ha ocurrido un error al momento de registrar la venta, intentalo más tarde', 'error');\n              console.log(_context.t0.message);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function registrarVenta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return !props.usuarioReducer.logueado ? __jsx(\"div\", {\n    className: \"mt-3\"\n  }, __jsx(Error, {\n    message: \"No puedes realizar una compra sin tener una sesi\\xF3n activa.\"\n  })) : __jsx(React.Fragment, null, props.carritoReducer.productos.length === 0 ? __jsx(\"div\", {\n    className: \"mt-3\"\n  }, __jsx(Error, {\n    message: \"No hay productos para finalizar la compra.\"\n  })) : __jsx(React.Fragment, null, loading ? __jsx(\"div\", {\n    className: \"container-loader\"\n  }, __jsx(Loader, null)) : null, __jsx(Head, {\n    title: \"Oliver Pet Shop\"\n  }), __jsx(\"div\", {\n    className: \"jsx-1473839781\" + \" \" + \"container mb-4\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1473839781\" + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1473839781\" + \" \" + \"col-12 col-md-8 pt-4\"\n  }, __jsx(\"h2\", {\n    className: \"jsx-1473839781\"\n  }, \"\\xDAltimos pasos para terminar tu compra\"), error ? __jsx(Error, {\n    message: error\n  }) : null, __jsx(CardUbicacion, {\n    dataUser: props.usuarioReducer.usuario\n  }), __jsx(ZonaEnvio, {\n    setZonaEnvio: insertarZonaDeEnvio\n  }), __jsx(\"div\", {\n    className: \"jsx-1473839781\" + \" \" + \"alert alert-warning\"\n  }, __jsx(\"b\", {\n    className: \"jsx-1473839781\"\n  }, \"Atenci\\xF3n:\"), \" S\\xED desea retirar su compra en nuestro local, no es necesario que seleccione una zona de env\\xEDo\"), __jsx(\"h2\", {\n    className: \"jsx-1473839781\" + \" \" + \"mt-5\"\n  }, \"Opciones de env\\xEDo\"), __jsx(OpcionesEnvio, {\n    tipoEnvio: tipoEnvio,\n    cambiarTipoDeEnvio: cambiarTipoDeEnvio\n  }), __jsx(\"h2\", {\n    className: \"jsx-1473839781\" + \" \" + \"mt-5\"\n  }, \"Selecciona un medio de pago\"), __jsx(MediosDePago, null), __jsx(\"button\", {\n    type: \"button\",\n    onClick: handleClick,\n    id: \"btn-continuar\",\n    className: \"jsx-1473839781\" + \" \" + \"btn btn-primary\"\n  }, \"Continuar\"), __jsx(\"div\", {\n    className: \"jsx-1473839781\" + \" \" + \"divTotalMobile\"\n  }, __jsx(\"span\", {\n    id: \"total\",\n    className: \"jsx-1473839781\"\n  }, \"$\", props.carritoReducer.subtotal), __jsx(\"button\", {\n    type: \"button\",\n    onClick: handleClick,\n    className: \"jsx-1473839781\" + \" \" + \"btn btn-primary\"\n  }, \"Continuar\"))), __jsx(\"div\", {\n    className: \"jsx-1473839781\" + \" \" + \"col-12 col-md-4 detalleProductos\"\n  }, __jsx(DetalleProductos, {\n    data: props.carritoReducer\n  }))), __jsx(_JSXStyle, {\n    id: \"1473839781\"\n  }, [\"h2.jsx-1473839781{font-size:25px;}\", \"button#btn-continuar.jsx-1473839781{float:right;margin-top:20px;}\", \".divTotalMobile.jsx-1473839781{display:none;}\", \"@media(max-width:768px){#btn-continuar.jsx-1473839781{display:none;}.divTotalMobile.jsx-1473839781{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;position:fixed;left:0;right:0px;bottom:0px;background-color:#f7f7f7;padding:16px;box-shadow:0 -2px 8px 2px rgba(0,0,0,.15);border-width:0 1px 1px;font-family:'Quicksand',sans-serif;}.detalleProductos.jsx-1473839781{display:none;}}\"]))));\n};\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var carritoReducer = _ref2.carritoReducer,\n      usuarioReducer = _ref2.usuarioReducer,\n      enviosReducer = _ref2.enviosReducer;\n  return {\n    carritoReducer: carritoReducer,\n    usuarioReducer: usuarioReducer,\n    enviosReducer: enviosReducer\n  };\n};\n\nvar mapDispatchToProps = {\n  carritoTraerProductos: carritoTraerProductos,\n  verificarSesion: verificarSesion,\n  cambiarMedioDePago: cambiarMedioDePago,\n  setCostoEnvio: setCostoEnvio\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","map":null,"metadata":{},"sourceType":"module"}