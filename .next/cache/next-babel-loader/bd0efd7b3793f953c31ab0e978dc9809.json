{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { LOADING, ERROR, TRAER_TODOS } from \"../types/mediosDePagoTypes\";\nimport { API } from '../../config/index';\nexport var traerMedios = function traerMedios() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var reqMedios, dataMedios;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"\".concat(API, \"/mediosDePago\"));\n\n            case 4:\n              reqMedios = _context.sent;\n\n              if (!(reqMedios.status != 200)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: reqMedios.statusText\n              }));\n\n            case 7:\n              _context.next = 9;\n              return reqMedios.json();\n\n            case 9:\n              dataMedios = _context.sent;\n              return _context.abrupt(\"return\", dispatch({\n                type: TRAER_TODOS,\n                payload: dataMedios\n              }));\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context.t0.message\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 13]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/franc/Documents/oliver-2/sitio-desa/store/actions/medioDePagoActions.js"],"names":["LOADING","ERROR","TRAER_TODOS","API","traerMedios","dispatch","type","fetch","reqMedios","status","payload","statusText","json","dataMedios","message"],"mappings":";;AAAA,SAASA,OAAT,EAAiBC,KAAjB,EAAuBC,WAAvB,QAA0C,4BAA1C;AACA,SAAQC,GAAR,QAAkB,oBAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA,wEAAI,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BA,cAAAA,QAAQ,CAAC;AAACC,gBAAAA,IAAI,EAACN;AAAN,eAAD,CAAR;AAD2B;AAAA;AAAA,qBAGCO,KAAK,WAAIJ,GAAJ,mBAHN;;AAAA;AAGjBK,cAAAA,SAHiB;;AAAA,oBAIpBA,SAAS,CAACC,MAAV,IAAoB,GAJA;AAAA;AAAA;AAAA;;AAAA,+CAIYJ,QAAQ,CAAC;AAACC,gBAAAA,IAAI,EAACL,KAAN;AAAYS,gBAAAA,OAAO,EAACF,SAAS,CAACG;AAA9B,eAAD,CAJpB;;AAAA;AAAA;AAAA,qBAKEH,SAAS,CAACI,IAAV,EALF;;AAAA;AAKjBC,cAAAA,UALiB;AAAA,+CAMhBR,QAAQ,CAAC;AACZC,gBAAAA,IAAI,EAACJ,WADO;AAEZQ,gBAAAA,OAAO,EAACG;AAFI,eAAD,CANQ;;AAAA;AAAA;AAAA;AAWvBR,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAACL,KADA;AAELS,gBAAAA,OAAO,EAAC,YAAMI;AAFT,eAAD,CAAR;;AAXuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import { LOADING,ERROR,TRAER_TODOS } from \"../types/mediosDePagoTypes\";\r\nimport {API} from '../../config/index';\r\n\r\nexport const traerMedios = ()=>async dispatch=>{\r\n    dispatch({type:LOADING});\r\n    try {\r\n        const reqMedios = await fetch(`${API}/mediosDePago`);\r\n        if(reqMedios.status != 200) return dispatch({type:ERROR,payload:reqMedios.statusText});\r\n        const dataMedios = await reqMedios.json();\r\n        return dispatch({\r\n            type:TRAER_TODOS,\r\n            payload:dataMedios\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}