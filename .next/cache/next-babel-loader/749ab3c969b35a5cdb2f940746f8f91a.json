{"ast":null,"code":"import { API } from '../../config/index';\nimport { TRAER_INFO, LOGIN, LOGOUT, LOADING, ERROR } from '../types/usuarioTypes';\nexport const login = data => async dispatch => {\n  dispatch({\n    type: LOADING\n  });\n\n  try {\n    let headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    return fetch(`${API}/login`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers\n    }).then(res => res.json()).then(response => {\n      if (response.ok) {\n        localStorage.setItem('usuario', JSON.stringify(response.usuario));\n        dispatch({\n          type: LOGIN,\n          payload: response.usuario\n        });\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGIN\n  });\n\n  try {\n    localStorage.removeItem('usuario');\n    return dispatch({\n      type: LOGOUT\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};\nexport const traerInfo = () => async dispatch => {\n  try {\n    const {\n      usuario\n    } = getState().usuarioReducer;\n\n    if (usuario) {\n      return getState().usuarioReducer;\n    }\n\n    let dataUsuario = localStorage.getItem('usuario');\n    dispatch({\n      type: TRAER_INFO,\n      payload: JSON.parse(dataUsuario)\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/franc/Documents/oliver-2/sitio-desa/store/actions/usuarioActions.js"],"names":["API","TRAER_INFO","LOGIN","LOGOUT","LOADING","ERROR","login","data","dispatch","type","headers","Headers","append","fetch","method","body","JSON","stringify","then","res","json","response","ok","localStorage","setItem","usuario","payload","error","logout","removeItem","traerInfo","getState","usuarioReducer","dataUsuario","getItem","parse"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,oBAAlB;AACA,SAAQC,UAAR,EAAmBC,KAAnB,EAAyBC,MAAzB,EAAgCC,OAAhC,EAAwCC,KAAxC,QAAoD,uBAApD;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAQ,MAAMC,QAAN,IAAiB;AAC1CA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACL;AADA,GAAD,CAAR;;AAGA,MAAI;AACA,QAAIM,OAAO,GAAG,IAAIC,OAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,WAAOC,KAAK,CAAE,GAAEb,GAAI,QAAR,EAAgB;AACxBc,MAAAA,MAAM,EAAC,MADiB;AAExBC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAFmB;AAGxBG,MAAAA;AAHwB,KAAhB,CAAL,CAIJQ,IAJI,CAICC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAJN,EAIkBF,IAJlB,CAIuBG,QAAQ,IAAE;AACpC,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACXC,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAA+BR,IAAI,CAACC,SAAL,CAAeI,QAAQ,CAACI,OAAxB,CAA/B;AACAjB,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAACP,KADA;AAELwB,UAAAA,OAAO,EAACL,QAAQ,CAACI;AAFZ,SAAD,CAAR;AAIH;AACJ,KAZM,CAAP;AAaH,GAhBD,CAgBE,OAAOE,KAAP,EAAc;AACZnB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACJ,KADA;AAELqB,MAAAA,OAAO,EAACC;AAFH,KAAD,CAAR;AAIH;AACJ,CA1BM;AA4BP,OAAO,MAAMC,MAAM,GAAG,MAAI,MAAMpB,QAAN,IAAiB;AACvCA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACP;AADA,GAAD,CAAR;;AAGA,MAAI;AACAqB,IAAAA,YAAY,CAACM,UAAb,CAAwB,SAAxB;AACA,WAAOrB,QAAQ,CAAC;AACZC,MAAAA,IAAI,EAACN;AADO,KAAD,CAAf;AAGH,GALD,CAKE,OAAOwB,KAAP,EAAc;AACZnB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACJ,KADA;AAELqB,MAAAA,OAAO,EAACC;AAFH,KAAD,CAAR;AAIH;AACJ,CAfM;AAiBP,OAAO,MAAMG,SAAS,GAAC,MAAI,MAAMtB,QAAN,IAAiB;AACxC,MAAI;AACA,UAAM;AAACiB,MAAAA;AAAD,QAAYM,QAAQ,GAAGC,cAA7B;;AACA,QAAGP,OAAH,EAAW;AACP,aAAOM,QAAQ,GAAGC,cAAlB;AACH;;AACD,QAAIC,WAAW,GAAGV,YAAY,CAACW,OAAb,CAAqB,SAArB,CAAlB;AACA1B,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACR,UADA;AAELyB,MAAAA,OAAO,EAACV,IAAI,CAACmB,KAAL,CAAWF,WAAX;AAFH,KAAD,CAAR;AAIH,GAVD,CAUE,OAAON,KAAP,EAAc;AACZnB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACJ,KADA;AAELqB,MAAAA,OAAO,EAACC;AAFH,KAAD,CAAR;AAIH;AACJ,CAjBM","sourcesContent":["import {API} from '../../config/index';\r\nimport {TRAER_INFO,LOGIN,LOGOUT,LOADING,ERROR} from '../types/usuarioTypes';\r\n\r\nexport const login = (data)=>async(dispatch)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        let headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        return fetch(`${API}/login`,{\r\n            method:'POST',\r\n            body:JSON.stringify(data),\r\n            headers\r\n        }).then(res=>res.json()).then(response=>{\r\n            if(response.ok){\r\n                localStorage.setItem('usuario',JSON.stringify(response.usuario));\r\n                dispatch({\r\n                    type:LOGIN,\r\n                    payload:response.usuario\r\n                })\r\n            }\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = ()=>async(dispatch)=>{\r\n    dispatch({\r\n        type:LOGIN\r\n    });\r\n    try {\r\n        localStorage.removeItem('usuario');\r\n        return dispatch({\r\n            type:LOGOUT\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })\r\n    }\r\n}\r\n\r\nexport const traerInfo=()=>async(dispatch)=>{\r\n    try {\r\n        const {usuario} = getState().usuarioReducer;\r\n        if(usuario){\r\n            return getState().usuarioReducer;\r\n        }\r\n        let dataUsuario = localStorage.getItem('usuario');\r\n        dispatch({\r\n            type:TRAER_INFO,\r\n            payload:JSON.parse(dataUsuario)\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}