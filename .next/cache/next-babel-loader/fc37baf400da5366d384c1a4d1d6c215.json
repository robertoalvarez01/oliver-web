{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n//import {API} from '../config/index';\nimport { TRAER_PRODUCTOS, AGREGAR_PRODUCTO, ELIMINAR_PRODUCTO, LOADING, ERROR } from '../types/carritoTypes';\nexport var traerProductos = function traerProductos() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var productos;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n\n              try {\n                productos = JSON.parse(localStorage.getItem('carrito'));\n                dispatch({\n                  type: TRAER_PRODUCTOS,\n                  payload: productos\n                });\n              } catch (error) {\n                dispatch({\n                  type: ERROR,\n                  payload: error\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var agregarProducto = function agregarProducto(producto) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      var productos, listProductosUpgrade, productoRepetido, restantes;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n\n              try {\n                //productos que hay en el reducer\n                productos = getState().carritoReducer.productos;\n                productoRepetido = productos.filter(function (res) {\n                  return res.idSubProducto == producto.idSubProducto;\n                });\n\n                if (productoRepetido.length > 0) {\n                  productoRepetido[0].cantidad = productoRepetido[0].cantidad + producto.cantidad;\n                  restantes = productos.filter(function (newRes) {\n                    return newRes.idSubProducto != productoRepetido[0].idSubProducto;\n                  });\n\n                  if (restantes.length > 0) {\n                    listProductosUpgrade = [].concat(_toConsumableArray(restantes), [productoRepetido[0]]);\n                  } else {\n                    listProductosUpgrade = [productoRepetido[0]];\n                  }\n                } else {\n                  listProductosUpgrade = [].concat(_toConsumableArray(productos), [producto]);\n                } //actualizo localstorage\n\n\n                localStorage.setItem('carrito', JSON.stringify(listProductosUpgrade));\n                setTimeout(function () {\n                  dispatch({\n                    type: AGREGAR_PRODUCTO,\n                    payload: listProductosUpgrade\n                  });\n                }, 1500);\n              } catch (error) {\n                dispatch({\n                  type: ERROR,\n                  payload: error\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var eliminarProducto = function eliminarProducto(idSubProducto) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var productos, newProductos;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n\n              try {\n                productos = getState().carritoReducer.productos; //filtro los productos que no tengan el idProducto que se recibiÃ³. entonces elimino ese producto y actualizo el reducer.\n\n                newProductos = productos.filter(function (newArray) {\n                  return newArray.idSubProducto !== idSubProducto;\n                });\n                console.log(newProductos);\n                localStorage.setItem('carrito', JSON.stringify(newProductos));\n                dispatch({\n                  type: ELIMINAR_PRODUCTO,\n                  payload: newProductos\n                });\n              } catch (error) {\n                dispatch({\n                  type: ERROR,\n                  payload: error\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x4, _x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/franc/Documents/oliver-2/oliver-sitio/store/actions/carritoActions.js"],"names":["TRAER_PRODUCTOS","AGREGAR_PRODUCTO","ELIMINAR_PRODUCTO","LOADING","ERROR","traerProductos","dispatch","type","productos","JSON","parse","localStorage","getItem","payload","error","agregarProducto","producto","getState","carritoReducer","productoRepetido","filter","res","idSubProducto","length","cantidad","restantes","newRes","listProductosUpgrade","setItem","stringify","setTimeout","eliminarProducto","newProductos","newArray","console","log"],"mappings":"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","sourcesContent":["//import {API} from '../config/index';\r\nimport {TRAER_PRODUCTOS,AGREGAR_PRODUCTO,ELIMINAR_PRODUCTO,LOADING,ERROR} from '../types/carritoTypes';\r\n\r\nexport const traerProductos = ()=>async (dispatch)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        const productos = JSON.parse(localStorage.getItem('carrito'));\r\n        dispatch({\r\n            type:TRAER_PRODUCTOS,\r\n            payload:productos\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })\r\n    }\r\n}\r\n\r\nexport const agregarProducto = producto=>async (dispatch,getState)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        //productos que hay en el reducer\r\n        let {productos} = getState().carritoReducer;\r\n        let listProductosUpgrade;\r\n        let productoRepetido = productos.filter(res=>res.idSubProducto==producto.idSubProducto);\r\n        if(productoRepetido.length>0){\r\n            productoRepetido[0].cantidad = productoRepetido[0].cantidad + producto.cantidad;\r\n            let restantes = productos.filter(newRes=>newRes.idSubProducto!=productoRepetido[0].idSubProducto);\r\n            if(restantes.length>0){\r\n                listProductosUpgrade = [\r\n                    ...restantes,\r\n                    productoRepetido[0]\r\n                ];\r\n            }else{\r\n                listProductosUpgrade = [\r\n                    productoRepetido[0]\r\n                ];\r\n            }\r\n        }else{\r\n            listProductosUpgrade = [\r\n                ...productos,\r\n                producto\r\n            ];\r\n        }\r\n        //actualizo localstorage\r\n        localStorage.setItem('carrito',JSON.stringify(listProductosUpgrade));\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type:AGREGAR_PRODUCTO,\r\n                payload:listProductosUpgrade\r\n            })\r\n        }, 1500);\r\n    } catch (error) {\r\n       dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        }) \r\n    }\r\n}\r\n\r\nexport const eliminarProducto = idSubProducto=>async (dispatch,getState)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        const {productos} = getState().carritoReducer;\r\n        //filtro los productos que no tengan el idProducto que se recibiÃ³. entonces elimino ese producto y actualizo el reducer.\r\n        const newProductos = productos.filter(newArray=>newArray.idSubProducto !== idSubProducto);\r\n        console.log(newProductos);\r\n        localStorage.setItem('carrito',JSON.stringify(newProductos));\r\n        dispatch({\r\n            type:ELIMINAR_PRODUCTO,\r\n            payload:newProductos\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })    \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}