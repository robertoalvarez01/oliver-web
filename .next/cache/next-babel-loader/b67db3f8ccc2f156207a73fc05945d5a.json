{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Error from \"../Error\";\nimport LoginStyle from './Login.module.css';\nimport Loader from '../Loader';\nimport { connect } from 'react-redux';\nimport * as usuarioActions from '../../../store/actions/usuarioActions';\nimport { GoogleLogin } from 'react-google-login';\nimport { GOOGLE_CLIENT_ID } from '../../../config/index';\n\nconst Login = props => {\n  const {\n    0: formLoginValues,\n    1: setFormLoginValues\n  } = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChangeLogin = event => {\n    setFormLoginValues(_objectSpread(_objectSpread({}, formLoginValues), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleSubmitLogin = event => {\n    event.preventDefault(); //let btnSubmit = document.querySelector('#form-login .boton');\n    //btnSubmit.setAttribute('disabled',true);\n\n    return props.login(formLoginValues);\n  };\n\n  const habilitarRegister = () => {\n    props.showRegister();\n  };\n\n  const responseGoogle = data => {\n    if (data.tokenId) {\n      return props.singInWithGoogle(data.tokenId);\n    }\n  }; //console.log(props);\n\n\n  return __jsx(\"div\", {\n    className: LoginStyle.login__container\n  }, __jsx(\"h6\", {\n    className: LoginStyle.title__login + ' ' + `text-center`\n  }, \"Ingres\\xE1 a tu cuenta\"), props.error ? __jsx(Error, {\n    message: props.error\n  }) : null, props.loading ? __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(Loader, null)) : null, props.logueado ? __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"text-center alert alert-success\"\n  }, \"Bienvenido/a \", props.usuario.nombre), __jsx(\"a\", {\n    href: \"/\",\n    className: \"boton bg-yellow mb-1\"\n  }, \"Continuar\")) : __jsx(React.Fragment, null, __jsx(\"form\", {\n    className: LoginStyle.form + ' ' + `form-group`,\n    name: \"form-login\",\n    id: \"form-login\",\n    onSubmit: handleSubmitLogin\n  }, __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"email\"\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    className: LoginStyle.input + ' ' + `form-control`,\n    id: \"email\",\n    name: \"email\",\n    value: formLoginValues.email,\n    onChange: handleChangeLogin\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"password\"\n  }, \"Contrase\\xF1a\"), __jsx(\"input\", {\n    type: \"password\",\n    className: LoginStyle.input + ' ' + `form-control`,\n    id: \"password\",\n    name: \"password\",\n    value: formLoginValues.password,\n    onChange: handleChangeLogin\n  }), __jsx(\"br\", null), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"boton bg-yellow mb-1\",\n    value: \"Ingresar\"\n  }), __jsx(\"a\", {\n    onClick: props.showResetPassword,\n    style: {\n      cursor: 'pointer'\n    },\n    className: LoginStyle.forgot__pass + ' ' + `text-center d-block`\n  }, \"Olvid\\xE9 mi constrase\\xF1a\")), __jsx(\"section\", {\n    className: LoginStyle.registerInLogin + ' ' + `text-center`\n  }, __jsx(\"span\", {\n    className: \"text-muted\"\n  }, \"\\xBFNo tenes cuenta?\", __jsx(\"span\", {\n    className: LoginStyle.registerLink,\n    onClick: habilitarRegister\n  }, \" Registrate\")), __jsx(\"br\", null), __jsx(GoogleLogin, {\n    className: \"mt-2\",\n    clientId: GOOGLE_CLIENT_ID,\n    buttonText: \"Iniciar sesi\\xF3n con Google\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: 'single_host_origin'\n  }))));\n};\n\nconst mapStateToProps = reducers => {\n  return reducers.usuarioReducer;\n};\n\nexport default connect(mapStateToProps, usuarioActions)(Login);","map":null,"metadata":{},"sourceType":"module"}