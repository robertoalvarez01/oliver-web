{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport SliderFotosProducto from './sliderFotos';\nimport { connect } from 'react-redux';\nimport * as carritoActions from '../../../store/actions/carritoActions';\nimport Loader from '../Loader/index';\nimport Modal from '../Modal/index';\nimport Carrito from '../Carrito/index';\nimport ProductoSingleStyle from './ProductoSingle.module.css';\nimport { URL_CLOUD_STORAGE } from '../../../config/index';\n\nconst ProductoSingle = props => {\n  useEffect(() => {\n    const {\n      marca,\n      producto,\n      idProducto\n    } = props.producto;\n\n    if (props.subProductos.length > 0) {\n      const {\n        foto,\n        peso,\n        precioFinal,\n        tamaño,\n        idSubProducto,\n        subProducto,\n        stock\n      } = props.subProductos[0];\n      guardarProductoEnState(foto, peso, precioFinal, producto, tamaño, idSubProducto, marca, subProducto, idProducto, stock);\n    } else {\n      guardarProductoEnState(`${URL_CLOUD_STORAGE}/sin-imagen.png`, null, null, producto, null, null, marca, null, idProducto, null);\n    }\n  }, [props.producto]);\n  const imagenes = []; //al vector de imagenes, le sumo las imagenes de los productos relacionados al mismo padre\n\n  props.subProductos.map(datasp => {\n    imagenes.push(datasp.foto);\n  });\n  const {\n    0: modalIsOpen,\n    1: setModalIsOpen\n  } = useState(false);\n  const {\n    0: productoData,\n    1: setProductoData\n  } = useState({});\n\n  const changeCantidad = action => {\n    let inputCantidad = document.getElementById('cantidad_prd');\n    let cantidad = parseInt(inputCantidad.value);\n\n    if (action === '-') {\n      if (cantidad <= 1) return false;\n      cantidad--;\n    } else {\n      cantidad++;\n    }\n\n    inputCantidad.value = cantidad;\n    return setProductoData(_objectSpread(_objectSpread({}, productoData), {}, {\n      cantidad\n    }));\n  };\n\n  const changePeso = (index, peso, precio, tamaño, idSubProducto, subProducto, stock) => {\n    let cajaPeso = document.getElementsByClassName(ProductoSingleStyle.caja_cantidadKg);\n\n    for (let index = 0; index < cajaPeso.length; index++) {\n      cajaPeso[index].classList.contains(ProductoSingleStyle.active) ? cajaPeso[index].classList.remove(ProductoSingleStyle.active) : null;\n    }\n\n    cajaPeso[index].classList.add(ProductoSingleStyle.active);\n\n    if (!peso || !precio || !tamaño || !idSubProducto || !subProducto || !stock) {\n      return setProductoData(_objectSpread(_objectSpread({}, productoData), {}, {\n        peso: props.subProductos[0].peso,\n        precio: props.subProductos[0].precioFinal,\n        idSubProducto: props.subProductos[0].idSubProducto,\n        subProducto: props.subProductos[0].subProducto,\n        stock: props.subProductos[0].stock\n      }));\n    }\n\n    ;\n    setProductoData(_objectSpread(_objectSpread({}, productoData), {}, {\n      peso,\n      precio,\n      tamaño,\n      idSubProducto,\n      subProducto,\n      stock\n    }));\n  };\n\n  const agregarCarrito = async () => {\n    props.agregarProducto(productoData);\n    setTimeout(() => {\n      setModalIsOpen(true);\n    }, 1700);\n  };\n\n  const closeModalCarrito = () => setModalIsOpen(false);\n\n  const guardarProductoEnState = (foto, peso, precio, producto, tamaño, idSubProducto, marca, subProducto, idProducto, stock) => {\n    setProductoData({\n      producto,\n      foto,\n      peso,\n      cantidad: 1,\n      tamaño,\n      idSubProducto,\n      marca,\n      subProducto,\n      idProducto,\n      stock,\n      precio\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12 col-sm-6\"\n  }, __jsx(SliderFotosProducto, {\n    imagenes: imagenes,\n    changePeso: changePeso,\n    subProductos: props.subProductos\n  })), __jsx(\"div\", {\n    className: `col-12 col-sm-6 pt-5` + ' ' + ProductoSingleStyle.descripcionProducto\n  }, __jsx(\"h3\", {\n    className: ProductoSingleStyle.marca\n  }, productoData.marca), __jsx(\"h1\", null, productoData.producto), __jsx(\"div\", {\n    className: ProductoSingleStyle.precios + ' ' + `d-flex my-3`\n  }, __jsx(\"div\", {\n    className: ProductoSingleStyle.indicador__precio\n  }, __jsx(\"p\", null, \"Precio\"), __jsx(\"span\", {\n    className: ProductoSingleStyle.valor__precio\n  }, \"$\", productoData.precio)), __jsx(\"div\", {\n    className: ProductoSingleStyle.indicador__cantidad\n  }, __jsx(\"p\", {\n    className: ProductoSingleStyle.titulo__indicadorCantidad + ' ' + `text-center`\n  }, \"Seleccion\\xE1 tama\\xF1o\"), __jsx(\"div\", {\n    className: \"row justify-content-center\"\n  }, props.subProductos.map((mp, key) => key == 0 ? __jsx(\"div\", {\n    key: key,\n    className: ProductoSingleStyle.caja_cantidadKg + ' ' + ProductoSingleStyle.active,\n    onClick: () => changePeso(key, `${mp.peso}`, mp.precioFinal, `${mp.tamaño}`, mp.idSubProducto, `${mp.subProducto}`, mp.stock)\n  }, __jsx(\"p\", {\n    className: ProductoSingleStyle.kilos\n  }, mp.peso, \" Kgs\"), __jsx(\"span\", {\n    className: ProductoSingleStyle.precioDelKg\n  }, \"$\", mp.precioFinal)) : __jsx(\"div\", {\n    key: key,\n    className: ProductoSingleStyle.caja_cantidadKg,\n    onClick: () => changePeso(key, `${mp.peso}`, mp.precioFinal, `${mp.tamaño}`, mp.idSubProducto, `${mp.subProducto}`, mp.stock)\n  }, __jsx(\"p\", {\n    className: ProductoSingleStyle.kilos\n  }, mp.peso, \" Kgs\"), __jsx(\"span\", {\n    className: ProductoSingleStyle.precioDelKg\n  }, \"$\", mp.precioFinal)))), __jsx(\"div\", {\n    className: \"input-group mt-2\"\n  }, __jsx(\"div\", {\n    className: \"input-group-prepend\",\n    onClick: () => changeCantidad('-')\n  }, __jsx(\"span\", {\n    className: \"input-group-text\"\n  }, \"-\")), __jsx(\"input\", {\n    type: \"text\",\n    id: \"cantidad_prd\",\n    className: \"form-control text-center\",\n    value: productoData.cantidad\n  }), __jsx(\"div\", {\n    className: \"input-group-append\",\n    onClick: () => changeCantidad('+')\n  }, __jsx(\"span\", {\n    className: \"input-group-text\"\n  }, \"+\"))))), props.loading ? __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(Loader, null)) : __jsx(\"button\", {\n    disabled: productoData.stock > 0 ? false : true,\n    className: \"boton bg-yellow\",\n    onClick: agregarCarrito\n  }, \"Comprar\"), productoData.stock > 0 ? null : __jsx(\"div\", {\n    className: \"alert alert-danger my-2 text-center\"\n  }, \"Producto sin stock\")), !modalIsOpen ? null : __jsx(Modal, {\n    closeModal: closeModalCarrito\n  }, __jsx(Carrito, null)));\n};\n\nconst mapStateToProps = reducers => {\n  return reducers.carritoReducer;\n};\n\nexport default connect(mapStateToProps, carritoActions)(ProductoSingle);","map":null,"metadata":{},"sourceType":"module"}