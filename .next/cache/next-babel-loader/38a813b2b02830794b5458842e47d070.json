{"ast":null,"code":"import { API } from '../../config/index';\nimport { TRAER_TODAS, LOADING, ERROR } from '../types/marcasTypes';\nexport const traerTodas = () => async dispatch => {\n  dispatch({\n    type: LOADING\n  });\n\n  try {\n    return fetch(`${API}/marca`).then(res => res.json()).then(data => {\n      const marcas = data.data;\n      dispatch({\n        type: TRAER_TODAS,\n        payload: marcas\n      });\n    }).catch(err => {\n      dispatch({\n        type: ERROR,\n        payload: err\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/home/franco/desarrollo/proyecto_oliver/oliver-web-next/store/actions/marcasActions.js"],"names":["API","TRAER_TODAS","LOADING","ERROR","traerTodas","dispatch","type","fetch","then","res","json","data","marcas","payload","catch","err","error"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,oBAAlB;AACA,SAAQC,WAAR,EAAoBC,OAApB,EAA4BC,KAA5B,QAAwC,sBAAxC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAI,MAAOC,QAAP,IAAkB;AAC5CA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACJ;AADA,GAAD,CAAR;;AAGA,MAAI;AACA,WAAOK,KAAK,CAAE,GAAEP,GAAI,QAAR,CAAL,CAAsBQ,IAAtB,CAA2BC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAAhC,EAA4CF,IAA5C,CAAiDG,IAAI,IAAE;AAC1D,YAAMC,MAAM,GAAGD,IAAI,CAACA,IAApB;AACAN,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAACL,WADA;AAELY,QAAAA,OAAO,EAACD;AAFH,OAAD,CAAR;AAIH,KANM,EAMJE,KANI,CAMEC,GAAG,IAAE;AACVV,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAACH,KADA;AAELU,QAAAA,OAAO,EAACE;AAFH,OAAD,CAAR;AAIH,KAXM,CAAP;AAYH,GAbD,CAaE,OAAOC,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACH,KADA;AAELU,MAAAA,OAAO,EAACG;AAFH,KAAD,CAAR;AAIH;AACJ,CAvBM","sourcesContent":["import {API} from '../../config/index';\nimport {TRAER_TODAS,LOADING,ERROR} from '../types/marcasTypes';\n\nexport const traerTodas = ()=>async (dispatch)=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        return fetch(`${API}/marca`).then(res=>res.json()).then(data=>{\n            const marcas = data.data;\n            dispatch({\n                type:TRAER_TODAS,\n                payload:marcas\n            });\n        }).catch(err=>{\n            dispatch({\n                type:ERROR,\n                payload:err\n            })\n        })\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}