{"ast":null,"code":"var _jsxFileName = \"/home/franco/desarrollo/proyecto_oliver/oliver-web-next/src/components/Login/Register.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport Error from \"../Error\";\nimport LoginStyle from './Login.module.css';\nimport { connect } from 'react-redux';\nimport * as usuarioActions from '../../../store/actions/usuarioActions';\nimport { GoogleLogin } from 'react-google-login';\nimport { GOOGLE_CLIENT_ID } from '../../../config/index';\nimport Loader from '../Loader';\n\nconst Register = props => {\n  const {\n    0: formRegisterValues,\n    1: setFormRegisterValues\n  } = useState({\n    nombre: '',\n    telefono: '',\n    address: '',\n    lat: '',\n    lon: '',\n    email: '',\n    password: ''\n  });\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const handleChangeLogin = event => {\n    setFormRegisterValues(_objectSpread(_objectSpread({}, formRegisterValues), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleSubmitLogin = event => {\n    event.preventDefault();\n\n    if (formRegisterValues.nombre.trim() === '' || formRegisterValues.telefono.trim() === '' || formRegisterValues.address.trim() === '' || formRegisterValues.lat === '' || formRegisterValues.lon === '' || formRegisterValues.email.trim() === '' || formRegisterValues.password.trim() === '') {\n      setError('Es necesario completar todos los campos');\n      return false;\n    }\n\n    setError(false);\n    return props.register(formRegisterValues);\n  };\n\n  const handleSelect = address => {\n    geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => {\n      setFormRegisterValues(_objectSpread(_objectSpread({}, formRegisterValues), {}, {\n        address,\n        lat: latLng.lat,\n        lon: latLng.lng\n      }));\n    }).catch(error => console.error('Error', error));\n  };\n\n  const handleChange = address => {\n    setFormRegisterValues(_objectSpread(_objectSpread({}, formRegisterValues), {}, {\n      address\n    }));\n  };\n\n  const habilitarLogin = () => {\n    props.showLogin();\n  };\n\n  const redirigir = () => {\n    setTimeout(() => {\n      window.location.assign('/');\n    }, 1500);\n  };\n\n  const responseGoogle = data => {\n    if (data.tokenId) {\n      return props.singInWithGoogle(data.tokenId);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: LoginStyle.login__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(\"h6\", {\n    className: LoginStyle.title__login + ' ' + `text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Registrate\"), props.error ? __jsx(Error, {\n    message: props.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }\n  }) : null, props.logueado ? __jsx(\"div\", {\n    className: \"alert alert-success text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 31\n    }\n  }, \"Bienvenido/a \", props.usuario.nombre, \" \", redirigir()) : __jsx(React.Fragment, null, __jsx(\"form\", {\n    className: LoginStyle.form + ' ' + `form-group`,\n    name: \"form-login\",\n    id: \"form-login\",\n    onSubmit: handleSubmitLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    type: \"text\",\n    className: LoginStyle.input + ' ' + `form-control`,\n    id: \"nombre\",\n    name: \"nombre\",\n    value: formRegisterValues.nombre,\n    onChange: handleChangeLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Telefono\"), __jsx(\"input\", {\n    type: \"number\",\n    className: LoginStyle.input + ' ' + `form-control`,\n    id: \"telefono\",\n    name: \"telefono\",\n    value: formRegisterValues.telefono,\n    onChange: handleChangeLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"ubicacion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Ubicaci\\xF3n\"), __jsx(PlacesAutocomplete, {\n    value: formRegisterValues.address,\n    onChange: handleChange,\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", _extends({\n    className: LoginStyle.input + ' ' + `form-control`,\n    id: \"ubicacion\"\n  }, getInputProps({\n    placeholder: 'Buscá tu dirección ...'\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    className: \"autocomplete-dropdown-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, loading && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 49\n    }\n  }, \"Loading...\"), suggestions.map((suggestion, key) => {\n    const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n    const style = suggestion.active ? {\n      backgroundColor: '#fafafa',\n      cursor: 'pointer',\n      margin: '10px',\n      padding: '5px'\n    } : {\n      backgroundColor: '#ffffff',\n      cursor: 'pointer',\n      margin: '10px',\n      padding: '5px'\n    };\n    return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n      className,\n      style,\n      key\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 45\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 49\n      }\n    }, suggestion.description));\n  })))), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"emal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    className: LoginStyle.input + ' ' + `form-control`,\n    id: \"email\",\n    name: \"email\",\n    value: formRegisterValues.email,\n    onChange: handleChangeLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"Contrase\\xF1a\"), __jsx(\"input\", {\n    type: \"password\",\n    className: LoginStyle.input + ' ' + `form-control`,\n    id: \"password\",\n    name: \"password\",\n    value: formRegisterValues.password,\n    onChange: handleChangeLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }), props.loading ? __jsx(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 38\n    }\n  }, __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 67\n    }\n  })) : __jsx(\"input\", {\n    type: \"submit\",\n    className: \"boton bg-yellow mb-1\",\n    value: \"Registrarme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 83\n    }\n  })), __jsx(\"section\", {\n    className: LoginStyle.registerInLogin + ' ' + `text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"\\xBFYa tenes cuenta?\", __jsx(\"span\", {\n    className: LoginStyle.registerLink,\n    onClick: habilitarLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 67\n    }\n  }, \" Ingres\\xE1\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }), __jsx(GoogleLogin, {\n    className: \"mt-2\",\n    clientId: GOOGLE_CLIENT_ID,\n    buttonText: \"Registrate con Google\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: 'single_host_origin',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = reducers => {\n  return reducers.usuarioReducer;\n};\n\nexport default connect(mapStateToProps, usuarioActions)(Register);","map":{"version":3,"sources":["/home/franco/desarrollo/proyecto_oliver/oliver-web-next/src/components/Login/Register.js"],"names":["React","useState","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","Error","LoginStyle","connect","usuarioActions","GoogleLogin","GOOGLE_CLIENT_ID","Loader","Register","props","formRegisterValues","setFormRegisterValues","nombre","telefono","address","lat","lon","email","password","error","setError","handleChangeLogin","event","target","name","value","handleSubmitLogin","preventDefault","trim","register","handleSelect","then","results","latLng","lng","catch","console","handleChange","habilitarLogin","showLogin","redirigir","setTimeout","window","location","assign","responseGoogle","data","tokenId","singInWithGoogle","login__container","title__login","logueado","usuario","form","label","input","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","key","className","active","style","backgroundColor","cursor","margin","padding","description","registerInLogin","registerLink","mapStateToProps","reducers","usuarioReducer"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport PlacesAutocomplete,{geocodeByAddress,geocodeByPlaceId,getLatLng} from 'react-places-autocomplete';\nimport Error from \"../Error\";\nimport LoginStyle from './Login.module.css';\nimport { connect } from 'react-redux';\nimport * as usuarioActions from '../../../store/actions/usuarioActions';\nimport { GoogleLogin } from 'react-google-login';\nimport {GOOGLE_CLIENT_ID} from '../../../config/index'\nimport Loader from '../Loader';\n\nconst Register = (props) => {\n\n    const [formRegisterValues, setFormRegisterValues] = useState({\n        nombre:'',\n        telefono:'',\n        address:'',\n        lat:'',\n        lon:'',\n        email:'',\n        password:''\n    });\n    const [error, setError] = useState(false);\n\n    const handleChangeLogin = event=>{\n        setFormRegisterValues({\n            ...formRegisterValues,\n            [event.target.name]:event.target.value\n        })\n    };\n\n    const handleSubmitLogin = event=>{\n        event.preventDefault();\n        if(formRegisterValues.nombre.trim()==='' || formRegisterValues.telefono.trim() === '' || \n        formRegisterValues.address.trim()==='' || formRegisterValues.lat === '' || formRegisterValues.lon === '' || formRegisterValues.email.trim()==='' || formRegisterValues.password.trim()===''){\n            setError('Es necesario completar todos los campos');\n            return false;\n        }\n        setError(false);\n        return props.register(formRegisterValues);\n    }\n\n    const handleSelect = address => {\n        geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng =>{\n            setFormRegisterValues({\n                ...formRegisterValues,\n                address,\n                lat:latLng.lat,\n                lon:latLng.lng\n            });\n        })\n        .catch(error => console.error('Error', error));\n    };\n    const handleChange = address => {\n        setFormRegisterValues({\n            ...formRegisterValues,\n            address\n        });\n    };\n\n    const habilitarLogin = ()=>{\n        props.showLogin();\n    }\n\n    const redirigir = ()=>{\n        setTimeout(() => {\n            window.location.assign('/');\n        }, 1500);\n    }\n    const responseGoogle = data=>{\n        if(data.tokenId){\n            return props.singInWithGoogle(data.tokenId);\n        }\n    }\n    return (\n        <div className={LoginStyle.login__container}>\n            <h6 className={LoginStyle.title__login + ' ' + `text-center`}>Registrate</h6>\n            {(props.error)?<Error message={props.error}/>:null}\n            {(props.logueado)?<div className=\"alert alert-success text-center\">Bienvenido/a {props.usuario.nombre} {redirigir()}</div>:\n            <>\n                <form className={LoginStyle.form + ' ' + `form-group`} name=\"form-login\" id=\"form-login\" onSubmit={handleSubmitLogin}>\n                    <label className={LoginStyle.label} htmlFor=\"nombre\">Nombre</label>\n                    <input type=\"text\"  className={LoginStyle.input + ' ' + `form-control`} id=\"nombre\" name=\"nombre\" value={formRegisterValues.nombre} onChange={handleChangeLogin}/>\n                    \n                    <label className={LoginStyle.label} htmlFor=\"telefono\">Telefono</label>\n                    <input type=\"number\"  className={LoginStyle.input + ' ' + `form-control`} id=\"telefono\" name=\"telefono\" value={formRegisterValues.telefono} onChange={handleChangeLogin}/>\n                    \n                    <label className={LoginStyle.label} htmlFor=\"ubicacion\">Ubicación</label>\n                    <PlacesAutocomplete value={formRegisterValues.address} onChange={handleChange} onSelect={handleSelect}>\n                        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                            <div>\n                                <input\n                                    className={LoginStyle.input + ' ' + `form-control`} id=\"ubicacion\"\n                                    {...getInputProps({\n                                        placeholder: 'Buscá tu dirección ...',\n                                    })}\n                                />\n                                <div className=\"autocomplete-dropdown-container\">\n                                    {loading && <div>Loading...</div>}\n                                    {suggestions.map((suggestion,key) => {\n                                        const className = suggestion.active\n                                        ? 'suggestion-item--active'\n                                        : 'suggestion-item';\n                                        // inline style for demonstration purpose\n                                        const style = suggestion.active\n                                        ? { backgroundColor: '#fafafa', cursor: 'pointer',margin:'10px',padding:'5px' }\n                                        : { backgroundColor: '#ffffff', cursor: 'pointer',margin:'10px',padding:'5px' };\n                                        return (\n                                            <div\n                                                {...getSuggestionItemProps(suggestion, {\n                                                className,\n                                                style,\n                                                key\n                                                })}\n                                            >\n                                                <span>{suggestion.description}</span>\n                                            </div>\n                                        );\n                                    })}\n                                </div>\n                            </div>\n                        )}\n                    </PlacesAutocomplete>\n                    {/* <input type=\"text\"  className={LoginStyle.input + ' ' + `form-control`} id=\"ubicacion\" name=\"ubicacion\" value={formRegisterValues.ubicacion} onChange={handleChangeLogin}/>\n                    */}\n                    <label className={LoginStyle.label} htmlFor=\"emal\">Email</label>\n                    <input type=\"email\"  className={LoginStyle.input + ' ' + `form-control`} id=\"email\" name=\"email\" value={formRegisterValues.email} onChange={handleChangeLogin}/>\n                    \n                    <label className={LoginStyle.label} htmlFor=\"password\">Contraseña</label>\n                    <input type=\"password\"  className={LoginStyle.input + ' ' + `form-control`} id=\"password\" name=\"password\" value={formRegisterValues.password} onChange={handleChangeLogin}/>\n                    \n                    <br/>\n                    {(props.loading)?<div className=\"text-center\"><Loader/></div>:<input type=\"submit\" className=\"boton bg-yellow mb-1\" value=\"Registrarme\"/>}\n                </form>\n                <section className={LoginStyle.registerInLogin + ' ' + `text-center`}>\n                    <span className=\"text-muted\">¿Ya tenes cuenta?<span className={LoginStyle.registerLink} onClick={habilitarLogin}> Ingresá</span></span>\n                    <br/>\n                    <GoogleLogin\n                        className=\"mt-2\"\n                        clientId={GOOGLE_CLIENT_ID}\n                        buttonText=\"Registrate con Google\"\n                        onSuccess={responseGoogle}\n                        onFailure={responseGoogle}\n                        cookiePolicy={'single_host_origin'}\n                    />\n                </section>\n            </>\n            }\n        </div>\n    );\n}\nconst mapStateToProps = reducers=>{\n    return reducers.usuarioReducer;\n}\n\nexport default connect(mapStateToProps,usuarioActions)(Register);"]},"metadata":{},"sourceType":"module"}