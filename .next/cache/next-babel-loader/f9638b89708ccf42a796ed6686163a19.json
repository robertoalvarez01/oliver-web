{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport Error from \"../Error\";\nimport LoginStyle from './Login.module.css';\nimport { connect } from 'react-redux';\nimport * as usuarioActions from '../../../store/actions/usuarioActions';\nimport { GoogleLogin } from 'react-google-login';\nimport { GOOGLE_CLIENT_ID } from '../../../config/index';\nimport Loader from '../Loader';\n\nvar Register = function Register(props) {\n  var _useState = useState({\n    nombre: '',\n    telefono: '',\n    address: '',\n    lat: '',\n    lon: '',\n    email: '',\n    password: ''\n  }),\n      formRegisterValues = _useState[0],\n      setFormRegisterValues = _useState[1];\n\n  var _useState2 = useState(false),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleChangeLogin = function handleChangeLogin(event) {\n    setFormRegisterValues(_objectSpread(_objectSpread({}, formRegisterValues), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleSubmitLogin = function handleSubmitLogin(event) {\n    event.preventDefault();\n\n    if (formRegisterValues.nombre.trim() === '' || formRegisterValues.telefono.trim() === '' || formRegisterValues.address.trim() === '' || formRegisterValues.lat === '' || formRegisterValues.lon === '' || formRegisterValues.email.trim() === '' || formRegisterValues.password.trim() === '') {\n      setError('Es necesario completar todos los campos');\n      return false;\n    }\n\n    setError(false);\n    return props.register(formRegisterValues);\n  };\n\n  var handleSelect = function handleSelect(address) {\n    geocodeByAddress(address).then(function (results) {\n      return getLatLng(results[0]);\n    }).then(function (latLng) {\n      setFormRegisterValues(_objectSpread(_objectSpread({}, formRegisterValues), {}, {\n        address: address,\n        lat: latLng.lat,\n        lon: latLng.lng\n      }));\n    })[\"catch\"](function (error) {\n      return console.error('Error', error);\n    });\n  };\n\n  var handleChange = function handleChange(address) {\n    setFormRegisterValues(_objectSpread(_objectSpread({}, formRegisterValues), {}, {\n      address: address\n    }));\n  };\n\n  var habilitarLogin = function habilitarLogin() {\n    props.showLogin();\n  };\n\n  var redirigir = function redirigir() {\n    setTimeout(function () {\n      window.location.assign('/');\n    }, 1500);\n  };\n\n  var responseGoogle = function responseGoogle(data) {\n    if (data.tokenId) {\n      return props.singInWithGoogle(data.tokenId);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: LoginStyle.login__container\n  }, __jsx(\"h6\", {\n    className: LoginStyle.title__login + ' ' + \"text-center\"\n  }, \"Registrate\"), props.error ? __jsx(Error, {\n    message: props.error\n  }) : null, props.logueado ? __jsx(\"div\", {\n    className: \"alert alert-success text-center\"\n  }, \"Bienvenido/a \", props.usuario.nombre, \" \", redirigir()) : __jsx(React.Fragment, null, __jsx(\"form\", {\n    className: LoginStyle.form + ' ' + \"form-group\",\n    name: \"form-login\",\n    id: \"form-login\",\n    onSubmit: handleSubmitLogin\n  }, __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"nombre\"\n  }, \"Nombre\"), __jsx(\"input\", {\n    type: \"text\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"nombre\",\n    name: \"nombre\",\n    value: formRegisterValues.nombre,\n    onChange: handleChangeLogin\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"telefono\"\n  }, \"Telefono\"), __jsx(\"input\", {\n    type: \"number\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"telefono\",\n    name: \"telefono\",\n    value: formRegisterValues.telefono,\n    onChange: handleChangeLogin\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"ubicacion\"\n  }, \"Ubicaci\\xF3n\"), __jsx(PlacesAutocomplete, {\n    value: formRegisterValues.address,\n    onChange: handleChange,\n    onSelect: handleSelect\n  }, function (_ref) {\n    var getInputProps = _ref.getInputProps,\n        suggestions = _ref.suggestions,\n        getSuggestionItemProps = _ref.getSuggestionItemProps,\n        loading = _ref.loading;\n    return __jsx(\"div\", null, __jsx(\"input\", _extends({\n      className: LoginStyle.input + ' ' + \"form-control\",\n      id: \"ubicacion\"\n    }, getInputProps({\n      placeholder: 'Buscá tu dirección ...'\n    }))), __jsx(\"div\", {\n      className: \"autocomplete-dropdown-container\"\n    }, loading && __jsx(\"div\", null, \"Loading...\"), suggestions.map(function (suggestion, key) {\n      var className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      var style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer',\n        margin: '10px',\n        padding: '5px'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer',\n        margin: '10px',\n        padding: '5px'\n      };\n      return __jsx(\"div\", getSuggestionItemProps(suggestion, {\n        className: className,\n        style: style,\n        key: key\n      }), __jsx(\"span\", null, suggestion.description));\n    })));\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"emal\"\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"email\",\n    name: \"email\",\n    value: formRegisterValues.email,\n    onChange: handleChangeLogin\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"password\"\n  }, \"Contrase\\xF1a\"), __jsx(\"input\", {\n    type: \"password\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"password\",\n    name: \"password\",\n    value: formRegisterValues.password,\n    onChange: handleChangeLogin\n  }), __jsx(\"br\", null), props.loading ? __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(Loader, null)) : __jsx(\"input\", {\n    type: \"submit\",\n    className: \"boton bg-yellow mb-1\",\n    value: \"Registrarme\"\n  })), __jsx(\"section\", {\n    className: LoginStyle.registerInLogin + ' ' + \"text-center\"\n  }, __jsx(\"span\", {\n    className: \"text-muted\"\n  }, \"\\xBFYa tenes cuenta?\", __jsx(\"span\", {\n    className: LoginStyle.registerLink,\n    onClick: habilitarLogin\n  }, \" Ingres\\xE1\")), __jsx(\"br\", null), __jsx(GoogleLogin, {\n    className: \"mt-2\",\n    clientId: GOOGLE_CLIENT_ID,\n    buttonText: \"Registrate con Google\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: 'single_host_origin'\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(reducers) {\n  return reducers.usuarioReducer;\n};\n\nexport default connect(mapStateToProps, usuarioActions)(Register);","map":null,"metadata":{},"sourceType":"module"}