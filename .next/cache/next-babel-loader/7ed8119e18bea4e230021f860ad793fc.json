{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport SliderFotosProducto from './sliderFotos';\nimport { connect } from 'react-redux';\nimport * as carritoActions from '../../../store/actions/carritoActions';\nimport Loader from '../Loader/index';\nimport Modal from '../Modal/index';\nimport Carrito from '../Carrito/index';\nimport ProductoSingleStyle from './ProductoSingle.module.css';\n\nvar ProductoSingle = function ProductoSingle(props) {\n  var _props$subProducto = props.subProducto,\n      peso = _props$subProducto.peso,\n      precioUnidad = _props$subProducto.precioUnidad,\n      idSubProducto = _props$subProducto.idSubProducto,\n      subProducto = _props$subProducto.subProducto,\n      tamaño = _props$subProducto.tamaño; //console.log(props);\n\n  useEffect(function () {\n    var _props$subProducto2 = props.subProducto,\n        foto = _props$subProducto2.foto,\n        peso = _props$subProducto2.peso,\n        precioUnidad = _props$subProducto2.precioUnidad,\n        producto = _props$subProducto2.producto,\n        tamaño = _props$subProducto2.tamaño,\n        idSubProducto = _props$subProducto2.idSubProducto,\n        marca = _props$subProducto2.marca,\n        subProducto = _props$subProducto2.subProducto;\n    guardarProductoEnState(foto, peso, precioUnidad, producto, tamaño, idSubProducto, marca, subProducto);\n  }, [props.subProducto]);\n  var imagenes = [props.subProducto.foto]; //al vector de imagenes, le sumo las imagenes de los productos relacionados al mismo padre\n\n  props.moreProducts.map(function (datamp) {\n    imagenes.push(datamp.foto);\n  });\n\n  var _useState = useState(false),\n      modalIsOpen = _useState[0],\n      setModalIsOpen = _useState[1];\n\n  var _useState2 = useState({}),\n      productoData = _useState2[0],\n      setProductoData = _useState2[1];\n\n  var changeCantidad = function changeCantidad(action) {\n    var inputCantidad = document.getElementById('cantidad_prd');\n    var cantidad = parseInt(inputCantidad.value);\n\n    if (action === '-') {\n      if (cantidad <= 1) return false;\n      cantidad--;\n    } else {\n      cantidad++;\n    }\n\n    inputCantidad.value = cantidad;\n    return setProductoData(_objectSpread(_objectSpread({}, productoData), {}, {\n      cantidad: cantidad\n    }));\n  };\n\n  var changePeso = function changePeso(index, peso, precio, tamaño, idSubProducto, subProducto) {\n    var cajaPeso = document.getElementsByClassName(ProductoSingleStyle.caja_cantidadKg);\n\n    for (var _index = 0; _index < cajaPeso.length; _index++) {\n      cajaPeso[_index].classList.contains(ProductoSingleStyle.active) ? cajaPeso[_index].classList.remove(ProductoSingleStyle.active) : null;\n    }\n\n    cajaPeso[index].classList.add(ProductoSingleStyle.active);\n\n    if (!peso || !precio || !tamaño || !idSubProducto || !subProducto) {\n      return setProductoData(_objectSpread(_objectSpread({}, productoData), {}, {\n        peso: props.subProducto.peso,\n        precio: props.subProducto.precioUnidad,\n        tamaño: props.subProducto.tamaño,\n        idSubProducto: props.subProducto.idSubProducto,\n        subProducto: props.subProducto.subProducto\n      }));\n    }\n\n    ;\n    setProductoData(_objectSpread(_objectSpread({}, productoData), {}, {\n      peso: peso,\n      precio: precio,\n      tamaño: tamaño,\n      idSubProducto: idSubProducto,\n      subProducto: subProducto\n    }));\n  };\n\n  var agregarCarrito = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              props.agregarProducto(productoData);\n              setTimeout(function () {\n                setModalIsOpen(true);\n              }, 1700);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function agregarCarrito() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var closeModalCarrito = function closeModalCarrito() {\n    return setModalIsOpen(false);\n  };\n\n  var guardarProductoEnState = function guardarProductoEnState(foto, peso, precioUnidad, producto, tamaño, idSubProducto, marca, subProducto) {\n    setProductoData({\n      producto: producto,\n      foto: foto,\n      peso: peso,\n      cantidad: 1,\n      precioUnidad: precioUnidad,\n      tamaño: tamaño,\n      idSubProducto: idSubProducto,\n      marca: marca,\n      subProducto: subProducto\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-12 col-sm-6\"\n  }, __jsx(SliderFotosProducto, {\n    imagenes: imagenes,\n    changePeso: changePeso,\n    moreProducts: props.moreProducts\n  })), __jsx(\"div\", {\n    className: \"col-12 col-sm-6 pt-5\" + ' ' + ProductoSingleStyle.descripcionProducto\n  }, __jsx(\"h3\", {\n    className: ProductoSingleStyle.marca\n  }, productoData.marca), __jsx(\"h1\", null, productoData.subProducto), __jsx(\"div\", {\n    className: ProductoSingleStyle.precios + ' ' + \"d-flex my-3\"\n  }, __jsx(\"div\", {\n    className: ProductoSingleStyle.indicador__precio\n  }, __jsx(\"p\", null, \"Precio\"), __jsx(\"span\", {\n    className: ProductoSingleStyle.valor__precio\n  }, \"$\", productoData.precioUnidad)), __jsx(\"div\", {\n    className: ProductoSingleStyle.indicador__cantidad\n  }, __jsx(\"p\", {\n    className: ProductoSingleStyle.titulo__indicadorCantidad + ' ' + \"text-center\"\n  }, \"Seleccion\\xE1 tama\\xF1o\"), __jsx(\"div\", {\n    className: \"row justify-content-center\"\n  }, __jsx(\"div\", {\n    className: ProductoSingleStyle.caja_cantidadKg + ' ' + ProductoSingleStyle.active,\n    onClick: function onClick() {\n      return changePeso(0, \"\".concat(peso), precioUnidad, \"\".concat(tamaño), idSubProducto, \"\".concat(subProducto));\n    }\n  }, __jsx(\"p\", {\n    className: ProductoSingleStyle.kilos\n  }, productoData.peso, \" Kgs\"), __jsx(\"span\", {\n    className: ProductoSingleStyle.precioDelKg\n  }, \"$\", productoData.precioUnidad)), props.moreProducts.map(function (mp, key) {\n    return __jsx(\"div\", {\n      key: key,\n      className: ProductoSingleStyle.caja_cantidadKg,\n      onClick: function onClick() {\n        return changePeso(key + 1, \"\".concat(mp.peso), mp.precioUnidad, \"\".concat(mp.tamaño), mp.idSubProducto, \"\".concat(mp.subProducto));\n      }\n    }, __jsx(\"p\", {\n      className: ProductoSingleStyle.kilos\n    }, mp.peso, \" Kgs\"), __jsx(\"span\", {\n      className: ProductoSingleStyle.precioDelKg\n    }, \"$\", mp.precioUnidad));\n  })), __jsx(\"div\", {\n    className: \"input-group mt-2\"\n  }, __jsx(\"div\", {\n    className: \"input-group-prepend\",\n    onClick: function onClick() {\n      return changeCantidad('-');\n    }\n  }, __jsx(\"span\", {\n    className: \"input-group-text\"\n  }, \"-\")), __jsx(\"input\", {\n    type: \"text\",\n    id: \"cantidad_prd\",\n    className: \"form-control text-center\",\n    value: productoData.cantidad\n  }), __jsx(\"div\", {\n    className: \"input-group-append\",\n    onClick: function onClick() {\n      return changeCantidad('+');\n    }\n  }, __jsx(\"span\", {\n    className: \"input-group-text\"\n  }, \"+\"))))), props.loading ? __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(Loader, null)) : __jsx(\"button\", {\n    className: \"boton bg-yellow\",\n    onClick: agregarCarrito\n  }, \"Comprar\")), !modalIsOpen ? null : __jsx(Modal, {\n    closeModal: closeModalCarrito\n  }, __jsx(Carrito, null)));\n};\n\nvar mapStateToProps = function mapStateToProps(reducers) {\n  return reducers.carritoReducer;\n};\n\nexport default connect(mapStateToProps, carritoActions)(ProductoSingle);","map":null,"metadata":{},"sourceType":"module"}