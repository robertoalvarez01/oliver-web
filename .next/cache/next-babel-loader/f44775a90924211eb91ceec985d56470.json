{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from '../../src/components/Head';\nimport Loader from '../../src/components/Loader';\nimport { connect } from 'react-redux';\nimport * as carritoActions from '../../store/actions/carritoActions';\nimport * as enviosActions from '../../store/actions/enviosActions';\nimport * as zonasActions from '../../store/actions/zonasActions';\nimport * as ventasActions from '../../store/actions/ventasActions';\nimport { useEffect, useState } from 'react';\nimport { API } from '../../config/index';\nimport Error from '../../src/components/Error';\n\nvar Swal = require('sweetalert2');\n\nvar carritoTraerProductos = carritoActions.traerProductos;\nvar enviosGuardar = enviosActions.guardar;\nvar zonasGuardar = zonasActions.seleccionar,\n    traerZonas = zonasActions.traerTodas;\nvar inicializarStoreVenta = ventasActions.init,\n    setDataEnvioEnVenta = ventasActions.setCostoEnvio;\n\nvar ProcesarVenta = function ProcesarVenta(props) {\n  var _useState = useState(false),\n      error = _useState[0],\n      setError = _useState[1];\n\n  var carritoReducer = props.carritoReducer,\n      ventaReducer = props.ventaReducer,\n      carritoTraerProductos = props.carritoTraerProductos,\n      enviosGuardar = props.enviosGuardar,\n      zonasGuardar = props.zonasGuardar,\n      inicializarStoreVenta = props.inicializarStoreVenta,\n      setDataEnvioEnVenta = props.setDataEnvioEnVenta,\n      traerZonas = props.traerZonas,\n      payment_id = props.payment_id,\n      status = props.status,\n      collection_id = props.collection_id;\n  var _props$usuarioReducer = props.usuarioReducer,\n      usuario = _props$usuarioReducer.usuario,\n      logueado = _props$usuarioReducer.logueado;\n  var _props$zonasReducer = props.zonasReducer,\n      zonas = _props$zonasReducer.zonas,\n      zona = _props$zonasReducer.zona;\n  var _props$ventaReducer = props.ventaReducer,\n      idMedioPago = _props$ventaReducer.idMedioPago,\n      tipoEnvio = _props$ventaReducer.tipoEnvio,\n      productos = _props$ventaReducer.productos,\n      cantidad = _props$ventaReducer.cantidad,\n      subtotal = _props$ventaReducer.subtotal,\n      porcentaje_descuento = _props$ventaReducer.porcentaje_descuento,\n      descuento = _props$ventaReducer.descuento,\n      total = _props$ventaReducer.total;\n  useEffect(function () {\n    if (status == 'approved') {\n      return traerZonas();\n    }\n\n    setError(true);\n  }, []);\n  useEffect(function () {\n    if (logueado && zonas.length > 0) {\n      var dataEnvio = JSON.parse(localStorage.getItem('dataEnvio'));\n      enviosGuardar(dataEnvio.tipo);\n      zonasGuardar(dataEnvio.zona);\n      carritoTraerProductos();\n    }\n  }, [logueado, zonas]);\n  useEffect(function () {\n    if (carritoReducer.productos.length > 0) {\n      inicializarStoreVenta();\n      setDataEnvioEnVenta();\n    }\n  }, [carritoReducer.productos]);\n  useEffect(function () {\n    if (!tipoEnvio || !productos.length || cantidad == 0 || total == 0) {\n      console.log('no se puede completar la operacion');\n      return;\n    }\n\n    var idUsuario = usuario.idUsuario;\n    var dataToRequest = {\n      envio: {\n        idZona: zona.idZona,\n        tipo: tipoEnvio\n      },\n      venta: {\n        subtotal: subtotal,\n        porcentaje_descuento: porcentaje_descuento,\n        descuento: descuento,\n        total: total,\n        productos: productos,\n        collection_id: collection_id,\n        payment_id: payment_id,\n        idMedioPago: idMedioPago,\n        idUsuario: idUsuario\n      }\n    }; //console.log(dataToRequest);\n\n    registrarVenta(dataToRequest);\n  }, [ventaReducer]);\n\n  var registrarVenta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      var headers, url, reqVenta;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              headers = new Headers();\n              headers.append('token', usuario.token);\n              headers.append(\"Content-Type\", \"application/json\");\n              url = \"\".concat(API, \"/ventas/registrarVenta\");\n              _context.next = 7;\n              return fetch(url, {\n                headers: headers,\n                method: 'POST',\n                body: JSON.stringify(data)\n              });\n\n            case 7:\n              reqVenta = _context.sent;\n\n              if (reqVenta.status == 200) {\n                localStorage.removeItem('dataEnvio');\n                localStorage.removeItem('carrito');\n                Swal.fire('Listo', 'Felicidades, tu compra se registró con éxito. En breve nos comunicaremos con usted para informarle el estado de su compra vía email.', 'success').then(function () {\n                  return window.location.assign('/');\n                });\n              } else {\n                setError(true);\n              }\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              setError(_context.t0.message);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function registrarVenta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return error ? __jsx(Error, {\n    message: \"Ha ocurrido un error, intentalo mas tarde\"\n  }) : __jsx(React.Fragment, null, __jsx(Head, {\n    title: \"Finalizacion de compra\",\n    metadesc: \"\"\n  }), __jsx(\"div\", {\n    className: \"jsx-2063553454\" + \" \" + \"wrapper\"\n  }, __jsx(Loader, null), __jsx(\"p\", {\n    className: \"jsx-2063553454\"\n  }, \"Su compra esta siento procesada, aguarde unos segundos...\")), __jsx(_JSXStyle, {\n    id: \"2063553454\"\n  }, [\".wrapper.jsx-2063553454{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:90vh;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\"]));\n};\n\nProcesarVenta.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var query, collection_id, payment_id, status;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            query = _ref2.query;\n            collection_id = query.collection_id, payment_id = query.payment_id, status = query.status;\n            return _context2.abrupt(\"return\", {\n              collection_id: collection_id,\n              payment_id: payment_id,\n              status: status\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar mapStateToProps = function mapStateToProps(_ref4) {\n  var carritoReducer = _ref4.carritoReducer,\n      enviosReducer = _ref4.enviosReducer,\n      usuarioReducer = _ref4.usuarioReducer,\n      zonasReducer = _ref4.zonasReducer,\n      ventaReducer = _ref4.ventaReducer;\n  return {\n    carritoReducer: carritoReducer,\n    enviosReducer: enviosReducer,\n    usuarioReducer: usuarioReducer,\n    zonasReducer: zonasReducer,\n    ventaReducer: ventaReducer\n  };\n};\n\nvar mapDispatchToProps = {\n  enviosGuardar: enviosGuardar,\n  carritoTraerProductos: carritoTraerProductos,\n  zonasGuardar: zonasGuardar,\n  setDataEnvioEnVenta: setDataEnvioEnVenta,\n  inicializarStoreVenta: inicializarStoreVenta,\n  traerZonas: traerZonas\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcesarVenta);","map":null,"metadata":{},"sourceType":"module"}