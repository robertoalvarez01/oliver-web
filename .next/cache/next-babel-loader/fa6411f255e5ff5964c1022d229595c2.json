{"ast":null,"code":"//import {API} from '../config/index';\nimport { TRAER_PRODUCTOS, AGREGAR_PRODUCTO, ELIMINAR_PRODUCTO, LOADING, ERROR } from '../types/carritoTypes';\nexport const traerProductos = () => async dispatch => {\n  dispatch({\n    type: LOADING\n  });\n\n  try {\n    const productos = JSON.parse(localStorage.getItem('carrito'));\n    dispatch({\n      type: TRAER_PRODUCTOS,\n      payload: productos\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};\nexport const agregarProducto = producto => async (dispatch, getState) => {\n  dispatch({\n    type: LOADING\n  });\n\n  try {\n    //productos que hay en el reducer\n    let {\n      productos\n    } = getState().carritoReducer;\n    let listProductosUpgrade;\n    let productoRepetido = productos.filter(res => res.idSubProducto == producto.idSubProducto);\n\n    if (productoRepetido.length > 0) {\n      productoRepetido[0].cantidad = productoRepetido[0].cantidad + producto.cantidad;\n      let restantes = productos.filter(newRes => newRes.idSubProducto != productoRepetido[0].idSubProducto);\n\n      if (restantes.length > 0) {\n        listProductosUpgrade = [...restantes, productoRepetido[0]];\n      } else {\n        listProductosUpgrade = [productoRepetido[0]];\n      }\n    } else {\n      listProductosUpgrade = [...productos, producto];\n    } //actualizo localstorage\n\n\n    localStorage.setItem('carrito', JSON.stringify(listProductosUpgrade));\n    setTimeout(() => {\n      dispatch({\n        type: AGREGAR_PRODUCTO,\n        payload: listProductosUpgrade\n      });\n    }, 1500);\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};\nexport const eliminarProducto = idSubProducto => async (dispatch, getState) => {\n  dispatch({\n    type: LOADING\n  });\n\n  try {\n    const {\n      productos\n    } = getState().carritoReducer; //filtro los productos que no tengan el idProducto que se recibió. entonces elimino ese producto y actualizo el reducer.\n\n    const newProductos = productos.filter(newArray => newArray.idSubProducto !== idSubProducto);\n    console.log(newProductos);\n    localStorage.setItem('carrito', JSON.stringify(newProductos));\n    dispatch({\n      type: ELIMINAR_PRODUCTO,\n      payload: newProductos\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/franc/Documents/oliver-2/oliver-sitio/store/actions/carritoActions.js"],"names":["TRAER_PRODUCTOS","AGREGAR_PRODUCTO","ELIMINAR_PRODUCTO","LOADING","ERROR","traerProductos","dispatch","type","productos","JSON","parse","localStorage","getItem","payload","error","agregarProducto","producto","getState","carritoReducer","listProductosUpgrade","productoRepetido","filter","res","idSubProducto","length","cantidad","restantes","newRes","setItem","stringify","setTimeout","eliminarProducto","newProductos","newArray","console","log"],"mappings":"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","sourcesContent":["//import {API} from '../config/index';\r\nimport {TRAER_PRODUCTOS,AGREGAR_PRODUCTO,ELIMINAR_PRODUCTO,LOADING,ERROR} from '../types/carritoTypes';\r\n\r\nexport const traerProductos = ()=>async (dispatch)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        const productos = JSON.parse(localStorage.getItem('carrito'));\r\n        dispatch({\r\n            type:TRAER_PRODUCTOS,\r\n            payload:productos\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })\r\n    }\r\n}\r\n\r\nexport const agregarProducto = producto=>async (dispatch,getState)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        //productos que hay en el reducer\r\n        let {productos} = getState().carritoReducer;\r\n        let listProductosUpgrade;\r\n        let productoRepetido = productos.filter(res=>res.idSubProducto==producto.idSubProducto);\r\n        if(productoRepetido.length>0){\r\n            productoRepetido[0].cantidad = productoRepetido[0].cantidad + producto.cantidad;\r\n            let restantes = productos.filter(newRes=>newRes.idSubProducto!=productoRepetido[0].idSubProducto);\r\n            if(restantes.length>0){\r\n                listProductosUpgrade = [\r\n                    ...restantes,\r\n                    productoRepetido[0]\r\n                ];\r\n            }else{\r\n                listProductosUpgrade = [\r\n                    productoRepetido[0]\r\n                ];\r\n            }\r\n        }else{\r\n            listProductosUpgrade = [\r\n                ...productos,\r\n                producto\r\n            ];\r\n        }\r\n        //actualizo localstorage\r\n        localStorage.setItem('carrito',JSON.stringify(listProductosUpgrade));\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type:AGREGAR_PRODUCTO,\r\n                payload:listProductosUpgrade\r\n            })\r\n        }, 1500);\r\n    } catch (error) {\r\n       dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        }) \r\n    }\r\n}\r\n\r\nexport const eliminarProducto = idSubProducto=>async (dispatch,getState)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        const {productos} = getState().carritoReducer;\r\n        //filtro los productos que no tengan el idProducto que se recibió. entonces elimino ese producto y actualizo el reducer.\r\n        const newProductos = productos.filter(newArray=>newArray.idSubProducto !== idSubProducto);\r\n        console.log(newProductos);\r\n        localStorage.setItem('carrito',JSON.stringify(newProductos));\r\n        dispatch({\r\n            type:ELIMINAR_PRODUCTO,\r\n            payload:newProductos\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })    \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}