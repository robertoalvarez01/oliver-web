{"ast":null,"code":"import { API } from '../../config/index';\nimport { TRAER_TODOS, LOADING, ERROR, TRAER_PROMOCIONES, ORDENAR_PRODUCTOS, FILTRANDO } from '../types/productosTypes'; //solucion temporal\n\nimport promociones from '../utils/promociones.json';\nimport productos from '../utils/db_oliver.json';\nexport const traerTodos = () => async dispatch => {\n  dispatch({\n    type: LOADING\n  });\n\n  try {\n    dispatch({\n      type: TRAER_TODOS,\n      payload: productos\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};\nexport const traerPromociones = () => async dispatch => {\n  dispatch({\n    type: LOADING\n  });\n\n  try {\n    fetch(`${API}/subproducto?desde=1&limite=4`).then(res => res.json()).then(data => {\n      dispatch({\n        type: TRAER_PROMOCIONES,\n        payload: data.data\n      });\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};\nexport const ordenarProductos = productosOrdenados => async dispatch => {\n  dispatch({\n    type: LOADING\n  });\n\n  try {\n    dispatch({\n      type: ORDENAR_PRODUCTOS,\n      payload: productosOrdenados\n    });\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};\nexport const filtrarProductos = url => async dispatch => {\n  console.log('filtrando');\n  console.log(url);\n  dispatch({\n    type: LOADING\n  });\n\n  try {\n    setTimeout(() => {\n      dispatch({\n        type: FILTRANDO,\n        payload: productos\n      });\n    }, 1000);\n  } catch (error) {\n    dispatch({\n      type: ERROR,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/home/franco/desarrollo/proyecto_oliver/oliver-web-next/store/actions/productosActions.js"],"names":["API","TRAER_TODOS","LOADING","ERROR","TRAER_PROMOCIONES","ORDENAR_PRODUCTOS","FILTRANDO","promociones","productos","traerTodos","dispatch","type","payload","error","traerPromociones","fetch","then","res","json","data","ordenarProductos","productosOrdenados","filtrarProductos","url","console","log","setTimeout"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,oBAAlB;AACA,SAAQC,WAAR,EAAoBC,OAApB,EAA4BC,KAA5B,EAAkCC,iBAAlC,EAAoDC,iBAApD,EAAsEC,SAAtE,QAAsF,yBAAtF,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAI,MAAOC,QAAP,IAAkB;AAC5CA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACT;AADA,GAAD,CAAR;;AAGA,MAAI;AACAQ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACV,WADA;AAELW,MAAAA,OAAO,EAACJ;AAFH,KAAD,CAAR;AAIH,GALD,CAKE,OAAOK,KAAP,EAAc;AACZH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACR,KADA;AAELS,MAAAA,OAAO,EAACC;AAFH,KAAD,CAAR;AAIH;AACJ,CAfM;AAiBP,OAAO,MAAMC,gBAAgB,GAAG,MAAI,MAAMJ,QAAN,IAAiB;AACjDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACT;AADA,GAAD,CAAR;;AAGA,MAAI;AACAa,IAAAA,KAAK,CAAE,GAAEf,GAAI,+BAAR,CAAL,CAA6CgB,IAA7C,CAAkDC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAAvD,EAAmEF,IAAnE,CAAwEG,IAAI,IAAE;AAC1ET,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAACP,iBADA;AAELQ,QAAAA,OAAO,EAACO,IAAI,CAACA;AAFR,OAAD,CAAR;AAIH,KALD;AAMH,GAPD,CAOE,OAAON,KAAP,EAAc;AACZH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACR,KADA;AAELS,MAAAA,OAAO,EAACC;AAFH,KAAD,CAAR;AAIH;AACJ,CAjBM;AAmBP,OAAO,MAAMO,gBAAgB,GAAGC,kBAAkB,IAAE,MAAMX,QAAN,IAAgB;AAChEA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACT;AADA,GAAD,CAAR;;AAGA,MAAI;AACAQ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACN,iBADA;AAELO,MAAAA,OAAO,EAACS;AAFH,KAAD,CAAR;AAIH,GALD,CAKE,OAAOR,KAAP,EAAc;AACZH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACR,KADA;AAELS,MAAAA,OAAO,EAACC;AAFH,KAAD,CAAR;AAIH;AACJ,CAfM;AAiBP,OAAO,MAAMS,gBAAgB,GAAGC,GAAG,IAAE,MAAMb,QAAN,IAAgB;AACjDc,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAb,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAACT;AADA,GAAD,CAAR;;AAGA,MAAI;AACAwB,IAAAA,UAAU,CAAC,MAAM;AACbhB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAACL,SADA;AAELM,QAAAA,OAAO,EAACJ;AAFH,OAAD,CAAR;AAIH,KALS,EAKP,IALO,CAAV;AAMH,GAPD,CAOE,OAAOK,KAAP,EAAc;AACZH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACR,KADA;AAELS,MAAAA,OAAO,EAACC;AAFH,KAAD,CAAR;AAIH;AACJ,CAnBM","sourcesContent":["import {API} from '../../config/index';\nimport {TRAER_TODOS,LOADING,ERROR,TRAER_PROMOCIONES,ORDENAR_PRODUCTOS,FILTRANDO} from '../types/productosTypes';\n\n//solucion temporal\nimport promociones from '../utils/promociones.json';\nimport productos from '../utils/db_oliver.json'\n\nexport const traerTodos = ()=>async (dispatch)=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        dispatch({\n            type:TRAER_TODOS,\n            payload:productos\n        });\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}\n\nexport const traerPromociones = ()=>async(dispatch)=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        fetch(`${API}/subproducto?desde=1&limite=4`).then(res=>res.json()).then(data=>{\n            dispatch({\n                type:TRAER_PROMOCIONES,\n                payload:data.data\n            });\n        })\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}\n\nexport const ordenarProductos = productosOrdenados=>async dispatch=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        dispatch({\n            type:ORDENAR_PRODUCTOS,\n            payload:productosOrdenados\n        });\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}\n\nexport const filtrarProductos = url=>async dispatch=>{\n    console.log('filtrando');\n    console.log(url);\n    dispatch({\n        type:LOADING\n    });\n    try {\n        setTimeout(() => {\n            dispatch({\n                type:FILTRANDO,\n                payload:productos\n            })\n        }, 1000);\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}