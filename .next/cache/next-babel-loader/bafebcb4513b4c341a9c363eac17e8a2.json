{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\oliver-2\\\\sitio-desa\\\\src\\\\components\\\\Login\\\\Register.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport Error from \"../Error\";\nimport LoginStyle from './Login.module.css';\n\nconst Register = props => {\n  const {\n    0: formRegisterValues,\n    1: setFormRegisterValues\n  } = useState({\n    nombre: '',\n    telefono: '',\n    ubicacion: '',\n    email: '',\n    password: ''\n  });\n  const {\n    0: address,\n    1: setAddress\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n\n  const handleChangeLogin = event => {\n    setFormRegisterValues(_objectSpread(_objectSpread({}, formRegisterValues), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleSubmitLogin = event => {\n    event.preventDefault();\n\n    if (formRegisterValues.nombre.trim() === '' || formRegisterValues.telefono.trim() === '' || formRegisterValues.ubicacion.trim() === '' || formRegisterValues.email.trim() === '' || formRegisterValues.password.trim() === '') {\n      setError('Es necesario completar todos los campos');\n      return false;\n    }\n\n    setError(false);\n    return true;\n  };\n\n  handleSelect = address => {\n    geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng)).catch(error => console.error('Error', error));\n  };\n\n  handleChange = address => {\n    setAddress(address);\n  };\n\n  const habilitarLogin = () => {\n    props.showLogin();\n  };\n\n  return __jsx(\"div\", {\n    className: LoginStyle.login__container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"h6\", {\n    className: LoginStyle.title__login + ' ' + `text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Registrate\"), error ? __jsx(Error, {\n    message: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }\n  }) : null, __jsx(\"form\", {\n    className: LoginStyle.form + ' ' + `form-group`,\n    name: \"form-login\",\n    id: \"form-login\",\n    onSubmit: handleSubmitLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"nombre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    type: \"text\",\n    className: LoginStyle.input + ' ' + `form-control`,\n    id: \"nombre\",\n    name: \"nombre\",\n    value: formRegisterValues.nombre,\n    onChange: handleChangeLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Telefono\"), __jsx(\"input\", {\n    type: \"number\",\n    className: LoginStyle.input + ' ' + `form-control`,\n    id: \"telefono\",\n    name: \"telefono\",\n    value: formRegisterValues.telefono,\n    onChange: handleChangeLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"ubicacion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Ubicaci\\xF3n\"), __jsx(PlacesAutocomplete, {\n    value: formRegisterValues.address,\n    onChange: handleChange,\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", _extends({}, getInputProps({\n    placeholder: 'Search Places ...',\n    className: 'location-search-input'\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"autocomplete-dropdown-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, loading && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }, \"Loading...\"), suggestions.map(suggestion => {\n    const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n    const style = suggestion.active ? {\n      backgroundColor: '#fafafa',\n      cursor: 'pointer'\n    } : {\n      backgroundColor: '#ffffff',\n      cursor: 'pointer'\n    };\n    return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n      className,\n      style\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, suggestion.description));\n  })))), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"emal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    className: LoginStyle.input + ' ' + `form-control`,\n    id: \"email\",\n    name: \"email\",\n    value: formRegisterValues.email,\n    onChange: handleChangeLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Contrase\\xF1a\"), __jsx(\"input\", {\n    type: \"password\",\n    className: LoginStyle.input + ' ' + `form-control`,\n    id: \"password\",\n    name: \"password\",\n    value: formRegisterValues.password,\n    onChange: handleChangeLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"boton bg-yellow mb-1\",\n    value: \"Registrarme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })), __jsx(\"section\", {\n    className: LoginStyle.registerInLogin + ' ' + `text-center`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"\\xBFYa tenes cuenta?\", __jsx(\"span\", {\n    className: LoginStyle.registerLink,\n    onClick: habilitarLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 63\n    }\n  }, \" Ingres\\xE1\"))));\n};\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/franc/Documents/oliver-2/sitio-desa/src/components/Login/Register.js"],"names":["React","useState","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","Error","LoginStyle","Register","props","formRegisterValues","setFormRegisterValues","nombre","telefono","ubicacion","email","password","address","setAddress","error","setError","handleChangeLogin","event","target","name","value","handleSubmitLogin","preventDefault","trim","handleSelect","then","results","latLng","console","log","catch","handleChange","habilitarLogin","showLogin","login__container","title__login","form","label","input","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","registerInLogin","registerLink"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport PlacesAutocomplete,{geocodeByAddress,geocodeByPlaceId,getLatLng} from 'react-places-autocomplete';\r\nimport Error from \"../Error\";\r\nimport LoginStyle from './Login.module.css';\r\n\r\nconst Register = (props) => {\r\n\r\n    const [formRegisterValues, setFormRegisterValues] = useState({\r\n        nombre:'',\r\n        telefono:'',\r\n        ubicacion:'',\r\n        email:'',\r\n        password:''\r\n    });\r\n    const [address, setAddress] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleChangeLogin = event=>{\r\n        setFormRegisterValues({\r\n            ...formRegisterValues,\r\n            [event.target.name]:event.target.value\r\n        })\r\n    };\r\n\r\n    const handleSubmitLogin = event=>{\r\n        event.preventDefault();\r\n        if(formRegisterValues.nombre.trim()==='' || formRegisterValues.telefono.trim() === '' || \r\n        formRegisterValues.ubicacion.trim()==='' ||formRegisterValues.email.trim()==='' || formRegisterValues.password.trim()===''){\r\n            setError('Es necesario completar todos los campos');\r\n            return false;\r\n        }\r\n        setError(false);\r\n        return true;\r\n    }\r\n\r\n    handleSelect = address => {\r\n        geocodeByAddress(address)\r\n        .then(results => getLatLng(results[0]))\r\n        .then(latLng => console.log('Success', latLng))\r\n        .catch(error => console.error('Error', error));\r\n    };\r\n    handleChange = address => {\r\n        setAddress(address);\r\n    };\r\n\r\n    const habilitarLogin = ()=>{\r\n        props.showLogin();\r\n    }\r\n\r\n    return (\r\n        <div className={LoginStyle.login__container}>\r\n            <h6 className={LoginStyle.title__login + ' ' + `text-center`}>Registrate</h6>\r\n            {(error)?<Error message={error}/>:null}\r\n            <form className={LoginStyle.form + ' ' + `form-group`} name=\"form-login\" id=\"form-login\" onSubmit={handleSubmitLogin}>\r\n                <label className={LoginStyle.label} htmlFor=\"nombre\">Nombre</label>\r\n                <input type=\"text\"  className={LoginStyle.input + ' ' + `form-control`} id=\"nombre\" name=\"nombre\" value={formRegisterValues.nombre} onChange={handleChangeLogin}/>\r\n                \r\n                <label className={LoginStyle.label} htmlFor=\"telefono\">Telefono</label>\r\n                <input type=\"number\"  className={LoginStyle.input + ' ' + `form-control`} id=\"telefono\" name=\"telefono\" value={formRegisterValues.telefono} onChange={handleChangeLogin}/>\r\n                \r\n                <label className={LoginStyle.label} htmlFor=\"ubicacion\">Ubicación</label>\r\n                <PlacesAutocomplete\r\n                    value={formRegisterValues.address}\r\n                    onChange={handleChange}\r\n                    onSelect={handleSelect}\r\n                >\r\n                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                    <div>\r\n                        <input\r\n                        {...getInputProps({\r\n                            placeholder: 'Search Places ...',\r\n                            className: 'location-search-input',\r\n                        })}\r\n                        />\r\n                        <div className=\"autocomplete-dropdown-container\">\r\n                        {loading && <div>Loading...</div>}\r\n                        {suggestions.map(suggestion => {\r\n                            const className = suggestion.active\r\n                            ? 'suggestion-item--active'\r\n                            : 'suggestion-item';\r\n                            // inline style for demonstration purpose\r\n                            const style = suggestion.active\r\n                            ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                            : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                            return (\r\n                            <div\r\n                                {...getSuggestionItemProps(suggestion, {\r\n                                className,\r\n                                style,\r\n                                })}\r\n                            >\r\n                                <span>{suggestion.description}</span>\r\n                            </div>\r\n                            );\r\n                        })}\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n                </PlacesAutocomplete>\r\n                {/* <input type=\"text\"  className={LoginStyle.input + ' ' + `form-control`} id=\"ubicacion\" name=\"ubicacion\" value={formRegisterValues.ubicacion} onChange={handleChangeLogin}/>\r\n                 */}\r\n                <label className={LoginStyle.label} htmlFor=\"emal\">Email</label>\r\n                <input type=\"email\"  className={LoginStyle.input + ' ' + `form-control`} id=\"email\" name=\"email\" value={formRegisterValues.email} onChange={handleChangeLogin}/>\r\n                \r\n                <label className={LoginStyle.label} htmlFor=\"password\">Contraseña</label>\r\n                <input type=\"password\"  className={LoginStyle.input + ' ' + `form-control`} id=\"password\" name=\"password\" value={formRegisterValues.password} onChange={handleChangeLogin}/>\r\n                \r\n                <br/>\r\n                <input type=\"submit\" className=\"boton bg-yellow mb-1\" value=\"Registrarme\"/>\r\n            </form>\r\n            <section className={LoginStyle.registerInLogin + ' ' + `text-center`}>\r\n                <span className=\"text-muted\">¿Ya tenes cuenta?<span className={LoginStyle.registerLink} onClick={habilitarLogin}> Ingresá</span></span>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Register;"]},"metadata":{},"sourceType":"module"}