{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport CardProducto from '../CardProducto';\nimport { connect } from 'react-redux';\nimport * as subproductosActions from '../../../store/actions/subproductosActions';\nimport ProductosStyle from './Productos.module.css';\nimport Loader from '../Loader';\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport FiltroStyle from '../Filtro/Filtro.module.css';\n\nconst Productos = props => {\n  const {\n    0: filtro,\n    1: setFiltro\n  } = useState('');\n  useEffect(() => {\n    if (props.location !== '/productos') {\n      if (props.query.search) {\n        mostrarSolapaFiltro(props.query.search);\n      } else {\n        mostrarSolapaFiltro(props.query.index[0]);\n      }\n    } else {\n      getProductos();\n    }\n  }, []);\n\n  const showFiltrosMobile = () => {\n    document.getElementsByClassName('Filtro_filtros__contanier__3knXf')[0].classList.add(FiltroStyle.show_filtros);\n  };\n\n  const getProductos = async () => {\n    try {\n      await props.traerTodos();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const mostrarSolapaFiltro = filtro => {\n    setFiltro(filtro);\n  };\n\n  const handleChangeOrdenProductos = event => {\n    if (event.target.value === 'asc') {\n      props.subproductos.sort((a, b) => {\n        if (a.precioUnidad > b.precioUnidad) return 1;\n        if (a.precioUnidad < b.precioUnidad) return -1;\n        return 0;\n      });\n    } else {\n      props.subproductos.sort((a, b) => {\n        if (a.precioUnidad < b.precioUnidad) return 1;\n        if (a.precioUnidad > b.precioUnidad) return -1;\n        return 0;\n      });\n    }\n\n    ;\n    return props.ordenarProductos(props.subproductos);\n  }; //ocultar la chapita que indica el nombre del filtro activo cuando se restablecen los filtros.\n\n\n  if (props.location == '/productos' && filtro != '') {\n    setFiltro('');\n  }\n\n  return __jsx(React.Fragment, null, props.loading || !props.subproductos ? __jsx(\"div\", {\n    className: \"col-12 text-center\"\n  }, __jsx(Loader, null)) : __jsx(React.Fragment, null, filtro !== '' ? __jsx(\"span\", {\n    id: \"label__filtro-busqueda\",\n    className: ProductosStyle.label__filtro_busqueda\n  }, __jsx(FontAwesomeIcon, {\n    icon: faSearch\n  }), __jsx(\"span\", {\n    className: ProductosStyle.item_filtro_busqueda\n  }, __jsx(\"span\", {\n    className: \"text-mutedd\",\n    id: \"valor-busqueda\"\n  }, filtro))) : null, __jsx(\"div\", {\n    className: \"row justify-content-between my-2 align-items-center\",\n    style: {\n      padding: '0px 15px'\n    }\n  }, __jsx(\"span\", {\n    className: \"text-muted\"\n  }, __jsx(\"b\", {\n    className: \"txt-yellow\"\n  }, props.subproductos.length), \" productos encontrados\"), __jsx(\"div\", {\n    className: ProductosStyle.ordenarProductos + ' ' + `d-flex align-items-center`\n  }, __jsx(\"span\", {\n    className: \"txt-yellow text-bold mr-2\"\n  }, \"Ordenar por: \"), __jsx(\"select\", {\n    className: ProductosStyle.select_ordenar,\n    onChange: handleChangeOrdenProductos\n  }, __jsx(\"option\", {\n    value: \"desc\"\n  }, \"Mayor precio\"), __jsx(\"option\", {\n    value: \"asc\"\n  }, \"Menor precio\"))), __jsx(\"button\", {\n    onClick: showFiltrosMobile,\n    className: `boton bg-yellow mt-3 d-none` + ' ' + ProductosStyle.boton_filtrar_mobile\n  }, \"Filtrar\")), __jsx(\"div\", {\n    className: \"row\"\n  }, props.subproductos.map(prd => __jsx(\"div\", {\n    key: prd.idSubProducto,\n    className: \"col-6 col-md-3\"\n  }, __jsx(CardProducto, {\n    imagen: prd.foto,\n    prd: prd\n  }))))));\n};\n\nconst mapStateToProps = reducers => {\n  return reducers.subproductosReducer;\n};\n\nexport default connect(mapStateToProps, subproductosActions)(Productos);","map":null,"metadata":{},"sourceType":"module"}