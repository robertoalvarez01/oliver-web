{"ast":null,"code":"var _jsxFileName = \"/home/franco/desarrollo/proyecto_oliver/oliver-web-next/src/components/FormVenta/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from \"react\";\nimport { MP_AC_TOKEN } from \"../../../config\";\nimport { connect } from 'react-redux';\n\nconst FormVenta = props => {\n  const {\n    usuarioReducer: {\n      email\n    }\n  } = props;\n  const {\n    0: formValues,\n    1: setFormValues\n  } = useState({\n    docType: '',\n    docNumber: '',\n    cardTitular: '',\n    issuer: '',\n    installments: '',\n    total: 120,\n    paymentMethodId: null\n  });\n  const {\n    0: vencimientosValues,\n    1: setVencimientosValues\n  } = useState({\n    cardExpirationMonth: '',\n    cardExpirationYear: ''\n  });\n  const {\n    0: issuers,\n    1: setIssuers\n  } = useState([]); //lista de bancos emisores segun la tarjeta del usuario\n\n  const {\n    0: payerCosts,\n    1: setPayerCosts\n  } = useState([]); //lista de opciones de cuotas\n\n  useEffect(function mount() {\n    window.Mercadopago.setPublishableKey(MP_AC_TOKEN);\n    window.Mercadopago.getIdentificationTypes();\n  });\n  useEffect(() => {\n    if (formValues.paymentMethodId) {\n      getIssuers(formValues.paymentMethodId.id);\n    }\n  }, [formValues.paymentMethodId]);\n  useEffect(() => {\n    if (issuers.length > 0) {\n      getInstallments(issuers);\n    }\n  }, [issuers]);\n\n  const handleChange = e => {\n    if (e.target.id == \"cardNumber\") {\n      guessPaymentMethod(e.target.value);\n      return;\n    }\n\n    setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleChangeVencimiento = e => {\n    setVencimientosValues(_objectSpread(_objectSpread({}, vencimientosValues), {}, {\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  const guessPaymentMethod = cardnumber => {\n    if (cardnumber.length >= 6) {\n      let bin = cardnumber.substring(0, 6);\n      window.Mercadopago.getPaymentMethod({\n        \"bin\": bin\n      }, (status, response) => {\n        if (status == 200) {\n          let paymentMethod = response[0];\n          return setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n            paymentMethodId: paymentMethod\n          }));\n        }\n\n        console.log(response);\n        return alert('Error en la busqueda de payment');\n      });\n    }\n  };\n\n  const getIssuers = idpaymentMethod => {\n    window.Mercadopago.getIssuers(idpaymentMethod, (status, response) => {\n      if (status != 200) return alert(`issuers method info error: ${response.message}`);\n      setIssuers(response);\n      setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n        issuer: response[0].id\n      }));\n    });\n  };\n\n  const getInstallments = issuers => {\n    window.Mercadopago.getInstallments({\n      \"payment_method_id\": formValues.paymentMethodId.id,\n      \"amount\": parseFloat(formValues.total),\n      \"issuer_id\": parseInt(issuers[0].value)\n    }, (status, response) => {\n      if (status != 200) return alert(`installments method info error: ${response}`);\n      setPayerCosts(response[0].payer_costs);\n      setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n        installments: response[0].payer_costs[0].installments\n      }));\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(e.target);\n    window.Mercadopago.createToken(e.target, (status, response) => {\n      if (status == 200 || status == 201) {\n        console.log(response.id);\n      }\n\n      return false;\n    });\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Detalles del comprador\"), __jsx(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-4 my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"docType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Tipo de doc.\"), __jsx(\"select\", {\n    className: \"form-control\",\n    id: \"docType\",\n    name: \"docType\",\n    \"data-checkout\": \"docType\",\n    type: \"text\",\n    value: formValues.docType,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"col-8 my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"docNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, \"N\\xFAmero de documento\"), __jsx(\"input\", {\n    className: \"form-control\",\n    id: \"docNumber\",\n    name: \"docNumber\",\n    \"data-checkout\": \"docNumber\",\n    value: formValues.docNumber,\n    type: \"text\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }))), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Detalles de la tarjeta\"), __jsx(\"div\", {\n    className: \"form-group row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-12 my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"cardNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \"N\\xFAmero de la tarjeta\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"cardNumber\",\n    \"data-checkout\": \"cardNumber\",\n    onselectstart: \"return false\",\n    onPaste: () => false,\n    onCopy: () => false,\n    onCut: () => false,\n    onDrag: () => false,\n    onDrop: () => false,\n    autoComplete: \"off\",\n    onChange: handleChange,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"col-12 my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"cardholderName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Titular de la tarjeta\"), __jsx(\"input\", {\n    className: \"form-control\",\n    id: \"cardholderName\",\n    \"data-checkout\": \"cardholderName\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"col-6 my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Vencimiento\"), __jsx(\"div\", {\n    className: \"row px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, __jsx(\"input\", {\n    className: \"form-control col-5 mr-auto\",\n    type: \"text\",\n    placeholder: \"Mes\",\n    id: \"cardExpirationMonth\",\n    \"data-checkout\": \"cardExpirationMonth\",\n    onselectstart: \"return false\",\n    onPaste: () => false,\n    onCopy: () => false,\n    onCut: () => false,\n    onDrag: () => false,\n    onDrop: () => false,\n    autoComplete: \"off\",\n    onChange: handleChangeVencimiento,\n    value: vencimientosValues.cardExpirationMonth,\n    maxLength: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }), __jsx(\"input\", {\n    className: \"form-control col-5\",\n    type: \"text\",\n    placeholder: \"A\\xF1o\",\n    id: \"cardExpirationYear\",\n    \"data-checkout\": \"cardExpirationYear\",\n    oonselectstart: \"return false\",\n    onPaste: () => false,\n    onCopy: () => false,\n    onCut: () => false,\n    onDrag: () => false,\n    onDrop: () => false,\n    autoComplete: \"off\",\n    onChange: handleChangeVencimiento,\n    value: vencimientosValues.cardExpirationYear,\n    maxLength: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }))), __jsx(\"div\", {\n    className: \"col-6 my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"securityCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, \"C\\xF3digo de seguridad\"), __jsx(\"input\", {\n    id: \"securityCode\",\n    \"data-checkout\": \"securityCode\",\n    type: \"text\",\n    onselectstart: \"return false\",\n    onPaste: () => false,\n    onCopy: () => false,\n    onCut: () => false,\n    onDrag: () => false,\n    onDrop: () => false,\n    autoComplete: \"off\",\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    id: \"issuerInput\",\n    className: \"col-6 my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"issuer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, \"Banco emisor\"), __jsx(\"select\", {\n    id: \"issuer\",\n    name: \"issuer\",\n    \"data-checkout\": \"issuer\",\n    defaultValue: formValues.issuer,\n    onChange: handleChange,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, \"Seleccione Banco emisor\"), issuers.map((issuer, key) => __jsx(\"option\", {\n    value: issuer.id,\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, issuer.name)))), __jsx(\"div\", {\n    className: \"col-6 my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"installments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, \"Cuotas\"), __jsx(\"select\", {\n    type: \"text\",\n    id: \"installments\",\n    name: \"installments\",\n    defaultValue: formValues.installments,\n    onChange: handleChange,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, \"Seleccione cuotas\"), payerCosts.map((installment, key) => __jsx(\"option\", {\n    value: installment.installments,\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, installment.recommended_message)))), __jsx(\"div\", {\n    className: \"col-12 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }), __jsx(\"button\", {\n    className: \"boton bg-yellow\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, \"Pagar\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = ({\n  usuarioReducer\n}) => {\n  return {\n    usuarioReducer\n  };\n};\n\nexport default connect(mapStateToProps, {})(FormVenta);","map":{"version":3,"sources":["/home/franco/desarrollo/proyecto_oliver/oliver-web-next/src/components/FormVenta/index.js"],"names":["useEffect","useState","MP_AC_TOKEN","connect","FormVenta","props","usuarioReducer","email","formValues","setFormValues","docType","docNumber","cardTitular","issuer","installments","total","paymentMethodId","vencimientosValues","setVencimientosValues","cardExpirationMonth","cardExpirationYear","issuers","setIssuers","payerCosts","setPayerCosts","mount","window","Mercadopago","setPublishableKey","getIdentificationTypes","getIssuers","id","length","getInstallments","handleChange","e","target","guessPaymentMethod","value","name","handleChangeVencimiento","cardnumber","bin","substring","getPaymentMethod","status","response","paymentMethod","console","log","alert","idpaymentMethod","message","parseFloat","parseInt","payer_costs","handleSubmit","preventDefault","createToken","map","key","installment","recommended_message","mapStateToProps"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { MP_AC_TOKEN } from \"../../../config\";\nimport {connect} from 'react-redux';\n\nconst FormVenta = (props) => {\n    const {usuarioReducer:{email}} = props;\n    const [formValues, setFormValues] = useState({\n        docType:'',\n        docNumber:'',\n        cardTitular:'',\n        issuer:'',\n        installments:'',\n        total:120,\n        paymentMethodId:null\n    });\n\n    const [vencimientosValues, setVencimientosValues] = useState({\n        cardExpirationMonth:'',\n        cardExpirationYear:''\n    });\n\n    const [issuers, setIssuers] = useState([]);//lista de bancos emisores segun la tarjeta del usuario\n    const [payerCosts, setPayerCosts] = useState([]);//lista de opciones de cuotas\n\n    useEffect(function mount() {\n        window.Mercadopago.setPublishableKey(MP_AC_TOKEN);\n        window.Mercadopago.getIdentificationTypes();\n    });\n\n    useEffect(() => {\n        if(formValues.paymentMethodId){\n            getIssuers(formValues.paymentMethodId.id);\n        }\n    }, [formValues.paymentMethodId]);\n\n    useEffect(() => {\n        if(issuers.length>0){\n            getInstallments(issuers);\n        }\n    }, [issuers])\n\n    const handleChange = e=>{\n        if(e.target.id == \"cardNumber\"){\n            guessPaymentMethod(e.target.value);\n            return;\n        }\n        setFormValues({\n            ...formValues,\n            [e.target.name]:e.target.value\n        })\n    }\n\n    const handleChangeVencimiento = e=>{\n        setVencimientosValues({\n            ...vencimientosValues,\n            [e.target.id]:e.target.value\n        })\n    };\n\n    const guessPaymentMethod = (cardnumber)=>{\n        if (cardnumber.length >= 6) {\n            let bin = cardnumber.substring(0,6);\n            window.Mercadopago.getPaymentMethod({\n                \"bin\": bin\n            }, (status,response)=>{\n                if(status == 200){\n                    let paymentMethod = response[0];\n                    return setFormValues({\n                        ...formValues,\n                        paymentMethodId:paymentMethod\n                    });\n                }\n                console.log(response);\n                return alert('Error en la busqueda de payment');\n            });\n        }\n     };\n\n    const getIssuers = (idpaymentMethod)=>{\n        window.Mercadopago.getIssuers(idpaymentMethod,(status,response)=>{\n            if(status != 200) return alert(`issuers method info error: ${response.message}`);\n            setIssuers(response);\n            setFormValues({\n                ...formValues,\n                issuer:response[0].id\n            })\n        });\n    }\n\n    const getInstallments = (issuers)=>{\n        window.Mercadopago.getInstallments({\n            \"payment_method_id\": formValues.paymentMethodId.id,\n            \"amount\": parseFloat(formValues.total),\n            \"issuer_id\": parseInt(issuers[0].value)\n        }, (status,response)=>{\n            if(status != 200) return alert(`installments method info error: ${response}`);\n            setPayerCosts(response[0].payer_costs);\n            setFormValues({\n                ...formValues,\n                installments:response[0].payer_costs[0].installments\n            })\n        });\n    }\n\n    const handleSubmit = e=>{\n        e.preventDefault();\n        console.log(e.target)\n        window.Mercadopago.createToken(e.target, (status,response)=>{\n            if(status == 200 || status == 201){\n                console.log(response.id);\n            }\n            return false;\n        });\n    };\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h3>Detalles del comprador</h3>\n            <div className=\"form-group row\">\n                <div className=\"col-4 my-2\">\n                    <label htmlFor=\"docType\">Tipo de doc.</label>\n                    <select className=\"form-control\" id=\"docType\" name=\"docType\" data-checkout=\"docType\" type=\"text\" value={formValues.docType} onChange={handleChange}>\n                    </select>\n                </div>\n                <div className=\"col-8 my-2\">\n                    <label htmlFor=\"docNumber\">Número de documento</label>\n                    <input className=\"form-control\" id=\"docNumber\" name=\"docNumber\" data-checkout=\"docNumber\" value={formValues.docNumber} type=\"text\" onChange={handleChange}/>\n                </div>\n            </div>\n            <h3>Detalles de la tarjeta</h3>\n            <div className=\"form-group row\">\n                <div className=\"col-12 my-2\">\n                    <label htmlFor=\"cardNumber\">Número de la tarjeta</label>\n                    <input type=\"text\" id=\"cardNumber\" data-checkout=\"cardNumber\"\n                    onselectstart=\"return false\" onPaste={()=>false}\n                    onCopy={()=>false} onCut={()=>false}\n                    onDrag={()=>false} onDrop={()=>false} autoComplete=\"off\" onChange={handleChange} className=\"form-control\"/>\n                </div>\n                <div className=\"col-12 my-2\">\n                    <label htmlFor=\"cardholderName\">Titular de la tarjeta</label>\n                    <input className=\"form-control\" id=\"cardholderName\" data-checkout=\"cardholderName\" type=\"text\"/>\n                </div>\n                <div className=\"col-6 my-2\">\n                    <label htmlFor=\"\">Vencimiento</label>\n                    <div className=\"row px-3\">\n                        <input className=\"form-control col-5 mr-auto\" type=\"text\" placeholder=\"Mes\" id=\"cardExpirationMonth\" data-checkout=\"cardExpirationMonth\"\n                            onselectstart=\"return false\" onPaste={()=>false}\n                            onCopy={()=>false} onCut={()=>false}\n                            onDrag={()=>false} onDrop={()=>false} autoComplete=\"off\" onChange={handleChangeVencimiento} value={vencimientosValues.cardExpirationMonth} maxLength={2}/>\n                        <input className=\"form-control col-5\" type=\"text\" placeholder=\"Año\" id=\"cardExpirationYear\" data-checkout=\"cardExpirationYear\"\n                            oonselectstart=\"return false\" onPaste={()=>false}\n                            onCopy={()=>false} onCut={()=>false}\n                            onDrag={()=>false} onDrop={()=>false} autoComplete=\"off\" onChange={handleChangeVencimiento} value={vencimientosValues.cardExpirationYear}maxLength={2}/>\n                    </div>\n                </div>\n                <div className=\"col-6 my-2\">\n                    <label htmlFor=\"securityCode\">Código de seguridad</label>\n                    <input id=\"securityCode\" data-checkout=\"securityCode\" type=\"text\"\n                    onselectstart=\"return false\" onPaste={()=>false}\n                    onCopy={()=>false} onCut={()=>false}\n                    onDrag={()=>false} onDrop={()=>false} autoComplete=\"off\" className=\"form-control\"/>\n                </div>\n                <div id=\"issuerInput\" className=\"col-6 my-2\">\n                    <label htmlFor=\"issuer\">Banco emisor</label>\n                    <select id=\"issuer\" name=\"issuer\" data-checkout=\"issuer\" defaultValue={formValues.issuer} onChange={handleChange} className=\"form-control\">\n                        <option value=\"\">Seleccione Banco emisor</option>\n                        {issuers.map((issuer,key)=>(\n                            <option value={issuer.id} key={key}>{issuer.name}</option>\n                        ))}\n                    </select>\n                </div>\n                <div className=\"col-6 my-2\">\n                    <label htmlFor=\"installments\">Cuotas</label>\n                    <select type=\"text\" id=\"installments\" name=\"installments\" defaultValue={formValues.installments} onChange={handleChange} className=\"form-control\">\n                        <option value=\"\">Seleccione cuotas</option>\n                        {payerCosts.map((installment,key)=>(\n                            <option value={installment.installments} key={key}>{installment.recommended_message}</option>\n                        ))}\n                    </select>\n                </div>\n                <div className=\"col-12 text-center\">\n                    <br/>\n                    <button className=\"boton bg-yellow\" type=\"submit\">Pagar</button>\n                    <br/>\n                </div>\n            </div>\n        </form>\n    );\n}\n \nconst mapStateToProps = ({usuarioReducer})=>{\n    return {\n        usuarioReducer\n    }\n}\n\nexport default connect(mapStateToProps,{})(FormVenta);"]},"metadata":{},"sourceType":"module"}