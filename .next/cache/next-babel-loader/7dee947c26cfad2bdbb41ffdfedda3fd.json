{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\oliver-2\\\\sitio-desa\\\\src\\\\components\\\\Login\\\\Register.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport Error from \"../Error\";\nimport LoginStyle from './Login.module.css';\n\nvar Register = function Register(props) {\n  _s();\n\n  var _useState = useState({\n    nombre: '',\n    telefono: '',\n    address: '',\n    lat: '',\n    lon: '',\n    email: '',\n    password: ''\n  }),\n      formRegisterValues = _useState[0],\n      setFormRegisterValues = _useState[1];\n\n  var _useState2 = useState(''),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var handleChangeLogin = function handleChangeLogin(event) {\n    setFormRegisterValues(_objectSpread(_objectSpread({}, formRegisterValues), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var handleSubmitLogin = function handleSubmitLogin(event) {\n    event.preventDefault();\n\n    if (formRegisterValues.nombre.trim() === '' || formRegisterValues.telefono.trim() === '' || formRegisterValues.ubicacion.trim() === '' || formRegisterValues.email.trim() === '' || formRegisterValues.password.trim() === '') {\n      setError('Es necesario completar todos los campos');\n      return false;\n    }\n\n    setError(false);\n    return true;\n  };\n\n  var handleSelect = function handleSelect(address) {\n    console.log(address);\n    geocodeByAddress(address).then(function (results) {\n      return getLatLng(results[0]);\n    }).then(function (latLng) {\n      return console.log('Success', latLng);\n    })[\"catch\"](function (error) {\n      return console.error('Error', error);\n    });\n  };\n\n  var handleChange = function handleChange(address) {\n    console.log(address);\n    setAddress(address);\n  };\n\n  var habilitarLogin = function habilitarLogin() {\n    props.showLogin();\n  };\n\n  return __jsx(\"div\", {\n    className: LoginStyle.login__container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"h6\", {\n    className: LoginStyle.title__login + ' ' + \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Registrate\"), error ? __jsx(Error, {\n    message: error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }\n  }) : null, __jsx(\"form\", {\n    className: LoginStyle.form + ' ' + \"form-group\",\n    name: \"form-login\",\n    id: \"form-login\",\n    onSubmit: handleSubmitLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"nombre\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Nombre\"), __jsx(\"input\", {\n    type: \"text\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"nombre\",\n    name: \"nombre\",\n    value: formRegisterValues.nombre,\n    onChange: handleChangeLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"telefono\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Telefono\"), __jsx(\"input\", {\n    type: \"number\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"telefono\",\n    name: \"telefono\",\n    value: formRegisterValues.telefono,\n    onChange: handleChangeLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"ubicacion\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Ubicaci\\xF3n\"), __jsx(PlacesAutocomplete, {\n    value: address,\n    onChange: handleChange,\n    onSelect: handleSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, function (_ref) {\n    var getInputProps = _ref.getInputProps,\n        suggestions = _ref.suggestions,\n        getSuggestionItemProps = _ref.getSuggestionItemProps,\n        loading = _ref.loading;\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, __jsx(\"input\", _extends({\n      className: LoginStyle.input + ' ' + \"form-control\",\n      id: \"ubicacion\"\n    }, getInputProps({\n      placeholder: 'Buscá tu dirección ...'\n    }), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    })), __jsx(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, loading && __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    }, \"Loading...\"), suggestions.map(function (suggestion, key) {\n      var className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      var style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer',\n        margin: '10px',\n        padding: '5px'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer',\n        margin: '10px',\n        padding: '5px'\n      };\n      return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n        className: className,\n        style: style,\n        key: key\n      }), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 41\n        }\n      }), __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 45\n        }\n      }, suggestion.description));\n    })));\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"emal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    type: \"email\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"email\",\n    name: \"email\",\n    value: formRegisterValues.email,\n    onChange: handleChangeLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: LoginStyle.label,\n    htmlFor: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Contrase\\xF1a\"), __jsx(\"input\", {\n    type: \"password\",\n    className: LoginStyle.input + ' ' + \"form-control\",\n    id: \"password\",\n    name: \"password\",\n    value: formRegisterValues.password,\n    onChange: handleChangeLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"boton bg-yellow mb-1\",\n    value: \"Registrarme\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  })), __jsx(\"section\", {\n    className: LoginStyle.registerInLogin + ' ' + \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"\\xBFYa tenes cuenta?\", __jsx(\"span\", {\n    className: LoginStyle.registerLink,\n    onClick: habilitarLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 63\n    }\n  }, \" Ingres\\xE1\"))));\n};\n\n_s(Register, \"iGjygFV2XzLqSdeIqc76HlPvGK8=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/franc/Documents/oliver-2/sitio-desa/src/components/Login/Register.js"],"names":["React","useState","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","Error","LoginStyle","Register","props","nombre","telefono","address","lat","lon","email","password","formRegisterValues","setFormRegisterValues","setAddress","error","setError","handleChangeLogin","event","target","name","value","handleSubmitLogin","preventDefault","trim","ubicacion","handleSelect","console","log","then","results","latLng","handleChange","habilitarLogin","showLogin","login__container","title__login","form","label","input","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","key","className","active","style","backgroundColor","cursor","margin","padding","description","registerInLogin","registerLink"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport PlacesAutocomplete,{geocodeByAddress,geocodeByPlaceId,getLatLng} from 'react-places-autocomplete';\r\nimport Error from \"../Error\";\r\nimport LoginStyle from './Login.module.css';\r\n\r\nconst Register = (props) => {\r\n\r\n    const [formRegisterValues, setFormRegisterValues] = useState({\r\n        nombre:'',\r\n        telefono:'',\r\n        address:'',\r\n        lat:'',\r\n        lon:'',\r\n        email:'',\r\n        password:''\r\n    });\r\n    const [address, setAddress] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleChangeLogin = event=>{\r\n        setFormRegisterValues({\r\n            ...formRegisterValues,\r\n            [event.target.name]:event.target.value\r\n        })\r\n    };\r\n\r\n    const handleSubmitLogin = event=>{\r\n        event.preventDefault();\r\n        if(formRegisterValues.nombre.trim()==='' || formRegisterValues.telefono.trim() === '' || \r\n        formRegisterValues.ubicacion.trim()==='' ||formRegisterValues.email.trim()==='' || formRegisterValues.password.trim()===''){\r\n            setError('Es necesario completar todos los campos');\r\n            return false;\r\n        }\r\n        setError(false);\r\n        return true;\r\n    }\r\n\r\n    const handleSelect = address => {\r\n        console.log(address);\r\n        geocodeByAddress(address)\r\n        .then(results => getLatLng(results[0]))\r\n        .then(latLng => console.log('Success', latLng))\r\n        .catch(error => console.error('Error', error));\r\n    };\r\n    const handleChange = address => {\r\n        console.log(address);\r\n        setAddress(address);\r\n    };\r\n\r\n    const habilitarLogin = ()=>{\r\n        props.showLogin();\r\n    }\r\n\r\n    return (\r\n        <div className={LoginStyle.login__container}>\r\n            <h6 className={LoginStyle.title__login + ' ' + `text-center`}>Registrate</h6>\r\n            {(error)?<Error message={error}/>:null}\r\n            <form className={LoginStyle.form + ' ' + `form-group`} name=\"form-login\" id=\"form-login\" onSubmit={handleSubmitLogin}>\r\n                <label className={LoginStyle.label} htmlFor=\"nombre\">Nombre</label>\r\n                <input type=\"text\"  className={LoginStyle.input + ' ' + `form-control`} id=\"nombre\" name=\"nombre\" value={formRegisterValues.nombre} onChange={handleChangeLogin}/>\r\n                \r\n                <label className={LoginStyle.label} htmlFor=\"telefono\">Telefono</label>\r\n                <input type=\"number\"  className={LoginStyle.input + ' ' + `form-control`} id=\"telefono\" name=\"telefono\" value={formRegisterValues.telefono} onChange={handleChangeLogin}/>\r\n                \r\n                <label className={LoginStyle.label} htmlFor=\"ubicacion\">Ubicación</label>\r\n                <PlacesAutocomplete value={address} onChange={handleChange} onSelect={handleSelect}>\r\n                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                        <div>\r\n                            <input\r\n                                className={LoginStyle.input + ' ' + `form-control`} id=\"ubicacion\"\r\n                                {...getInputProps({\r\n                                    placeholder: 'Buscá tu dirección ...',\r\n                                })}\r\n                            />\r\n                            <div className=\"autocomplete-dropdown-container\">\r\n                                {loading && <div>Loading...</div>}\r\n                                {suggestions.map((suggestion,key) => {\r\n                                    const className = suggestion.active\r\n                                    ? 'suggestion-item--active'\r\n                                    : 'suggestion-item';\r\n                                    // inline style for demonstration purpose\r\n                                    const style = suggestion.active\r\n                                    ? { backgroundColor: '#fafafa', cursor: 'pointer',margin:'10px',padding:'5px' }\r\n                                    : { backgroundColor: '#ffffff', cursor: 'pointer',margin:'10px',padding:'5px' };\r\n                                    return (\r\n                                        <div\r\n                                            {...getSuggestionItemProps(suggestion, {\r\n                                            className,\r\n                                            style,\r\n                                            key\r\n                                            })}\r\n                                        >\r\n                                            <span>{suggestion.description}</span>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </PlacesAutocomplete>\r\n                {/* <input type=\"text\"  className={LoginStyle.input + ' ' + `form-control`} id=\"ubicacion\" name=\"ubicacion\" value={formRegisterValues.ubicacion} onChange={handleChangeLogin}/>\r\n                 */}\r\n                <label className={LoginStyle.label} htmlFor=\"emal\">Email</label>\r\n                <input type=\"email\"  className={LoginStyle.input + ' ' + `form-control`} id=\"email\" name=\"email\" value={formRegisterValues.email} onChange={handleChangeLogin}/>\r\n                \r\n                <label className={LoginStyle.label} htmlFor=\"password\">Contraseña</label>\r\n                <input type=\"password\"  className={LoginStyle.input + ' ' + `form-control`} id=\"password\" name=\"password\" value={formRegisterValues.password} onChange={handleChangeLogin}/>\r\n                \r\n                <br/>\r\n                <input type=\"submit\" className=\"boton bg-yellow mb-1\" value=\"Registrarme\"/>\r\n            </form>\r\n            <section className={LoginStyle.registerInLogin + ' ' + `text-center`}>\r\n                <span className=\"text-muted\">¿Ya tenes cuenta?<span className={LoginStyle.registerLink} onClick={habilitarLogin}> Ingresá</span></span>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Register;"]},"metadata":{},"sourceType":"module"}