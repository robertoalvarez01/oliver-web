{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API } from '../../config/index';\nimport { TRAER, LOADING, ERROR } from '../types/politicaTypes';\nexport var traerInfo = function traerInfo() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context.prev = 1;\n              return _context.abrupt(\"return\", fetch(\"\".concat(API, \"/legales\")).then(function (res) {\n                return res.json();\n              }).then(function (data) {\n                var info = {\n                  politica: data.data[0].politica_privacidad,\n                  terminos: data.data[0].terminos_condiciones\n                };\n                dispatch({\n                  type: TRAER,\n                  payload: info\n                });\n              })[\"catch\"](function (err) {\n                dispatch({\n                  type: ERROR,\n                  payload: err\n                });\n              }));\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context.t0\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 5]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}