{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from '../../src/components/Head';\nimport Loader from '../../src/components/Loader';\nimport { connect } from 'react-redux';\nimport * as carritoActions from '../../store/actions/carritoActions';\nimport * as enviosActions from '../../store/actions/enviosActions';\nimport { useEffect, useState } from 'react';\nimport { API } from '../../config/index';\nimport Error from '../../src/components/Error';\nconst {\n  guardar: enviosGuardar\n} = enviosActions;\nconst {\n  traerProductos: carritoTraerProductos\n} = carritoActions;\n\nconst ProcesarVenta = props => {\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: ventaRegistrada,\n    1: setVentaRegistrada\n  } = useState(false);\n  useEffect(() => {\n    procesarInfo();\n  }, [props.usuarioReducer]);\n\n  const procesarInfo = async () => {\n    const dataEnvio = JSON.parse(localStorage.getItem('dataEnvio'));\n    props.enviosGuardar(dataEnvio);\n    props.carritoTraerProductos();\n\n    if (props.usuarioReducer.logueado && props.carritoReducer.productos.length > 0 && props.enviosReducer.data) {\n      const {\n        idUsuario\n      } = props.usuarioReducer.usuario;\n      const {\n        subtotal,\n        porcentaje_descuento,\n        descuento,\n        total,\n        productos,\n        idMedioPago\n      } = props.carritoReducer;\n      const {\n        zona,\n        tipo\n      } = props.enviosReducer.data;\n      let f = new Date();\n      let mes = f.getMonth() < 10 ? `0${f.getMonth() + 1}` : `${f.getMonth()}`;\n      let dia = f.getDate() < 10 ? `0${f.getDate()}` : `${f.getDate()}`;\n      let fecha = `${f.getFullYear()}-${mes}-${dia}`;\n      let dataToRequest = {\n        envio: {\n          idZona: zona,\n          tipo: tipo\n        },\n        venta: {\n          subtotal,\n          porcentaje_descuento,\n          descuento,\n          total,\n          idUsuario,\n          productos,\n          fecha,\n          operacion_id: props.collection_id || null,\n          idMedioPago\n        }\n      }; //console.log(dataToRequest);\n\n      return registrarVenta(dataToRequest);\n    }\n  };\n\n  const registrarVenta = async data => {\n    try {\n      const headers = new Headers();\n      headers.append('token', props.usuarioReducer.usuario.token);\n      headers.append(\"Content-Type\", \"application/json\");\n      let url = !data.venta.operacion_id ? `${API}/registrarVenta?mercadoPago=false` : `${API}/registrarVenta?mercadoPago=true`;\n      const reqVenta = await fetch(url, {\n        headers,\n        method: 'POST',\n        body: JSON.stringify(data)\n      });\n\n      if (reqVenta.status == 200) {\n        localStorage.removeItem('dataEnvio');\n        localStorage.removeItem('carrito');\n        setVentaRegistrada('Felicidades, Tu venta se registró con éxito. En breve nos comunicaremos con usted para informarle el estado de su compra.');\n        setTimeout(() => {\n          window.location.assign('/');\n        }, 5000);\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    title: \"Finalizacion de compra\",\n    metadesc: \"\"\n  }), __jsx(\"div\", {\n    className: \"jsx-2063553454\" + \" \" + \"wrapper\"\n  }, !props.usuarioReducer.logueado || props.enviosReducer.error || props.carritoReducer.error || error ? __jsx(Error, {\n    message: \"Ha ocurrido un error, intentalo mas tarde\"\n  }) : __jsx(React.Fragment, null, ventaRegistrada ? __jsx(\"div\", {\n    className: \"jsx-2063553454\" + \" \" + \"alert alert-success\"\n  }, ventaRegistrada) : __jsx(React.Fragment, null, __jsx(Loader, null), __jsx(\"p\", {\n    className: \"jsx-2063553454\"\n  }, \"Su compra esta siento procesada, aguarde unos segundos...\")))), __jsx(_JSXStyle, {\n    id: \"2063553454\"\n  }, [\".wrapper.jsx-2063553454{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:90vh;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\"]));\n};\n\nProcesarVenta.getInitialProps = async ({\n  query\n}) => {\n  const {\n    collection_id\n  } = query;\n  return {\n    collection_id\n  };\n};\n\nconst mapStateToProps = ({\n  carritoReducer,\n  enviosReducer,\n  usuarioReducer\n}) => {\n  return {\n    carritoReducer,\n    enviosReducer,\n    usuarioReducer\n  };\n};\n\nconst mapDispatchToProps = {\n  enviosGuardar,\n  carritoTraerProductos\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ProcesarVenta);","map":null,"metadata":{},"sourceType":"module"}