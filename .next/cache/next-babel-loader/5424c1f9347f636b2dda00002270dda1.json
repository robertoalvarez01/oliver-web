{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { LOADING, ERROR, TRAER_TODOS } from \"../types/mediosDePagoTypes\";\nimport { API } from '../../config/index';\nexport var traerMedios = function traerMedios() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var token, headers, reqMedios, dataMedios;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context.prev = 1;\n              token = getState().usuarioReducer.usuario.token;\n              headers = new Headers();\n              headers.append('token', token);\n              _context.next = 7;\n              return fetch(\"\".concat(API, \"/mediosDePago\"), {\n                method: 'GET',\n                headers: headers\n              });\n\n            case 7:\n              reqMedios = _context.sent;\n\n              if (!(reqMedios.status != 200)) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: reqMedios.statusText\n              }));\n\n            case 10:\n              _context.next = 12;\n              return reqMedios.json();\n\n            case 12:\n              dataMedios = _context.sent;\n              return _context.abrupt(\"return\", dispatch({\n                type: TRAER_TODOS,\n                payload: dataMedios\n              }));\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context.t0.message\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 16]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/franc/Documents/oliver-2/sitio-desa/store/actions/medioDePagoActions.js"],"names":["LOADING","ERROR","TRAER_TODOS","API","traerMedios","dispatch","getState","type","token","usuarioReducer","usuario","headers","Headers","append","fetch","method","reqMedios","status","payload","statusText","json","dataMedios","message"],"mappings":";;AAAA,SAASA,OAAT,EAAiBC,KAAjB,EAAuBC,WAAvB,QAA0C,4BAA1C;AACA,SAAQC,GAAR,QAAkB,oBAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA,wEAAI,iBAAOC,QAAP,EAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BD,cAAAA,QAAQ,CAAC;AAACE,gBAAAA,IAAI,EAACP;AAAN,eAAD,CAAR;AAD2B;AAGlBQ,cAAAA,KAHkB,GAGTF,QAAQ,GAAGG,cAAX,CAA0BC,OAHjB,CAGlBF,KAHkB;AAInBG,cAAAA,OAJmB,GAIT,IAAIC,OAAJ,EAJS;AAKvBD,cAAAA,OAAO,CAACE,MAAR,CAAe,OAAf,EAAuBL,KAAvB;AALuB;AAAA,qBAMCM,KAAK,WAAIX,GAAJ,oBAAuB;AAACY,gBAAAA,MAAM,EAAC,KAAR;AAAcJ,gBAAAA,OAAO,EAAPA;AAAd,eAAvB,CANN;;AAAA;AAMjBK,cAAAA,SANiB;;AAAA,oBAOpBA,SAAS,CAACC,MAAV,IAAoB,GAPA;AAAA;AAAA;AAAA;;AAAA,+CAOYZ,QAAQ,CAAC;AAACE,gBAAAA,IAAI,EAACN,KAAN;AAAYiB,gBAAAA,OAAO,EAACF,SAAS,CAACG;AAA9B,eAAD,CAPpB;;AAAA;AAAA;AAAA,qBAQEH,SAAS,CAACI,IAAV,EARF;;AAAA;AAQjBC,cAAAA,UARiB;AAAA,+CAShBhB,QAAQ,CAAC;AACZE,gBAAAA,IAAI,EAACL,WADO;AAEZgB,gBAAAA,OAAO,EAACG;AAFI,eAAD,CATQ;;AAAA;AAAA;AAAA;AAcvBhB,cAAAA,QAAQ,CAAC;AACLE,gBAAAA,IAAI,EAACN,KADA;AAELiB,gBAAAA,OAAO,EAAC,YAAMI;AAFT,eAAD,CAAR;;AAduB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import { LOADING,ERROR,TRAER_TODOS } from \"../types/mediosDePagoTypes\";\r\nimport {API} from '../../config/index';\r\n\r\nexport const traerMedios = ()=>async (dispatch,getState)=>{\r\n    dispatch({type:LOADING});\r\n    try {\r\n        let {token} = getState().usuarioReducer.usuario;\r\n        let headers = new Headers();\r\n        headers.append('token',token);\r\n        const reqMedios = await fetch(`${API}/mediosDePago`,{method:'GET',headers});\r\n        if(reqMedios.status != 200) return dispatch({type:ERROR,payload:reqMedios.statusText});\r\n        const dataMedios = await reqMedios.json();\r\n        return dispatch({\r\n            type:TRAER_TODOS,\r\n            payload:dataMedios\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}