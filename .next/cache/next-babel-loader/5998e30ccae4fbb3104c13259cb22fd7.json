{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API, PUBLIC_URL } from '../../config/index';\nimport { VERIFICAR_SESION, LOGIN, LOGOUT, LOADING, ERROR, UPDATE_USER, UPDATE_PASSWORD, UPDATE_VENTAS } from '../types/usuarioTypes';\nexport var login = function login(data) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var headers;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context.prev = 1;\n\n              if (!(data.email.trim() === '' || data.password.trim() === '')) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Es necesario completar todos los campos'\n              }));\n\n            case 4:\n              headers = new Headers();\n              headers.append(\"Content-Type\", \"application/json\");\n              return _context.abrupt(\"return\", fetch(\"\".concat(API, \"/login\"), {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: headers\n              }).then(function (res) {\n                return res.json();\n              }).then(function (response) {\n                if (response.ok) {\n                  var objUsuario = {\n                    nombre: response.usuario.nombre,\n                    email: response.usuario.email,\n                    foto: response.usuario.foto,\n                    token: response.token,\n                    address: response.usuario.ubicacion,\n                    idUsuario: response.usuario.idUsuario,\n                    lat: response.usuario.lat,\n                    lon: response.usuario.lon,\n                    telefono: response.usuario.telefono\n                  };\n                  localStorage.setItem('oliverpetshop_usuario', JSON.stringify(objUsuario));\n                  dispatch({\n                    type: LOGIN,\n                    payload: localStorage.getItem('oliverpetshop_usuario')\n                  });\n                } else {\n                  return dispatch({\n                    type: ERROR,\n                    payload: response.info\n                  });\n                }\n              }));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              return _context.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: _context.t0\n              }));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var logout = function logout() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context2.prev = 1;\n              localStorage.removeItem('oliverpetshop_usuario');\n              return _context2.abrupt(\"return\", dispatch({\n                type: LOGOUT\n              }));\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context2.t0\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 6]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var verificarSesion = function verificarSesion() {\n  var token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var dataUsuario, headers, tokenSend, request;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dataUsuario = JSON.parse(localStorage.getItem('oliverpetshop_usuario'));\n\n              if (!(dataUsuario || token)) {\n                _context3.next = 12;\n                break;\n              }\n\n              // request para verificar que el token corresponda a una sesion activa\n              headers = new Headers();\n              tokenSend = token ? token : dataUsuario.token;\n              headers.append('token', tokenSend);\n              _context3.next = 8;\n              return fetch(\"\".concat(API, \"/verify-sesion\"), {\n                method: 'GET',\n                headers: headers\n              });\n\n            case 8:\n              request = _context3.sent;\n\n              if (!(request.status != 200)) {\n                _context3.next = 11;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", dispatch({\n                type: VERIFICAR_SESION,\n                payload: {\n                  data: null,\n                  logueado: false\n                }\n              }));\n\n            case 11:\n              return _context3.abrupt(\"return\", dispatch({\n                type: VERIFICAR_SESION,\n                payload: {\n                  data: dataUsuario,\n                  logueado: true\n                }\n              }));\n\n            case 12:\n              return _context3.abrupt(\"return\", dispatch({\n                type: VERIFICAR_SESION,\n                payload: {\n                  data: null,\n                  logueado: false\n                }\n              }));\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: ERROR,\n                payload: _context3.t0\n              });\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 15]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var register = function register(data) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING\n    });\n\n    try {\n      var headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      return fetch(\"\".concat(API, \"/register\"), {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: headers\n      }).then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        if (response.ok) {\n          var objUsuario = {\n            nombre: response.usuario.nombre,\n            email: response.usuario.email,\n            foto: response.usuario.foto,\n            token: response.token,\n            address: response.usuario.address,\n            idUsuario: response.usuario.idUsuario\n          };\n          localStorage.setItem('oliverpetshop_usuario', JSON.stringify(objUsuario));\n          dispatch({\n            type: LOGIN,\n            payload: localStorage.getItem('oliverpetshop_usuario')\n          });\n        } else {\n          dispatch({\n            type: ERROR,\n            payload: response.info\n          });\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    }\n  };\n};\nexport var singInWithGoogle = function singInWithGoogle(tokenId) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var headers;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context4.prev = 1;\n              headers = new Headers();\n              headers.append(\"Content-Type\", \"application/json\");\n              return _context4.abrupt(\"return\", fetch(\"\".concat(API, \"/google/tokensignin\"), {\n                method: 'POST',\n                headers: headers,\n                body: JSON.stringify({\n                  token: tokenId\n                })\n              }).then(function (res) {\n                return res.json();\n              }).then(function (response) {\n                if (!response.ok) {\n                  return dispatch({\n                    type: ERROR,\n                    payload: response.info\n                  });\n                }\n\n                ;\n                var objUsuario = {\n                  nombre: response.usuario.nombre,\n                  email: response.usuario.email,\n                  foto: response.usuario.foto,\n                  token: response.token,\n                  address: response.usuario.address,\n                  idUsuario: response.usuario.idUsuario,\n                  lat: response.usuario.lat,\n                  lon: response.usuario.lon,\n                  telefono: response.usuario.telefono\n                };\n                localStorage.setItem('oliverpetshop_usuario', JSON.stringify(objUsuario));\n                dispatch({\n                  type: LOGIN,\n                  payload: localStorage.getItem('oliverpetshop_usuario')\n                });\n              }));\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context4.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 7]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var actualizarFoto = function actualizarFoto(data, id) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      var headers, token, request, _dataRequest;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context5.prev = 1;\n              headers = new Headers();\n              token = JSON.parse(localStorage.getItem('oliverpetshop_usuario')).token;\n              headers.append(\"token\", token);\n              _context5.next = 7;\n              return fetch(\"\".concat(API, \"/actualizarFotoUsuarioDesdeWeb/\").concat(id), {\n                method: 'PUT',\n                headers: headers,\n                body: data\n              });\n\n            case 7:\n              request = _context5.sent;\n              _context5.next = 10;\n              return request.json();\n\n            case 10:\n              _dataRequest = _context5.sent;\n\n              if (_dataRequest.ok) {\n                localStorage.setItem('oliverpetshop_usuario', JSON.stringify(_dataRequest.user));\n                dispatch({\n                  type: UPDATE_USER,\n                  payload: _dataRequest.user\n                });\n              }\n\n              _context5.next = 17;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context5.t0\n              });\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 14]]);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var actualizarUsuario = function actualizarUsuario(data, id) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch) {\n      var headers, token, request, _dataRequest2;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context6.prev = 1;\n              headers = new Headers();\n              token = JSON.parse(localStorage.getItem('oliverpetshop_usuario')).token;\n\n              if (token) {\n                _context6.next = 6;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Token incorrecto'\n              }));\n\n            case 6:\n              headers.append('token', token);\n              headers.append(\"Content-Type\", \"application/json\");\n              _context6.next = 10;\n              return fetch(\"\".concat(API, \"/actualizarUsuarioDesdeWeb/\").concat(id), {\n                method: 'PUT',\n                headers: headers,\n                body: JSON.stringify(data)\n              });\n\n            case 10:\n              request = _context6.sent;\n\n              if (!(request.status != 200)) {\n                _context6.next = 13;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Ocurrio un error, ¡intentelo más tarde!'\n              }));\n\n            case 13:\n              _context6.next = 15;\n              return request.json();\n\n            case 15:\n              _dataRequest2 = _context6.sent;\n\n              if (!_dataRequest2.ok) {\n                _context6.next = 19;\n                break;\n              }\n\n              localStorage.setItem('oliverpetshop_usuario', JSON.stringify(_dataRequest2.user));\n              return _context6.abrupt(\"return\", dispatch({\n                type: UPDATE_USER,\n                payload: _dataRequest2.user\n              }));\n\n            case 19:\n              return _context6.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: _dataRequest2.info\n              }));\n\n            case 22:\n              _context6.prev = 22;\n              _context6.t0 = _context6[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context6.t0.message\n              });\n\n            case 25:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 22]]);\n    }));\n\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var actualizarAddress = function actualizarAddress(data, id) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch) {\n      var headers, token, request, _dataRequest3;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context7.prev = 1;\n              headers = new Headers();\n              token = JSON.parse(localStorage.getItem('oliverpetshop_usuario')).token;\n\n              if (token) {\n                _context7.next = 6;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Token incorrecto'\n              }));\n\n            case 6:\n              headers.append('token', token);\n              headers.append(\"Content-Type\", \"application/json\");\n              _context7.next = 10;\n              return fetch(\"\".concat(API, \"/actualizarDireccion/\").concat(id), {\n                method: 'PUT',\n                headers: headers,\n                body: JSON.stringify(data)\n              });\n\n            case 10:\n              request = _context7.sent;\n\n              if (!(request.status != 200)) {\n                _context7.next = 13;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Ocurrio un error, ¡intentelo más tarde!'\n              }));\n\n            case 13:\n              _context7.next = 15;\n              return request.json();\n\n            case 15:\n              _dataRequest3 = _context7.sent;\n\n              if (!_dataRequest3.ok) {\n                _context7.next = 19;\n                break;\n              }\n\n              localStorage.setItem('oliverpetshop_usuario', JSON.stringify(_dataRequest3.usuario));\n              return _context7.abrupt(\"return\", dispatch({\n                type: UPDATE_USER,\n                payload: _dataRequest3.usuario\n              }));\n\n            case 19:\n              return _context7.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: _dataRequest3.info\n              }));\n\n            case 22:\n              _context7.prev = 22;\n              _context7.t0 = _context7[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context7.t0.message\n              });\n\n            case 25:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 22]]);\n    }));\n\n    return function (_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};\nexport var sendEmailForResetPassword = function sendEmailForResetPassword(idUsuario) {\n  return /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch) {\n      var headers, token, request, _dataRequest4;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context8.prev = 1;\n              headers = new Headers();\n              token = JSON.parse(localStorage.getItem('oliverpetshop_usuario')).token;\n\n              if (token) {\n                _context8.next = 6;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Token incorrecto'\n              }));\n\n            case 6:\n              headers.append('token', token);\n              headers.append(\"Content-Type\", \"application/json\");\n              _context8.next = 10;\n              return fetch(\"\".concat(API, \"/resetPassword\"), {\n                method: 'POST',\n                headers: headers,\n                body: JSON.stringify({\n                  idUsuario: idUsuario\n                })\n              });\n\n            case 10:\n              request = _context8.sent;\n\n              if (!(request.status != 200)) {\n                _context8.next = 13;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Ocurrio un error, ¡intentelo más tarde!'\n              }));\n\n            case 13:\n              _context8.next = 15;\n              return request.json();\n\n            case 15:\n              _dataRequest4 = _context8.sent;\n\n              if (!_dataRequest4.ok) {\n                _context8.next = 18;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", console.log(_dataRequest4));\n\n            case 18:\n              return _context8.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: _dataRequest4.info\n              }));\n\n            case 21:\n              _context8.prev = 21;\n              _context8.t0 = _context8[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: dataRequest.info\n              });\n\n            case 24:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[1, 21]]);\n    }));\n\n    return function (_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};\nexport var updatePassword = function updatePassword(data, token) {\n  return /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(dispatch) {\n      var headers, request;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context9.prev = 1;\n\n              if (!(data.confirmNewPassword === '' || data.newPassword === '')) {\n                _context9.next = 4;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Los dos campos son obligarios.'\n              }));\n\n            case 4:\n              if (!(data.confirmNewPassword != data.newPassword)) {\n                _context9.next = 6;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Las contraseñas no coinciden.'\n              }));\n\n            case 6:\n              headers = new Headers();\n              headers.append('refresh-token', token);\n              headers.append(\"Content-Type\", \"application/json\");\n              _context9.next = 11;\n              return fetch(\"\".concat(API, \"/new-password\"), {\n                method: 'PUT',\n                headers: headers,\n                body: JSON.stringify(data)\n              });\n\n            case 11:\n              request = _context9.sent;\n\n              if (!(request.status != 200)) {\n                _context9.next = 14;\n                break;\n              }\n\n              return _context9.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Ups, algo ha salido mal...'\n              }));\n\n            case 14:\n              dispatch({\n                type: UPDATE_PASSWORD\n              });\n              return _context9.abrupt(\"return\", setTimeout(function () {\n                window.location.assign(\"\".concat(PUBLIC_URL));\n              }, 5000));\n\n            case 18:\n              _context9.prev = 18;\n              _context9.t0 = _context9[\"catch\"](1);\n              return _context9.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: _context9.t0\n              }));\n\n            case 21:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[1, 18]]);\n    }));\n\n    return function (_x9) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n};\nexport var traerVentas = function traerVentas() {\n  return /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(dispatch, getState) {\n      var _getState$usuarioRedu, idUsuario, token, headers, req, response;\n\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _getState$usuarioRedu = getState().usuarioReducer.usuario, idUsuario = _getState$usuarioRedu.idUsuario, token = _getState$usuarioRedu.token;\n              headers = new Headers();\n              headers.append('token', token);\n              _context10.next = 6;\n              return fetch(\"\".concat(API, \"/ventas/usuario/\").concat(idUsuario), {\n                headers: headers\n              });\n\n            case 6:\n              req = _context10.sent;\n              _context10.next = 9;\n              return req.json();\n\n            case 9:\n              response = _context10.sent;\n\n              if (!(req.status === 200)) {\n                _context10.next = 12;\n                break;\n              }\n\n              return _context10.abrupt(\"return\", dispatch({\n                type: UPDATE_VENTAS,\n                payload: response.info\n              }));\n\n            case 12:\n              return _context10.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: response\n              }));\n\n            case 13:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function (_x10, _x11) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}