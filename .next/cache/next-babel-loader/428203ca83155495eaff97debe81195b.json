{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { faPencilAlt, faTimesCircle, faKey } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport * as usuarioActions from '../../store/actions/usuarioActions';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport Loader from './Loader/';\n\nconst FormEditUsuario = props => {\n  useEffect(() => {\n    if (props.usuarioReducer.usuario && !props.usuarioReducer.loading) {\n      const {\n        usuario\n      } = props.usuarioReducer;\n      setFormValues({\n        nombre: usuario.nombre,\n        telefono: usuario.telefono,\n        email: usuario.email,\n        address: usuario.address,\n        lat: usuario.lat,\n        lon: usuario.lon\n      });\n    }\n  }, [props.usuarioReducer]);\n  const {\n    0: formDisabled,\n    1: setFormDisabled\n  } = useState({\n    nombre: true,\n    telefono: true,\n    email: true,\n    address: true\n  });\n  const {\n    0: formValues,\n    1: setFormValues\n  } = useState({\n    nombre: '',\n    telefono: '',\n    email: '',\n    address: '',\n    lat: 0,\n    lon: 0\n  });\n  const {\n    0: successAction,\n    1: setSuccessAction\n  } = useState('');\n\n  const switchInput = nameInput => {\n    const estadoInput = formDisabled[nameInput];\n    return setFormDisabled(_objectSpread(_objectSpread({}, formDisabled), {}, {\n      [nameInput]: !estadoInput\n    }));\n  };\n\n  const handleChange = event => {\n    return setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleChangeUbicacion = address => setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n    address\n  }));\n\n  const handleSelectUbicacion = address => {\n    geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => {\n      setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n        address,\n        lat: latLng.lat,\n        lon: latLng.lng\n      }));\n    }).catch(error => console.error('Error', error));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await props.actualizarUsuario(formValues, props.usuarioReducer.usuario.idUsuario);\n\n    if (!props.usuarioReducer.error && !props.usuarioReducer.loading) {\n      return setSuccessAction('Tus datos se han modificado de manera exitosa');\n    }\n\n    return setSuccessAction('');\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"jsx-2483563024\" + \" \" + \"form-group\"\n  }, successAction != '' && !props.usuarioReducer.error ? __jsx(\"div\", {\n    className: \"jsx-2483563024\" + \" \" + \"alert alert-success text-center\"\n  }, __jsx(\"b\", {\n    className: \"jsx-2483563024\"\n  }, successAction)) : null, props.usuarioReducer.error ? __jsx(\"div\", {\n    className: \"jsx-2483563024\" + \" \" + \"alert alert-danger text-center\"\n  }, __jsx(\"b\", {\n    className: \"jsx-2483563024\"\n  }, props.usuarioReducer.error)) : null, __jsx(\"div\", {\n    className: \"jsx-2483563024\" + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-2483563024\" + \" \" + \"col-12 col-md-6 my-4 d-flex align-items-center\"\n  }, __jsx(\"input\", {\n    disabled: formDisabled.nombre,\n    onChange: handleChange,\n    value: formValues.nombre,\n    type: \"text\",\n    name: \"nombre\",\n    id: \"nombre\",\n    placeholder: \"Nombre\",\n    className: \"jsx-2483563024\" + \" \" + \"form-control mr-auto\"\n  }), __jsx(FontAwesomeIcon, {\n    className: \"iconoHabilitarInput\",\n    icon: formDisabled.nombre ? faPencilAlt : faTimesCircle,\n    onClick: () => switchInput('nombre'),\n    required: true\n  })), __jsx(\"div\", {\n    className: \"jsx-2483563024\" + \" \" + \"col-12 col-md-6 my-4 d-flex align-items-center\"\n  }, __jsx(\"input\", {\n    disabled: formDisabled.telefono,\n    onChange: handleChange,\n    value: formValues.telefono,\n    type: \"text\",\n    name: \"telefono\",\n    id: \"telefono\",\n    placeholder: \"Telefono\",\n    className: \"jsx-2483563024\" + \" \" + \"form-control mr-auto\"\n  }), __jsx(FontAwesomeIcon, {\n    className: \"iconoHabilitarInput\",\n    icon: formDisabled.telefono ? faPencilAlt : faTimesCircle,\n    onClick: () => switchInput('telefono')\n  })), __jsx(\"div\", {\n    className: \"jsx-2483563024\" + \" \" + \"col-12 col-md-6 my-4 d-flex align-items-center\"\n  }, __jsx(\"input\", {\n    disabled: formDisabled.email,\n    onChange: handleChange,\n    value: formValues.email,\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    className: \"jsx-2483563024\" + \" \" + \"form-control mr-auto\"\n  })), __jsx(\"div\", {\n    className: \"jsx-2483563024\" + \" \" + \"col-12 col-md-6 my-4 d-flex align-items-center\"\n  }, __jsx(PlacesAutocomplete, {\n    value: formValues.address,\n    onChange: handleChangeUbicacion,\n    onSelect: handleSelectUbicacion\n  }, ({\n    getInputProps,\n    suggestions,\n    getSuggestionItemProps,\n    loading\n  }) => __jsx(\"div\", {\n    className: \"jsx-2483563024\" + \" \" + \"mr-auto w-100\"\n  }, __jsx(\"input\", _extends({\n    name: \"address\",\n    id: \"address\"\n  }, getInputProps({\n    placeholder: formValues.address\n  }), {\n    disabled: formDisabled.address,\n    placeholder: \"Direcci\\xF3n\",\n    className: \"jsx-2483563024\" + \" \" + \"form-control\"\n  })), __jsx(\"div\", {\n    style: {\n      position: 'fixed',\n      zIndex: '1000',\n      backgroundColor: '#fff'\n    },\n    className: \"jsx-2483563024\" + \" \" + \"autocomplete-dropdown-container\"\n  }, loading && __jsx(\"div\", {\n    className: \"jsx-2483563024\"\n  }, \"Cargando ubicaciones...\"), suggestions.map((suggestion, key) => {\n    const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n    const style = suggestion.active ? {\n      backgroundColor: '#fafafa',\n      cursor: 'pointer',\n      margin: '10px',\n      padding: '5px'\n    } : {\n      backgroundColor: '#ffffff',\n      cursor: 'pointer',\n      margin: '10px',\n      padding: '5px'\n    };\n    return __jsx(\"div\", _extends({}, getSuggestionItemProps(suggestion, {\n      className,\n      style,\n      key\n    }), {\n      className: \"jsx-2483563024\"\n    }), __jsx(\"span\", {\n      className: \"jsx-2483563024\"\n    }, suggestion.description));\n  })))), __jsx(FontAwesomeIcon, {\n    className: \"iconoHabilitarInput\",\n    icon: formDisabled.address ? faPencilAlt : faTimesCircle,\n    onClick: () => switchInput('address')\n  })), __jsx(\"div\", {\n    className: \"jsx-2483563024\" + \" \" + \"col-12 mb-4 text-right\"\n  }, __jsx(\"button\", {\n    type: \"button\",\n    onClick: props.abrirModalPw,\n    className: \"jsx-2483563024\" + \" \" + \"btn btn-warning\"\n  }, __jsx(FontAwesomeIcon, {\n    icon: faKey\n  }), \" Cambiar contrase\\xF1a\")), __jsx(\"div\", {\n    className: \"jsx-2483563024\" + \" \" + \"col-12 text-center\"\n  }, props.usuarioReducer.loading ? __jsx(Loader, null) : __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Guardar cambios\",\n    className: \"jsx-2483563024\" + \" \" + \"boton bg-yellow\"\n  }))), __jsx(_JSXStyle, {\n    id: \"2483563024\"\n  }, [\".form-control.jsx-2483563024{width:92%;}\", \".iconoHabilitarInput.jsx-2483563024{cursor:pointer!important;}\", \"button.jsx-2483563024{color:#fff !important;}\"]));\n};\n\nconst mapStateToProps = ({\n  usuarioReducer\n}) => {\n  return {\n    usuarioReducer\n  };\n};\n\nexport default connect(mapStateToProps, usuarioActions)(FormEditUsuario);","map":null,"metadata":{},"sourceType":"module"}