{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API } from '../../config/index';\nimport { TRAER_TODAS, LOADING, ERROR } from '../types/marcasTypes';\nexport var traerTodas = function traerTodas() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n\n              try {\n                fetch(\"\".concat(API, \"marca\")).then(function (res) {\n                  return res.json();\n                }).then(function (data) {\n                  var marcas = data.data;\n                  dispatch({\n                    type: TRAER_TODAS,\n                    payload: marcas\n                  });\n                })[\"catch\"](function (err) {\n                  dispatch({\n                    type: ERROR,\n                    payload: err\n                  });\n                });\n              } catch (error) {\n                dispatch({\n                  type: ERROR,\n                  payload: error\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/franc/Documents/oliver-2/oliver-sitio/store/actions/marcasActions.js"],"names":["API","TRAER_TODAS","LOADING","ERROR","traerTodas","dispatch","type","fetch","then","res","json","data","marcas","payload","err","error"],"mappings":";;AAAA,SAAQA,GAAR,QAAkB,oBAAlB;AACA,SAAQC,WAAR,EAAoBC,OAApB,EAA4BC,KAA5B,QAAwC,sBAAxC;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA,wEAAI,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAC1BA,cAAAA,QAAQ,CAAC;AACLC,gBAAAA,IAAI,EAACJ;AADA,eAAD,CAAR;;AAGA,kBAAI;AACAK,gBAAAA,KAAK,WAAIP,GAAJ,WAAL,CAAqBQ,IAArB,CAA0B,UAAAC,GAAG;AAAA,yBAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,iBAA7B,EAA2CF,IAA3C,CAAgD,UAAAG,IAAI,EAAE;AAClD,sBAAMC,MAAM,GAAGD,IAAI,CAACA,IAApB;AACAN,kBAAAA,QAAQ,CAAC;AACLC,oBAAAA,IAAI,EAACL,WADA;AAELY,oBAAAA,OAAO,EAACD;AAFH,mBAAD,CAAR;AAIH,iBAND,WAMS,UAAAE,GAAG,EAAE;AACVT,kBAAAA,QAAQ,CAAC;AACLC,oBAAAA,IAAI,EAACH,KADA;AAELU,oBAAAA,OAAO,EAACC;AAFH,mBAAD,CAAR;AAIH,iBAXD;AAYH,eAbD,CAaE,OAAOC,KAAP,EAAc;AACZV,gBAAAA,QAAQ,CAAC;AACLC,kBAAAA,IAAI,EAACH,KADA;AAELU,kBAAAA,OAAO,EAACE;AAFH,iBAAD,CAAR;AAIH;;AAtByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["import {API} from '../../config/index';\r\nimport {TRAER_TODAS,LOADING,ERROR} from '../types/marcasTypes';\r\n\r\nexport const traerTodas = ()=>async (dispatch)=>{\r\n    dispatch({\r\n        type:LOADING\r\n    });\r\n    try {\r\n        fetch(`${API}marca`).then(res=>res.json()).then(data=>{\r\n            const marcas = data.data;\r\n            dispatch({\r\n                type:TRAER_TODAS,\r\n                payload:marcas\r\n            });\r\n        }).catch(err=>{\r\n            dispatch({\r\n                type:ERROR,\r\n                payload:err\r\n            })\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ERROR,\r\n            payload:error\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}