{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport CardUbicacion from '../../src/components/CardUbicacion/index';\nimport OpcionesEnvio from '../../src/components/OpcionesEnvio';\nimport ZonaEnvio from '../../src/components/ZonaEnvio';\nimport Head from '../../src/components/Head';\nimport DetalleProductos from '../../src/components/DetalleProductos';\nimport Error from '../../src/components/Error';\nimport { connect } from 'react-redux';\nimport * as carritoActions from '../../store/actions/carritoActions';\nimport * as usuarioActions from '../../store/actions/usuarioActions';\nimport { API } from '../../config/index';\nimport Loader from '../../src/components/Loader/index';\nconst {\n  traerProductos: carritoTraerProductos\n} = carritoActions;\nconst {\n  verificarSesion\n} = usuarioActions;\n\nconst Checkout = props => {\n  const {\n    0: tipoEnvio,\n    1: setTipoEnvio\n  } = useState({\n    normal: true,\n    express: false,\n    local: false\n  });\n  const {\n    0: zonaEnvio,\n    1: setZonaEnvio\n  } = useState('');\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    props.carritoTraerProductos();\n  }, []);\n  useEffect(() => {\n    console.log(props.carritoReducer.productos);\n  }, [props.carritoReducer.productos]);\n\n  const cambiarTipoDeEnvio = tipoDeEnvio => {\n    if (tipoDeEnvio === 'normal') {\n      return setTipoEnvio({\n        normal: true,\n        express: false,\n        local: false\n      });\n    }\n\n    if (tipoDeEnvio === 'express') {\n      return setTipoEnvio({\n        normal: false,\n        express: true,\n        local: false\n      });\n    }\n\n    return setTipoEnvio({\n      normal: false,\n      express: false,\n      local: true\n    });\n  };\n\n  const insertarZonaDeEnvio = zona => {\n    setZonaEnvio(zona);\n  };\n\n  const handleClick = () => {\n    if (!props.usuarioReducer.usuario.address || props.usuarioReducer.usuario.address === '') return setError('Es obligatorio completar tu ubicación.');\n    if (zonaEnvio === '') return setError('Es obligatorio completar la zona de envío.');\n    setLoading(true);\n    let tipoDeEnvioActivo;\n\n    if (tipoEnvio.local) {\n      tipoDeEnvioActivo = 'Local';\n    }\n\n    ;\n\n    if (tipoEnvio.normal) {\n      tipoDeEnvioActivo = 'Domicilio';\n    }\n\n    if (tipoEnvio.express) {\n      tipoDeEnvioActivo = 'Express';\n    }\n\n    let dataEnvio = {\n      tipo: tipoDeEnvioActivo,\n      zona: zonaEnvio,\n      address: props.usuarioReducer.usuario.address\n    };\n    fetch(`${API}mercadopago`, {\n      method: 'POST'\n    }).then(res => res.json()).then(datamp => {\n      const {\n        response\n      } = datamp.info;\n      setLoading(false);\n      window.location.assign(response.init_point);\n    });\n    console.log(dataEnvio);\n  };\n\n  return !props.usuarioReducer.logueado ? __jsx(\"div\", {\n    className: \"mt-3\"\n  }, __jsx(Error, {\n    message: \"No puedes realizar una compra sin tener una sesi\\xF3n activa.\"\n  })) : __jsx(React.Fragment, null, props.carritoReducer.productos.length === 0 ? __jsx(\"div\", {\n    className: \"mt-3\"\n  }, __jsx(Error, {\n    message: \"No hay productos para finalizar la compra.\"\n  })) : __jsx(React.Fragment, null, loading ? __jsx(\"div\", {\n    className: \"container-loader\"\n  }, __jsx(Loader, null)) : null, __jsx(Head, {\n    title: \"Oliver Pet Shop\"\n  }), __jsx(\"div\", {\n    className: \"jsx-1473839781\" + \" \" + \"container mb-4\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1473839781\" + \" \" + \"row\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1473839781\" + \" \" + \"col-12 col-md-8 pt-4\"\n  }, __jsx(\"h2\", {\n    className: \"jsx-1473839781\"\n  }, \"\\xDAltimos pasos para terminar tu compra\"), error ? __jsx(Error, {\n    message: error\n  }) : null, __jsx(CardUbicacion, {\n    dataUser: props.usuarioReducer.usuario\n  }), __jsx(ZonaEnvio, {\n    setZonaEnvio: insertarZonaDeEnvio\n  }), __jsx(\"h2\", {\n    className: \"jsx-1473839781\" + \" \" + \"mt-5\"\n  }, \"Opciones de env\\xEDo\"), __jsx(OpcionesEnvio, {\n    tipoEnvio: tipoEnvio,\n    cambiarTipoDeEnvio: cambiarTipoDeEnvio\n  }), __jsx(\"button\", {\n    type: \"button\",\n    onClick: handleClick,\n    id: \"btn-continuar\",\n    className: \"jsx-1473839781\" + \" \" + \"btn btn-primary\"\n  }, \"Continuar\"), __jsx(\"div\", {\n    className: \"jsx-1473839781\" + \" \" + \"divTotalMobile\"\n  }, __jsx(\"span\", {\n    id: \"total\",\n    className: \"jsx-1473839781\"\n  }, \"$\", props.carritoReducer.subtotal), __jsx(\"button\", {\n    type: \"button\",\n    onClick: handleClick,\n    className: \"jsx-1473839781\" + \" \" + \"btn btn-primary\"\n  }, \"Continuar\"))), __jsx(\"div\", {\n    className: \"jsx-1473839781\" + \" \" + \"col-12 col-md-4 detalleProductos\"\n  }, __jsx(DetalleProductos, {\n    data: props.carritoReducer\n  }))), __jsx(_JSXStyle, {\n    id: \"1473839781\"\n  }, [\"h2.jsx-1473839781{font-size:25px;}\", \"button#btn-continuar.jsx-1473839781{float:right;margin-top:20px;}\", \".divTotalMobile.jsx-1473839781{display:none;}\", \"@media(max-width:768px){#btn-continuar.jsx-1473839781{display:none;}.divTotalMobile.jsx-1473839781{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;position:fixed;left:0;right:0px;bottom:0px;background-color:#f7f7f7;padding:16px;box-shadow:0 -2px 8px 2px rgba(0,0,0,.15);border-width:0 1px 1px;font-family:'Quicksand',sans-serif;}.detalleProductos.jsx-1473839781{display:none;}}\"]))));\n};\n\nconst mapStateToProps = ({\n  carritoReducer,\n  usuarioReducer\n}) => {\n  return {\n    carritoReducer,\n    usuarioReducer\n  };\n};\n\nconst mapDispatchToProps = {\n  carritoTraerProductos,\n  verificarSesion\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","map":null,"metadata":{},"sourceType":"module"}