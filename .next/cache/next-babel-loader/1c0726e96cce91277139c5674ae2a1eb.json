{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API } from '../../config/index';\nimport { VERIFICAR_SESION, LOGIN, LOGOUT, LOADING, ERROR, UPDATE_USER } from '../types/usuarioTypes';\nexport var login = function login(data) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var headers;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context.prev = 1;\n\n              if (!(data.email.trim() === '' || data.password.trim() === '')) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Es necesario completar todos los campos'\n              }));\n\n            case 4:\n              headers = new Headers();\n              headers.append(\"Content-Type\", \"application/json\");\n              return _context.abrupt(\"return\", fetch(\"\".concat(API, \"/login\"), {\n                method: 'POST',\n                body: JSON.stringify(data),\n                headers: headers\n              }).then(function (res) {\n                return res.json();\n              }).then(function (response) {\n                if (response.ok) {\n                  var objUsuario = {\n                    nombre: response.usuario.nombre,\n                    email: response.usuario.email,\n                    foto: response.usuario.foto,\n                    token: response.token,\n                    address: response.usuario.ubicacion,\n                    idUsuario: response.usuario.idUsuario,\n                    lat: response.usuario.lat,\n                    lon: response.usuario.lon,\n                    telefono: response.usuario.telefono\n                  };\n                  localStorage.setItem('oliverpetshop_usuario', JSON.stringify(objUsuario));\n                  dispatch({\n                    type: LOGIN,\n                    payload: localStorage.getItem('oliverpetshop_usuario')\n                  });\n                } else {\n                  return dispatch({\n                    type: ERROR,\n                    payload: response.info\n                  });\n                }\n              }));\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              return _context.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: _context.t0\n              }));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var logout = function logout() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context2.prev = 1;\n              localStorage.removeItem('oliverpetshop_usuario');\n              return _context2.abrupt(\"return\", dispatch({\n                type: LOGOUT\n              }));\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context2.t0\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 6]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var verificarSesion = function verificarSesion() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var dataUsuario;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dataUsuario = JSON.parse(localStorage.getItem('oliverpetshop_usuario'));\n\n              if (!dataUsuario) {\n                _context3.next = 4;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", dispatch({\n                type: VERIFICAR_SESION,\n                payload: {\n                  data: dataUsuario,\n                  logueado: true\n                }\n              }));\n\n            case 4:\n              return _context3.abrupt(\"return\", dispatch({\n                type: VERIFICAR_SESION,\n                payload: {\n                  data: null,\n                  logueado: false\n                }\n              }));\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: ERROR,\n                payload: _context3.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var register = function register(data) {\n  return function (dispatch) {\n    dispatch({\n      type: LOADING\n    });\n\n    try {\n      var headers = new Headers();\n      headers.append(\"Content-Type\", \"application/json\");\n      return fetch(\"\".concat(API, \"register\"), {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: headers\n      }).then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        if (response.ok) {\n          var objUsuario = {\n            nombre: response.usuario.nombre,\n            email: response.usuario.email,\n            foto: response.usuario.foto,\n            token: response.token,\n            address: response.usuario.address,\n            idUsuario: response.usuario.idUsuario\n          };\n          localStorage.setItem('oliverpetshop_usuario', JSON.stringify(objUsuario));\n          dispatch({\n            type: LOGIN,\n            payload: localStorage.getItem('oliverpetshop_usuario')\n          });\n        } else {\n          dispatch({\n            type: ERROR,\n            payload: response.info\n          });\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: ERROR,\n        payload: error\n      });\n    }\n  };\n};\nexport var singInWithGoogle = function singInWithGoogle(tokenId) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var headers;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context4.prev = 1;\n              headers = new Headers();\n              headers.append(\"Content-Type\", \"application/json\");\n              return _context4.abrupt(\"return\", fetch(\"\".concat(API, \"google/tokensignin\"), {\n                method: 'POST',\n                headers: headers,\n                body: JSON.stringify({\n                  token: tokenId\n                })\n              }).then(function (res) {\n                return res.json();\n              }).then(function (response) {\n                if (!response.ok) {\n                  return dispatch({\n                    type: ERROR,\n                    payload: response.info\n                  });\n                }\n\n                ;\n                var objUsuario = {\n                  nombre: response.usuario.nombre,\n                  email: response.usuario.email,\n                  foto: response.usuario.foto,\n                  token: response.token,\n                  address: response.usuario.address,\n                  idUsuario: response.usuario.idUsuario,\n                  lat: response.usuario.lat,\n                  lon: response.usuario.lon,\n                  telefono: response.usuario.telefono\n                };\n                localStorage.setItem('oliverpetshop_usuario', JSON.stringify(objUsuario));\n                dispatch({\n                  type: LOGIN,\n                  payload: localStorage.getItem('oliverpetshop_usuario')\n                });\n              }));\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context4.t0\n              });\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 7]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var actualizarFoto = function actualizarFoto(data, id) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      var headers, token, request, _dataRequest;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context5.prev = 1;\n              headers = new Headers();\n              token = JSON.parse(localStorage.getItem('oliverpetshop_usuario')).token;\n              headers.append(\"token\", token);\n              _context5.next = 7;\n              return fetch(\"\".concat(API, \"actualizarFotoUsuarioDesdeWeb/\").concat(id), {\n                method: 'PUT',\n                headers: headers,\n                body: data\n              });\n\n            case 7:\n              request = _context5.sent;\n              _context5.next = 10;\n              return request.json();\n\n            case 10:\n              _dataRequest = _context5.sent;\n\n              if (_dataRequest.ok) {\n                localStorage.setItem('oliverpetshop_usuario', JSON.stringify(_dataRequest.user));\n                dispatch({\n                  type: UPDATE_USER,\n                  payload: _dataRequest.user\n                });\n              }\n\n              _context5.next = 17;\n              break;\n\n            case 14:\n              _context5.prev = 14;\n              _context5.t0 = _context5[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context5.t0\n              });\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 14]]);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var actualizarUsuario = function actualizarUsuario(data, id) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch) {\n      var headers, token, request, _dataRequest2;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context6.prev = 1;\n              headers = new Headers();\n              token = JSON.parse(localStorage.getItem('oliverpetshop_usuario')).token;\n\n              if (token) {\n                _context6.next = 6;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Token incorrecto'\n              }));\n\n            case 6:\n              headers.append('token', token);\n              headers.append(\"Content-Type\", \"application/json\");\n              _context6.next = 10;\n              return fetch(\"\".concat(API, \"actualizarUsuarioDesdeWeb/\").concat(id), {\n                method: 'PUT',\n                headers: headers,\n                body: JSON.stringify(data)\n              });\n\n            case 10:\n              request = _context6.sent;\n\n              if (!(request.status != 200)) {\n                _context6.next = 13;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Ocurrio un error, ¡intentelo más tarde!'\n              }));\n\n            case 13:\n              _context6.next = 15;\n              return request.json();\n\n            case 15:\n              _dataRequest2 = _context6.sent;\n\n              if (!_dataRequest2.ok) {\n                _context6.next = 19;\n                break;\n              }\n\n              localStorage.setItem('oliverpetshop_usuario', JSON.stringify(_dataRequest2.user));\n              return _context6.abrupt(\"return\", dispatch({\n                type: UPDATE_USER,\n                payload: _dataRequest2.user\n              }));\n\n            case 19:\n              return _context6.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: _dataRequest2.info\n              }));\n\n            case 22:\n              _context6.prev = 22;\n              _context6.t0 = _context6[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: _context6.t0.message\n              });\n\n            case 25:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[1, 22]]);\n    }));\n\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var sendEmailForResetPassword = function sendEmailForResetPassword(idUsuario) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch) {\n      var headers, token, request, _dataRequest3;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context7.prev = 1;\n              headers = new Headers();\n              token = JSON.parse(localStorage.getItem('oliverpetshop_usuario')).token;\n\n              if (token) {\n                _context7.next = 6;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Token incorrecto'\n              }));\n\n            case 6:\n              headers.append('token', token);\n              headers.append(\"Content-Type\", \"application/json\");\n              _context7.next = 10;\n              return fetch(\"\".concat(API, \"resetPassword\"), {\n                method: 'POST',\n                headers: headers,\n                body: JSON.stringify({\n                  idUsuario: idUsuario\n                })\n              });\n\n            case 10:\n              request = _context7.sent;\n\n              if (!(request.status != 200)) {\n                _context7.next = 13;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Ocurrio un error, ¡intentelo más tarde!'\n              }));\n\n            case 13:\n              _context7.next = 15;\n              return request.json();\n\n            case 15:\n              _dataRequest3 = _context7.sent;\n\n              if (!_dataRequest3.ok) {\n                _context7.next = 18;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", console.log(_dataRequest3));\n\n            case 18:\n              return _context7.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: _dataRequest3.info\n              }));\n\n            case 21:\n              _context7.prev = 21;\n              _context7.t0 = _context7[\"catch\"](1);\n              dispatch({\n                type: ERROR,\n                payload: dataRequest.info\n              });\n\n            case 24:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 21]]);\n    }));\n\n    return function (_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};\nexport var updatePassword = function updatePassword(data, token) {\n  return /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              dispatch({\n                type: LOADING\n              });\n              _context8.prev = 1;\n\n              if (!(data.confirmPassword === '' || data.newPassword === '')) {\n                _context8.next = 4;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Los dos campos son obligarios.'\n              }));\n\n            case 4:\n              console.log(data);\n              console.log(data.confirmPassword == data.newPassword);\n\n              if (!(data.confirmPassword != data.newPassword)) {\n                _context8.next = 8;\n                break;\n              }\n\n              return _context8.abrupt(\"return\", dispatch({\n                type: ERROR,\n                payload: 'Las contraseñas no coinciden.'\n              }));\n\n            case 8:\n              _context8.next = 12;\n              break;\n\n            case 10:\n              _context8.prev = 10;\n              _context8.t0 = _context8[\"catch\"](1);\n\n            case 12:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[1, 10]]);\n    }));\n\n    return function (_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/franco/desarrollo/proyecto_oliver/oliver-web-next/store/actions/usuarioActions.js"],"names":["API","VERIFICAR_SESION","LOGIN","LOGOUT","LOADING","ERROR","UPDATE_USER","login","data","dispatch","type","email","trim","password","payload","headers","Headers","append","fetch","method","body","JSON","stringify","then","res","json","response","ok","objUsuario","nombre","usuario","foto","token","address","ubicacion","idUsuario","lat","lon","telefono","localStorage","setItem","getItem","info","console","log","logout","removeItem","verificarSesion","dataUsuario","parse","logueado","register","error","singInWithGoogle","tokenId","actualizarFoto","id","request","dataRequest","user","actualizarUsuario","status","message","sendEmailForResetPassword","updatePassword","confirmPassword","newPassword"],"mappings":"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","sourcesContent":["import {API} from '../../config/index';\nimport {VERIFICAR_SESION,LOGIN,LOGOUT,LOADING,ERROR,UPDATE_USER} from '../types/usuarioTypes';\n\nexport const login = (data)=>async(dispatch)=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        if(data.email.trim() === '' || data.password.trim() === ''){\n            return dispatch({\n                type:ERROR,\n                payload:'Es necesario completar todos los campos'\n            })\n        }\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        return fetch(`${API}/login`,{\n            method:'POST',\n            body:JSON.stringify(data),\n            headers\n        }).then(res=>res.json()).then(response=>{\n            if(response.ok){\n                let objUsuario = {\n                    nombre:response.usuario.nombre,\n                    email:response.usuario.email,\n                    foto:response.usuario.foto,\n                    token:response.token,\n                    address:response.usuario.ubicacion,\n                    idUsuario:response.usuario.idUsuario,\n                    lat:response.usuario.lat,\n                    lon:response.usuario.lon,\n                    telefono:response.usuario.telefono\n                }\n                localStorage.setItem('oliverpetshop_usuario',JSON.stringify(objUsuario));\n                dispatch({\n                    type:LOGIN,\n                    payload:localStorage.getItem('oliverpetshop_usuario')\n                })\n            }else{\n                return dispatch({\n                    type:ERROR,\n                    payload:response.info\n                })\n            }\n        })\n    } catch (error) {\n        console.log(error);\n        return dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}\n\nexport const logout = ()=>async(dispatch)=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        localStorage.removeItem('oliverpetshop_usuario');\n        return dispatch({\n            type:LOGOUT\n        })\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}\n\nexport const verificarSesion=()=>async(dispatch)=>{\n    try {\n        let dataUsuario = JSON.parse(localStorage.getItem('oliverpetshop_usuario'));\n        if(dataUsuario){\n            return dispatch({\n                type:VERIFICAR_SESION,\n                payload:{data:dataUsuario,logueado:true}\n            })\n        }\n        return dispatch({\n            type:VERIFICAR_SESION,\n            payload:{data:null,logueado:false}\n        })\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}\n\nexport const register=(data)=>(dispatch)=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        return fetch(`${API}register`,{\n            method:'POST',\n            body:JSON.stringify(data),\n            headers\n        }).then(res=>res.json()).then(response=>{\n            if(response.ok){\n                let objUsuario = {\n                    nombre:response.usuario.nombre,\n                    email:response.usuario.email,\n                    foto:response.usuario.foto,\n                    token:response.token,\n                    address:response.usuario.address,\n                    idUsuario:response.usuario.idUsuario\n                }\n                localStorage.setItem('oliverpetshop_usuario',JSON.stringify(objUsuario));\n                dispatch({\n                    type:LOGIN,\n                    payload:localStorage.getItem('oliverpetshop_usuario')\n                });\n            }else{\n                dispatch({\n                    type:ERROR,\n                    payload:response.info\n                })\n            }\n        })\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}\n\nexport const singInWithGoogle = tokenId => async(dispatch)=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        let headers = new Headers();\n        headers.append(\"Content-Type\", \"application/json\");\n        return fetch(`${API}google/tokensignin`,{\n            method:'POST',\n            headers,\n            body:JSON.stringify({token:tokenId})\n        }).then(res=>res.json()).then(response=>{\n            if(!response.ok){\n                return dispatch({\n                    type:ERROR,\n                    payload:response.info\n                })\n            };\n            let objUsuario = {\n                nombre:response.usuario.nombre,\n                email:response.usuario.email,\n                foto:response.usuario.foto,\n                token:response.token,\n                address:response.usuario.address,\n                idUsuario:response.usuario.idUsuario,\n                lat:response.usuario.lat,\n                lon:response.usuario.lon,\n                telefono:response.usuario.telefono\n            }\n            localStorage.setItem('oliverpetshop_usuario',JSON.stringify(objUsuario));\n            dispatch({\n                type:LOGIN,\n                payload:localStorage.getItem('oliverpetshop_usuario')\n            });\n        })\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}\n\nexport const actualizarFoto = (data,id) =>async(dispatch)=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        let headers = new Headers();\n        let token = JSON.parse(localStorage.getItem('oliverpetshop_usuario')).token;\n        headers.append(\"token\", token);\n        const request = await fetch(`${API}actualizarFotoUsuarioDesdeWeb/${id}`,{\n            method:'PUT',\n            headers,\n            body:data\n        });\n        const dataRequest = await request.json();\n        if(dataRequest.ok){\n            localStorage.setItem('oliverpetshop_usuario',JSON.stringify(dataRequest.user));\n            dispatch({\n                type:UPDATE_USER,\n                payload:dataRequest.user\n            })\n        }\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error\n        })\n    }\n}\n\nexport const actualizarUsuario = (data,id)=>async dispatch=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        let headers = new Headers();\n        let token = JSON.parse(localStorage.getItem('oliverpetshop_usuario')).token;\n        if(!token) return dispatch({type:ERROR,payload:'Token incorrecto'});\n        headers.append('token',token);\n        headers.append(\"Content-Type\", \"application/json\");\n        const request = await fetch(`${API}actualizarUsuarioDesdeWeb/${id}`,{\n            method:'PUT',\n            headers,\n            body:JSON.stringify(data)\n        });\n        if(request.status!=200) return dispatch({type:ERROR,payload:'Ocurrio un error, ¡intentelo más tarde!'})\n        const dataRequest = await request.json();\n        if(dataRequest.ok){\n            localStorage.setItem('oliverpetshop_usuario',JSON.stringify(dataRequest.user));\n            return dispatch({\n                type:UPDATE_USER,\n                payload:dataRequest.user\n            })\n        }\n        return dispatch({\n            type:ERROR,\n            payload:dataRequest.info\n        })\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:error.message\n        })\n    }\n}\n\nexport const sendEmailForResetPassword = idUsuario=> async dispatch=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        let headers = new Headers();\n        let token = JSON.parse(localStorage.getItem('oliverpetshop_usuario')).token;\n        if(!token) return dispatch({type:ERROR,payload:'Token incorrecto'});\n        headers.append('token',token);\n        headers.append(\"Content-Type\", \"application/json\");\n        const request = await fetch(`${API}resetPassword`,{\n            method:'POST',\n            headers,\n            body:JSON.stringify({idUsuario})\n        });\n        if(request.status!=200) return dispatch({type:ERROR,payload:'Ocurrio un error, ¡intentelo más tarde!'})\n        const dataRequest = await request.json();\n        if(dataRequest.ok){\n            return console.log(dataRequest);\n        }\n        return dispatch({\n            type:ERROR,\n            payload:dataRequest.info\n        })\n    } catch (error) {\n        dispatch({\n            type:ERROR,\n            payload:dataRequest.info\n        })\n    }\n}\n\nexport const updatePassword = (data,token) => async dispatch=>{\n    dispatch({\n        type:LOADING\n    });\n    try {\n        if(data.confirmPassword === '' || data.newPassword ===''){\n            return dispatch({\n                type:ERROR,\n                payload:'Los dos campos son obligarios.'\n            });\n        }\n        console.log(data);\n        console.log(data.confirmPassword == data.newPassword);\n        if(data.confirmPassword != data.newPassword){\n            return dispatch({\n                type:ERROR,\n                payload:'Las contraseñas no coinciden.'\n            });\n        }\n    } catch (error) {\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}