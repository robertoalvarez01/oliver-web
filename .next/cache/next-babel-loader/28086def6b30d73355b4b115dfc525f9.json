{"ast":null,"code":"import slugify from 'slugify';\n\nfunction slug(name) {\n  return slugify(name, {\n    lower: true\n  }).replace(/[^\\w\\-]+/g, '');\n}\n\nfunction isMobile() {\n  if (window.innerWidth > 860) return false;\n  return navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/BlackBerry/i) || window.innerWidth <= 860;\n}\n\nfunction utf8_decode(strData) {\n  // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/utf8_decode/\n  // original by: Webtoolkit.info (https://www.webtoolkit.info/)\n  //    input by: Aman Gupta\n  //    input by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: Norman \"zEh\" Fuchs\n  // bugfixed by: hitwork\n  // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\n  // bugfixed by: Kevin van Zonneveld (https://kvz.io)\n  // bugfixed by: kirilloid\n  // bugfixed by: w35l3y (https://www.wesley.eti.br)\n  //   example 1: utf8_decode('Kevin van Zonneveld')\n  //   returns 1: 'Kevin van Zonneveld'\n  var tmpArr = [];\n  var i = 0;\n  var c1 = 0;\n  var seqlen = 0;\n  strData += '';\n\n  while (i < strData.length) {\n    c1 = strData.charCodeAt(i) & 0xFF;\n    seqlen = 0; // https://en.wikipedia.org/wiki/UTF-8#Codepage_layout\n\n    if (c1 <= 0xBF) {\n      c1 = c1 & 0x7F;\n      seqlen = 1;\n    } else if (c1 <= 0xDF) {\n      c1 = c1 & 0x1F;\n      seqlen = 2;\n    } else if (c1 <= 0xEF) {\n      c1 = c1 & 0x0F;\n      seqlen = 3;\n    } else {\n      c1 = c1 & 0x07;\n      seqlen = 4;\n    }\n\n    for (var ai = 1; ai < seqlen; ++ai) {\n      c1 = c1 << 0x06 | strData.charCodeAt(ai + i) & 0x3F;\n    }\n\n    if (seqlen === 4) {\n      c1 -= 0x10000;\n      tmpArr.push(String.fromCharCode(0xD800 | c1 >> 10 & 0x3FF));\n      tmpArr.push(String.fromCharCode(0xDC00 | c1 & 0x3FF));\n    } else {\n      tmpArr.push(String.fromCharCode(c1));\n    }\n\n    i += seqlen;\n  }\n\n  return tmpArr.join('');\n}\n\nexport { slug, isMobile, utf8_decode };","map":{"version":3,"sources":["C:/Users/franc/Documents/oliver-2/oliver-sitio/helpers/index.js"],"names":["slugify","slug","name","lower","replace","isMobile","window","innerWidth","navigator","userAgent","match","utf8_decode","strData","tmpArr","i","c1","seqlen","length","charCodeAt","ai","push","String","fromCharCode","join"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;;AAEA,SAASC,IAAT,CAAcC,IAAd,EAAoB;AAChB,SAAOF,OAAO,CAACE,IAAD,EAAM;AAACC,IAAAA,KAAK,EAAC;AAAP,GAAN,CAAP,CAA2BC,OAA3B,CAAmC,WAAnC,EAAgD,EAAhD,CAAP;AACH;;AAED,SAASC,QAAT,GAAoB;AAChB,MAAGC,MAAM,CAACC,UAAP,GAAkB,GAArB,EAA0B,OAAO,KAAP;AAC1B,SACKC,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,UAA1B,CAAD,IACCF,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,QAA1B,CADD,IAECF,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,SAA1B,CAFD,IAGCF,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,OAA1B,CAHD,IAICF,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,OAA1B,CAJD,IAKCF,SAAS,CAACC,SAAV,CAAoBC,KAApB,CAA0B,aAA1B,CALD,IAMAJ,MAAM,CAACC,UAAP,IAAmB,GAPvB;AASH;;AACD,SAASI,WAAT,CAAsBC,OAAtB,EAA+B;AAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,EAAE,GAAG,CAAT;AACA,MAAIC,MAAM,GAAG,CAAb;AAEAJ,EAAAA,OAAO,IAAI,EAAX;;AAEA,SAAOE,CAAC,GAAGF,OAAO,CAACK,MAAnB,EAA2B;AACzBF,IAAAA,EAAE,GAAGH,OAAO,CAACM,UAAR,CAAmBJ,CAAnB,IAAwB,IAA7B;AACAE,IAAAA,MAAM,GAAG,CAAT,CAFyB,CAIzB;;AACA,QAAID,EAAE,IAAI,IAAV,EAAgB;AACdA,MAAAA,EAAE,GAAIA,EAAE,GAAG,IAAX;AACAC,MAAAA,MAAM,GAAG,CAAT;AACD,KAHD,MAGO,IAAID,EAAE,IAAI,IAAV,EAAgB;AACrBA,MAAAA,EAAE,GAAIA,EAAE,GAAG,IAAX;AACAC,MAAAA,MAAM,GAAG,CAAT;AACD,KAHM,MAGA,IAAID,EAAE,IAAI,IAAV,EAAgB;AACrBA,MAAAA,EAAE,GAAIA,EAAE,GAAG,IAAX;AACAC,MAAAA,MAAM,GAAG,CAAT;AACD,KAHM,MAGA;AACLD,MAAAA,EAAE,GAAIA,EAAE,GAAG,IAAX;AACAC,MAAAA,MAAM,GAAG,CAAT;AACD;;AAED,SAAK,IAAIG,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGH,MAAtB,EAA8B,EAAEG,EAAhC,EAAoC;AAClCJ,MAAAA,EAAE,GAAKA,EAAE,IAAI,IAAP,GAAgBH,OAAO,CAACM,UAAR,CAAmBC,EAAE,GAAGL,CAAxB,IAA6B,IAAnD;AACD;;AAED,QAAIE,MAAM,KAAK,CAAf,EAAkB;AAChBD,MAAAA,EAAE,IAAI,OAAN;AACAF,MAAAA,MAAM,CAACO,IAAP,CAAYC,MAAM,CAACC,YAAP,CAAoB,SAAWP,EAAE,IAAI,EAAP,GAAa,KAA3C,CAAZ;AACAF,MAAAA,MAAM,CAACO,IAAP,CAAYC,MAAM,CAACC,YAAP,CAAoB,SAAUP,EAAE,GAAG,KAAnC,CAAZ;AACD,KAJD,MAIO;AACLF,MAAAA,MAAM,CAACO,IAAP,CAAYC,MAAM,CAACC,YAAP,CAAoBP,EAApB,CAAZ;AACD;;AAEDD,IAAAA,CAAC,IAAIE,MAAL;AACD;;AAED,SAAOH,MAAM,CAACU,IAAP,CAAY,EAAZ,CAAP;AACH;;AAED,SAAQtB,IAAR,EAAaI,QAAb,EAAsBM,WAAtB","sourcesContent":["import slugify from 'slugify';\r\n\r\nfunction slug(name) {\r\n    return slugify(name,{lower:true}).replace(/[^\\w\\-]+/g, '');\r\n}\r\n\r\nfunction isMobile() {\r\n    if(window.innerWidth>860) return false;\r\n    return (\r\n        (navigator.userAgent.match(/Android/i)) ||\r\n        (navigator.userAgent.match(/webOS/i)) ||\r\n        (navigator.userAgent.match(/iPhone/i)) ||\r\n        (navigator.userAgent.match(/iPod/i)) ||\r\n        (navigator.userAgent.match(/iPad/i)) ||\r\n        (navigator.userAgent.match(/BlackBerry/i))||\r\n        window.innerWidth<=860\r\n    );\r\n}\r\nfunction utf8_decode (strData) { // eslint-disable-line camelcase\r\n    //  discuss at: https://locutus.io/php/utf8_decode/\r\n    // original by: Webtoolkit.info (https://www.webtoolkit.info/)\r\n    //    input by: Aman Gupta\r\n    //    input by: Brett Zamir (https://brett-zamir.me)\r\n    // improved by: Kevin van Zonneveld (https://kvz.io)\r\n    // improved by: Norman \"zEh\" Fuchs\r\n    // bugfixed by: hitwork\r\n    // bugfixed by: Onno Marsman (https://twitter.com/onnomarsman)\r\n    // bugfixed by: Kevin van Zonneveld (https://kvz.io)\r\n    // bugfixed by: kirilloid\r\n    // bugfixed by: w35l3y (https://www.wesley.eti.br)\r\n    //   example 1: utf8_decode('Kevin van Zonneveld')\r\n    //   returns 1: 'Kevin van Zonneveld'\r\n  \r\n    var tmpArr = []\r\n    var i = 0\r\n    var c1 = 0\r\n    var seqlen = 0\r\n  \r\n    strData += ''\r\n  \r\n    while (i < strData.length) {\r\n      c1 = strData.charCodeAt(i) & 0xFF\r\n      seqlen = 0\r\n  \r\n      // https://en.wikipedia.org/wiki/UTF-8#Codepage_layout\r\n      if (c1 <= 0xBF) {\r\n        c1 = (c1 & 0x7F)\r\n        seqlen = 1\r\n      } else if (c1 <= 0xDF) {\r\n        c1 = (c1 & 0x1F)\r\n        seqlen = 2\r\n      } else if (c1 <= 0xEF) {\r\n        c1 = (c1 & 0x0F)\r\n        seqlen = 3\r\n      } else {\r\n        c1 = (c1 & 0x07)\r\n        seqlen = 4\r\n      }\r\n  \r\n      for (var ai = 1; ai < seqlen; ++ai) {\r\n        c1 = ((c1 << 0x06) | (strData.charCodeAt(ai + i) & 0x3F))\r\n      }\r\n  \r\n      if (seqlen === 4) {\r\n        c1 -= 0x10000\r\n        tmpArr.push(String.fromCharCode(0xD800 | ((c1 >> 10) & 0x3FF)))\r\n        tmpArr.push(String.fromCharCode(0xDC00 | (c1 & 0x3FF)))\r\n      } else {\r\n        tmpArr.push(String.fromCharCode(c1))\r\n      }\r\n  \r\n      i += seqlen\r\n    }\r\n  \r\n    return tmpArr.join('')\r\n}\r\n\r\nexport {slug,isMobile,utf8_decode}"]},"metadata":{},"sourceType":"module"}